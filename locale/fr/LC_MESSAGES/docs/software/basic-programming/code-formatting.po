# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Andre Theberge <atheberge2@videotron.ca>, 2021
# Regis Bekale <rbekale@robotiquefirstquebec.org>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-09 04:14+0000\n"
"PO-Revision-Date: 2021-03-08 16:23+0000\n"
"Last-Translator: Regis Bekale <rbekale@robotiquefirstquebec.org>, 2021\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:2
msgid "Using a Code Formatter"
msgstr "Utilisation d’un formateur de code"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:4
msgid ""
"Code formatters exist to ensure that the style of code written is consistent"
" throughout the entire codebase. This is used in many major projects; from "
"Android to OpenCV. Teams may wish to add a formatter throughout their robot "
"code to ensure that the codebase maintains readability and consistency "
"throughout."
msgstr ""
"Les formateurs de code existent pour s’assurer que le style de code écrit "
"est cohérent dans l’ensemble du code de base. Ceci est utilisé dans de "
"nombreux grands projets; d’Android à OpenCV. Les équipes peuvent souhaiter "
"ajouter un formateur dans tout leur code robot pour s’assurer que le code de"
" base maintient la lisibilité et la cohérence tout le long."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:6
msgid ""
"For this article, we will highlight using `Spotless "
"<https://github.com/diffplug/spotless>`__ for Java teams and `wpiformat "
"<https://github.com/wpilibsuite/styleguide/blob/main/wpiformat/README.rst>`__"
" for C++ teams."
msgstr ""
"Pour cet article, nous mettons l'emphase sur l’utilisation de `Spotless "
"<https://github.com/diffplug/spotless>`__ pour les équipes Java et "
"`wpiformat "
"<https://github.com/wpilibsuite/styleguide/blob/main/wpiformat/README.rst>`__"
" pour les équipes C++."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:9
msgid "Spotless"
msgstr "Spotless"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:12
msgid "Configuration"
msgstr "Configuration"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:14
msgid ""
"Necessary ``build.gradle`` changes are required to get Spotless functional. "
"In the ``plugins {}`` block of your ``build.gradle``, add the Spotless "
"plugin so it appears similar to the below."
msgstr ""
"Des modifications ``build.gradle`` nécessaires sont requises pour que "
"Spotless soit fonctionnel. Dans le bloc ``plugins {}`` de votre "
"``build.gradle``, ajoutez le plugin Spotless de sorte qu’il semble similaire"
" à celui apparaissant ci-dessous."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:24
msgid ""
"Then ensure you add a required ``spotless {}`` block to correctly configure "
"spotless. This can just get placed at the end of your ``build.gradle``."
msgstr ""
"Ensuite, assurez-vous d’ajouter un bloc ``spotless {}`` nécessaire pour "
"configurer correctement Spotless. Celui-ci peut simplement être placé à la "
"fin de votre fichier ``build.gradle``."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:72
msgid "Running Spotless"
msgstr "Exécution de Spotless"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:74
msgid ""
"Spotless can be ran using ``./gradlew spotlessApply`` which will apply all "
"formatting options. You can also specify a specific task by just adding the "
"name of formatter. An example is ``./gradlew spotlessmiscApply``."
msgstr ""
"Spotless peut être exécuté en utilisant la commande ``./gradlew "
"spotlessApply`` qui appliquera toutes les options de mise en forme. Vous "
"pouvez également spécifier une tâche spécifique en ajoutant simplement le "
"nom du formateur. Un exemple est ``./gradlew spotlessmiscApply``."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:76
msgid ""
"Spotless can also be used as a :doc:`CI check <robot-code-ci>`. The check is"
" ran with ``./gradlew spotlessCheck``."
msgstr ""
"Spotless peut également être utilisé comme un  :doc:`vérificateur CI <robot-"
"code-ci>`. Le vérificateur est lancé à l'aide de la commande ``./gradlew "
"spotlessCheck``."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:79
msgid "Explanation of Options"
msgstr "Explication des options"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:81
msgid ""
"Each ``format`` section highlights formatting of custom files in the "
"project. The ``java`` and ``groovyGradle`` are natively supported by "
"spotless, so they are defined differently."
msgstr ""
"Chaque section ``format`` met en évidence le formatage des fichiers "
"personnalisés dans le projet. Les ``java`` et ``groovyGradle`` sont "
"nativement soutenus par Spotless, de sorte qu’ils sont définis différemment."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:83
msgid "Breaking this down, we can split this into multiple parts."
msgstr "En décomposant ceci, on peut le diviser en plusieurs parties."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:85
msgid "Formatting Java"
msgstr "Mise en forme de Java"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:86
msgid "Formatting Gradle files"
msgstr "Mise en forme des fichiers Gradle"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:87
msgid "Formatting XML files"
msgstr "Mise en forme des fichiers XML"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:88
msgid "Formatting Miscellaneous files"
msgstr "Mise en forme de fichiers divers"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:90
msgid ""
"They are all similar, except for some small differences that will be "
"explained. The below example will highlight the ``java {}`` block."
msgstr ""
"Ils sont tous similaires, à l’exception de quelques petites différences qui "
"seront expliquées. L’exemple ci-dessous mettra l'emphase sur le bloc ``java "
"{}`` "

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:106
msgid "Let's explain what each of the options mean."
msgstr "Expliquons la signification de chacune des options."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:115
msgid ""
"The above example tells spotless where our Java classes are and to exclude "
"the ``build`` directory. The rest of the options are fairly self-"
"explanatory."
msgstr ""
"L’exemple ci-dessus indique à Spotless où se trouvent nos classes Java et "
"d’exclure le dossier ``build``. Les options restantes sont assez explicites."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:117
msgid ""
"``toggleOffOn()`` adds the ability to have spotless ignore specific portions"
" of a project. The usage looks like the following"
msgstr ""
"``toggleOffOn()`` ajoute à Spotless la possibilité d’ignorer des parties "
"spécifiques d’un projet. L’utilisation ressemble à ce qui suit"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:129
msgid ""
"``googleJavaFormat()`` tells spotless to format according to the `Google "
"Style Guide <https://google.github.io/styleguide/javaguide.html>`__"
msgstr ""
"``googleJavaFormat()`` indique à Spotless de mettre en forme selon le `Guide"
" de Style de Google <https://google.github.io/styleguide/javaguide.html>`__"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:130
msgid ""
"``removeUnusedImports()`` will remove any unused imports from any of your "
"java classes"
msgstr ""
"``removeUnusedImports()`` supprimera toutes les importations inutilisées de "
"l’une de vos classes java"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:131
msgid ""
"``trimTrailingWhitespace()`` will remove any extra whitespace at the end of "
"your lines"
msgstr ""
"``trimTrailingWhitespace()`` supprimera tout espace blanc supplémentaire à "
"la fin de vos lignes"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:132
msgid ""
"``endWithNewline()`` will add a newline character to the end of your classes"
msgstr ""
"``endWithNewline()`` ajoutera un caractère newline à la fin de vos classes"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:134
msgid ""
"In the ``groovyGradle`` block, there is a ``greclipse`` option. This is the "
"formatter that spotless uses to format gradle files."
msgstr ""
"Dans le bloc ``groovyGradle``, il existe une option ``greclipse``. C’est le "
"formateur que Spotless utilise pour mettre en forme les fichiers gradle."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:136
msgid ""
"Additionally, there is a ``eclipseWtp`` option in the ``xml`` block. This "
"stands for \"Gradle Web Tools Platform\" and is the formatter to format "
"``xml`` files. Teams not using any XML files may wish to not include this "
"configuration."
msgstr ""
"Additionnellement, il existe une option ``eclipseWtp`` dans le bloc ``xml``."
" Il s’agit de \"Gradle Web Tools Platform\" et est le formateur servant à "
"mettre en forme les fichiers ``xml``. Les équipes qui n’utilisent pas de "
"fichiers XML peuvent choisir de ne pas inclure cette configuration."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:138
msgid ""
"A full list of configurations is available on the `Spotless README "
"<https://github.com/diffplug/spotless>`__"
msgstr ""
"Une liste complète des configurations est disponible dans le fichier "
"`Spotless README <https://github.com/diffplug/spotless>`__"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:141
msgid "Issues with Line Endings"
msgstr "Problèmes avec les fins de ligne"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:143
msgid ""
"Spotless will attempt to apply line endings per-OS, which means Git diffs "
"will be constantly changing if two users are on different OSes (Unix vs "
"Windows). It's recommended that teams who contribute to the same repository "
"from multiple OSes utilize a ``.gitattributes`` file. The following should "
"suffice for handling line endings."
msgstr ""
"Spotless tentera d’appliquer des fins de ligne par OS, ce qui signifie que "
"les commandes Git diffs changeront constamment si deux utilisateurs sont sur"
" des OS différents (Unix vs Windows). Il est recommandé aux équipes qui "
"contribuent au même dépôt à partir de plusieurs OS d’utiliser un fichier "
"``.gitattributes``. Ce qui suit devrait suffire pour la manipulation des "
"fins de ligne."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:153
msgid "wpiformat"
msgstr "wpiformat"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:156
msgid "Requirements"
msgstr "Exigences"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:158
msgid "`Python 3.6 or higher <https://www.python.org/>`__"
msgstr "`Python 3.6 ou ultérieur <https://www.python.org/>`__"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:159
msgid ""
"clang-format (included with `LLVM "
"<https://releases.llvm.org/download.html>`__)"
msgstr ""
"format clang (inclus avec `LLVM "
"<https://releases.llvm.org/download.html>`__)"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:161
msgid ""
"Windows is not currently supported at this time! Installing LLVM with Clang "
"**will** break normal robot builds if installed on Windows."
msgstr ""
"Windows n’est pas pris en charge pour le moment! L’installation de LLVM avec"
" Clang **va** briser les compilations normales de code robot si elle est "
"installée sur Windows."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:163
msgid ""
"You can install `wpiformat "
"<https://github.com/wpilibsuite/styleguide/blob/main/wpiformat/README.rst>`__"
" by typing ``pip3 install wpiformat`` into a terminal or command prompt."
msgstr ""
"Vous pouvez installer `wpiformat "
"<https://github.com/wpilibsuite/styleguide/blob/main/wpiformat/README.rst>`__"
" en tapant ``pip3 install wpiformat`` dans un terminal ou une invite de "
"commande."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:166
msgid "Usage"
msgstr "Utilisation"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:168
msgid ""
"wpiformat can be ran by typing ``wpiformat`` in a console. This will format "
"with ``clang-format``. Three configuration files are required (``.clang-"
"format``, ``.styleguide``, ``.styleguide-license``). These must exist in the"
" project root."
msgstr ""
"wpiformat peut être couru en tapant ``wpiformat`` dans une console. La mise "
"en forme sera effectuée à l'aide de ``clang-format``. Trois fichiers de "
"configuration sont nécessaires (``.clang-format``, ``.styleguide``, "
"``.styleguide-license``). Ceux-ci doivent être présents dans la racine du "
"projet."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:170
msgid ""
"``.clang-format``: :download:`Download "
"<https://raw.githubusercontent.com/wpilibsuite/allwpilib/main/.clang-"
"format>`"
msgstr ""
"``.clang-format``: :download:`Télécharger "
"<https://raw.githubusercontent.com/wpilibsuite/allwpilib/main/.clang-"
"format>`"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:171
msgid ""
"``.styleguide-license``: :download:`Download "
"<https://raw.githubusercontent.com/wpilibsuite/allwpilib/main/.styleguide-"
"license>`"
msgstr ""
"``.styleguide-license``: :download:`Télécharger "
"<https://raw.githubusercontent.com/wpilibsuite/allwpilib/main/.styleguide-"
"license>`"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:173
msgid "An example styleguide is shown below:"
msgstr "Un exemple de guide de style est montré ci-dessous:"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:192
msgid ""
"Teams can adapt ``.styleguide`` and ``.styleguide-license`` however they "
"wish. It's important that these are not deleted, as they are required to run"
" wpiformat!"
msgstr ""
"Les équipes peuvent adapter ``.styleguide`` et ``.styleguide-license``  "
"comme elles le souhaitent. Il est important que ceux-ci ne sont pas "
"supprimés, car ils sont requis pour exécuter wpiformat!"

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:194
msgid ""
"You can turn this into a :doc:`CI check <robot-code-ci>` by running ``git "
"--no-pager diff --exit-code HEAD``. It can be configured with a ``.clang-"
"format`` configuration file. An example configuration file is provided "
"below."
msgstr ""
"Vous pouvez le transformer en un :doc:`vérificateur CI <robot-code-ci>`  en "
"exécutant  la commande ``git --no-pager diff --exit-code HEAD``. Il peut "
"être configuré à l'aide d'un fichier de configuration ``.clang-format``. Un "
"exemple de fichier de configuration est fourni ci-dessous."

#: ../../frc-docs/source/docs/software/basic-programming/code-formatting.rst:196
msgid "Below is an example GitHub Actions check that uses wpiformat"
msgstr ""
"Voici un exemple de vérificateur GitHub Actions qui fait usage de wpiformat"
