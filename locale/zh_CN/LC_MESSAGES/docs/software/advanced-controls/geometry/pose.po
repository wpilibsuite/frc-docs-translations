# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 楚涵 张 <zhangchuhan1210@126.com>, 2020
# Yitong Zhao <lucius300er@outlook.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 04:04+0000\n"
"PO-Revision-Date: 2020-06-26 02:40+0000\n"
"Last-Translator: Yitong Zhao <lucius300er@outlook.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:2
msgid "Translation, Rotation, and Pose"
msgstr "平移、旋转和姿态"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:5
msgid "Translation"
msgstr "翻译"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:9
msgid ""
"You can get the distance to another ``Translation2d`` object by using the "
"``getDistance(Translation2d other)``, which returns the distance to another "
"Translation2d by using the Pythagorean theorem."
msgstr ""
"您可以使用“ getDistance（Translation2d other）”来获取到另一个“ "
"Translation2d”对象的距离，该距离可以通过毕达哥拉斯定理返回到另一个Translation2d的距离。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:11
msgid ""
"``Translation2d`` uses the C++ Units library. If you're planning on using "
"other WPILib classes that use ``Translation2d`` in Java, such as the "
"trajectory generator, make sure to use meters."
msgstr ""
"``Translation2d``使用了c++单元库。如果你计划使用Java中使用``Translation2d`` "
"的其他WPILib类，如轨迹生成器，请确保使用仪表。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:14
msgid "Rotation"
msgstr "旋转"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:18
msgid ""
"``Rotation2d`` uses the C++ Units library. The contructor in Java accepts "
"either the angle in radians, or the sine and cosine of the angle, but the "
"``fromDegrees`` method will construct a ``Rotation2d`` object from degrees."
msgstr ""
"``Rotation2d``使用C ++单元库。 "
"Java中的构造函数可以接受以弧度为单位的角度，也可以接受该角度的正弦和余弦，但是fromDegrees方法将根据度数构造一个“ "
"Rotation2d”对象。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/pose.rst:21
msgid "Pose"
msgstr "位姿"
