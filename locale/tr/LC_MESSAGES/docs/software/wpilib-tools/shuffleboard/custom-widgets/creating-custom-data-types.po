# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020
# Müfit ALKAYA <mufit.alkaya@tfo.k12.tr>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-03 16:05+0000\n"
"PO-Revision-Date: 2020-04-25 02:07+0000\n"
"Last-Translator: Müfit ALKAYA <mufit.alkaya@tfo.k12.tr>, 2021\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:2
msgid "Creating Custom Data Types"
msgstr "Özel Veri Türleri Oluşturma"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:3
msgid ""
"Widgets allow us to control and visualize different types of data. This data"
" could be integers and doubles or even Java Objects. In order to display "
"these types of data using widgets, it is helpful to create a container class"
" for them. It is not necessary to create your own Data Class if the widget "
"will handle single fielded data types such as doubles, arrays, or strings."
msgstr ""
"Widget'lar, farklı veri türlerini kontrol etmemizi ve görselleştirmemizi "
"sağlar. Bu veriler tamsayılar ve çiftler veya hatta Java Nesneleri olabilir."
" Bu tür verileri widget kullanarak görüntülemek için, bunlar için bir "
"konteyner sınıfı oluşturmak yararlıdır. Widget doubles, arrays veya string "
"gibi tekli alanlı veri türlerini işleyecekse kendi Data Class'ınızı "
"oluşturmanız gerekmez."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:6
msgid "Creating The Data Class"
msgstr "Veri Sınıfının Oluşturulması"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:7
msgid ""
"In this example, we will create a custom data type for a 2D Point and its x "
"and y coordinates. In order to create a custom data type class, it must "
"extend the abstract class `ComplexData "
"<https://github.com/wpilibsuite/shuffleboard/blob/main/api/src/main/java/edu/wpi/first/shuffleboard/api/data/ComplexData.java>`_."
" Your custom data class must also implement the ``asMap()`` method that "
"returns the represented data as a simple map as noted below with the "
"``@Override`` annotation:"
msgstr ""
"Bu örnekte, bir 2B Nokta ve onun x ve y koordinatları için özel bir veri "
"türü oluşturacağız. Özel bir veri türü sınıfı oluşturmak için, `ComplexData "
"<https://github.com/wpilibsuite/shuffleboard/blob/main/api/src/main/java/edu/wpi/first/shuffleboard/api/data/ComplexData.java>`"
" _ soyut sınıfını genişletmesi gerekir. Özel veri sınıfınız, aşağıda `` @ "
"Override '' ek açıklamasıyla belirtildiği gibi, temsil edilen verileri basit"
" bir harita olarak döndüren ``asMap ()`` metodunu da uygulamalıdır:"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:59
msgid ""
"Other methods can be added to retrieve or edit fields and instance "
"variables, however, it is good practice to make these classes immutable to "
"prevent changing the source data objects. Instead, you can make a new copy "
"object instead of manipulating the existing object. For example, if we "
"wanted to change the y coordinate of our point, we can define the following "
"method:"
msgstr ""
"Alanları ve örnek değişkenlerini almak veya düzenlemek için başka yöntemler "
"eklenebilir, ancak, kaynak veri nesnelerinin değiştirilmesini önlemek için "
"bu sınıfları değişmez yapmak iyi bir uygulamadır. Bunun yerine, mevcut "
"nesneyi değiştirmek yerine yeni bir kopya nesnesi oluşturabilirsiniz. "
"Örneğin, noktamızın y koordinatını değiştirmek istersek, aşağıdaki yöntemi "
"tanımlayabiliriz:"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:67
msgid ""
"This creates a new ``MyPoint2D`` object and returns it with the new "
"y-coordinate. Same can be done for changing the x coordinate."
msgstr ""
"Bu, yeni bir ``MyPoint2D``  nesnesi oluşturur ve onu yeni y koordinatı ile "
"döndürür. Aynı şey x koordinatını değiştirmek için de yapılabilir."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:70
msgid "Creating a Data Type"
msgstr "Veri Türü Oluşturma"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:71
msgid ""
"There are two different data types that can be made: Simple data types that "
"have only one field (ie. a single number or string), and Complex data types "
"that have multiple data fields (ie. multiple strings, multiple numbers)."
msgstr ""
"Yapılabilecek iki farklı veri türü vardır: Yalnızca bir alana (yani, tek bir"
" sayı veya dizge) sahip basit veri türleri ve birden çok veri alanına sahip "
"karmaşık veri türleri (yani, birden çok dizgi, birden çok sayı)."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:73
msgid ""
"In order to define a simple data type, the class must extend the "
"``SimpleDataType<DataType>`` class with the data type needed and implement "
"the ``getDefaultValue()`` method. In this example, we will use a double as "
"our simple data type."
msgstr ""
"Basit bir veri türü tanımlamak için, sınıfın gerekli veri türü ile "
"``SimpleDataType <DataType>`` sınıfını genişletmesi ve ``getDefaultValue()``"
" yöntemini uygulaması gerekir. Bu örnekte, basit veri tipimiz olarak bir "
"double kullanacağız."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:92
msgid ""
"The class constructor is set to private to ensure that only a single "
"instance of the data type will exist."
msgstr ""
"Sınıf yapıcısı, veri türünün yalnızca tek bir örneğinin var olmasını "
"sağlamak için özel olarak ayarlanır."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:94
msgid ""
"In order to define a complex data type, the class must extend the "
"``ComplexDataType`` class and override the ``fromMap()`` and "
"``getDefaultValue()`` methods. We will use our MyPoint2D class as an example"
" to see what a complex data type class would look like."
msgstr ""
"Karmaşık bir veri türü tanımlamak için, sınıfın ``ComplexDataType``  "
"sınıfını genişletmesi ve ``fromMap()`` ve ``getDefaultValue()``  "
"yöntemlerini geçersiz kılması gerekir. Karmaşık bir veri türü sınıfının "
"nasıl görüneceğini görmek için MyPoint2D sınıfımızı örnek olarak "
"kullanacağız."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:123
msgid "The following code above works as noted:"
msgstr "Yukarıdaki kod, belirtildiği gibi çalışır:"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:129
msgid "Exporting Data Type To Plugin"
msgstr "Veri Türünü Eklentiye Aktarma"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:130
msgid ""
"In order to have the data type be recognized by Shuffleboard, the plugin "
"must export them by overriding the ``getDataTypes`` method. For example,"
msgstr ""
"Veri türünün Shuffleboard tarafından tanınması için, eklentinin "
"``getDataTypes``  yöntemini geçersiz kılarak bunları dışa aktarması gerekir."
" Örneğin,"
