# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Team 5308 <team5308@163.com>, 2021
# Ran Xin <xinryanryan@outlook.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 04:04+0000\n"
"PO-Revision-Date: 2021-06-22 22:06+0000\n"
"Last-Translator: Ran Xin <xinryanryan@outlook.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:2
msgid "PID Tuning with SmartDashboard"
msgstr "使用智能仪表盘进行PID调整"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:4
msgid ""
"The PID (Proportional, Integral, Differential) is an algorithm for "
"determining the motor speed based on sensor feedback to reach a setpoint as "
"quickly as possible. For example, a robot with an elevator that moves to a "
"predetermined position should move there as fast as possible then stop "
"without excessive overshoot leading to oscillation. Getting the PID "
"controller to behave this way is called \"tuning\". The idea is  to compute "
"an error value that is the difference between the current value of the "
"mechanism feedback element and the desired (setpoint) value. In the case of "
"the arm, there might be a potentiometer connected to an analog channel that "
"provides a voltage that is proportional to the position of the arm. The "
"desired value is the voltage that is predetermined for the position the arm "
"should move to, and the current value is the voltage for the actual position"
" of the arm."
msgstr ""
"PID（比例，积分，微分）是一种算法，利用根据传感器反馈指定电动机速度，以尽快达到设定值。例如，带有升降机移动到预定位置的机器人应尽可能快地移动到那里，然后停下来而不会产生过多的过冲而导致振荡。使PID控制器以这种方式运行称为“调整”。这个想法是要计算一个误差值，该误差值是机械反馈元件的当前值与所需（设定点）值之间的差。对于手臂，可能有一个电位计连接到模拟通道，该电位计提供的电压与手臂的位置成比例。期望值是针对手臂应移动到的位置而预先确定的电压，而当前值是针对手臂的实际位置的电压确定的。"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:7
msgid "Finding the setpoint values with LiveWindow"
msgstr "使用 \"LiveWindow\" 查找设定值"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rstNone
msgid "Seting a motor's speed with LiveWindow."
msgstr "用LiveWindow设置电机的速度。"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:12
msgid ""
"Create a PID Subsystem for each mechanism with feedback. The PID Subsystems "
"contain the actuator (motor) and the feedback sensor (potentiometer in this "
"case). You can use Test mode to display the subsystem sensors and actuators."
" Using the slider manually adjust the actuator to each desired position. "
"Note the sensor values (2) for each of the desired positions. These will "
"become the setpoints for the PID controller."
msgstr ""
"为每个带有反馈系统的机械结构创建一个PID子系统。 "
"PID子系统包含执行器（电机）和反馈传感器（在这种情况下为电位计）。您可以使用“测试”模式显示子系统传感器和执行器。使用滑块手动将执行器调整到每个所需位置。注意每个所需位置的传感器值（2）。这些将成为PID控制器的设定值。"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:15
msgid "Viewing the PIDController in LiveWindow"
msgstr "在 \"LiveWindow\" 中查看PID控制器"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rstNone
msgid "Controlling a PIDController in LiveWindow."
msgstr "在实时窗口中控制PIDController。"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:20
msgid ""
"In Test mode, the PID Subsystems display their P, I, and D parameters that "
"are set in the code. The P, I, and D values are the weights applied to the "
"computed error (P), sum of errors over time (I), and the rate of change of "
"errors (D). Each of those terms is multiplied by the weights and added "
"together to form the motor value. Choosing the optimal P, I, and D values "
"can be difficult and requires some amount of experimentation. The Test mode "
"on the robot allows the values to be modified, and the mechanism response "
"observed."
msgstr ""
"在测试模式下，PID子系统显示其在代码中设置的P，I和D参数。 "
"P，I和D值将被应用于计算计算误差（P）的权重，随时间变化的误差之和（I）和误差的变化率（D）。这些项中的每一项都乘以权重，然后相加在一起即可得出电动机值。选择最佳的P，I和D值可能很困难，并且需要进行大量的实验。机械手的“测试”模式允许修改值，并观察机械结构的响应状况。"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:25
msgid "Tuning the PIDController"
msgstr "调整PID控制器"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rstNone
msgid "Using the PIDController to tune the control."
msgstr "使用PIDController来调整控制。"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:30
msgid ""
"Tuning the PID controller can be difficult and there are many articles that "
"describe techniques that can be used. It is best to start with the P value "
"first. To try different values fill in a low number for P, enter a setpoint "
"determined earlier in this document, and note how fast the mechanism "
"responds. If it responds too slowly, perhaps never reaching the setpoint, "
"increase P. If it responds too quickly, perhaps oscillating, reduce the P "
"value. Repeat this process until you get a response that is as fast as "
"possible without oscillation. It's possible that having a P term is all "
"that's needed to achieve adequate control of your mechanism. Further "
"information is located in the :doc:`/docs/software/advanced-"
"controls/introduction/tuning-pid-controller` document."
msgstr ""
"调试PID控制器可能很困难，有许多文章描述了可以使用的技术。最好先从P值开始。要尝试使用不同的值，先为P填一个较小的数字，再输入本文档前面确定的设定值，并注意该机制的响应速度。如果响应太慢，也许会永远无法达到设定值，则增大P。如果响应太快，一直可能振荡，则减小P值。重复此过程，直到获得尽可能快的响应而没有振荡。可能需要拥有一个P项才能充分控制您的机制。更多信息位于"
" \"/docs/software/advanced-controls/introduction/tuning-pid-"
"controller`文档中\"。"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:32
msgid ""
"Once you have determined P, I, and D values they can be inserted into the "
"program. You'll find them either in the properties for the PIDSubsystem in "
"RobotBuilder or in the constructor for the PID Subsystem in your code."
msgstr ""
"一旦确定了P，I和D值，就可以将它们写入程序中。你可以在 \"RobotBuilder\" 的 \"PIDSubsystem\" "
"的属性中或代码中的PID子系统的构造函数中找到它们。"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:34
msgid ""
"The F (feedforward) term is used for controlling velocity with a PID "
"controller."
msgstr "F (feedforward) 项被在PID控制器中被用于控制其速度。"

#: ../../frc-docs/source/docs/software/dashboards/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:36
msgid ""
"More information can be found at :ref:`docs/software/advanced-"
"controls/controllers/pidcontroller:PID Control in WPILib`."
msgstr ""
"更多信息可以参考：\"<docs/software/advanced-controls/controllers/pidcontroller:PID "
"Control in WPILib>\""
