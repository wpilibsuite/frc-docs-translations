# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rodrigo Acosta <raar7366@gmail.com>, 2020
# Diana Ramos <dianaracasas@gmail.com>, 2020
# Paulina Maynez <paump22@hotmail.com>, 2021
# Austin Shalit <austinshalit@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 04:04+0000\n"
"PO-Revision-Date: 2020-04-25 02:01+0000\n"
"Last-Translator: Austin Shalit <austinshalit@gmail.com>, 2021\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:2
msgid "Combining Motion Profiling and PID Control with ProfiledPIDController"
msgstr ""
"Combinando perfiles de movimiento y control de PID con ProfiledPIDController"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:4
msgid ""
"For a guide on implementing the ``ProfiledPIDController`` class in the "
":ref:`command-based framework <docs/software/commandbased/what-is-command-"
"based:What Is \"Command-Based\" Programming?>` framework, see "
":ref:`docs/software/commandbased/profilepid-subsystems-commands:Combining "
"Motion Profiling and PID in Command-Based`."
msgstr ""
"Para una guia implementando la clase ``ProfiledPIDController`` en el  "
":ref:`command-based framework <docs/software/commandbased/what-is-command-"
"based:What Is \"Command-Based\" Programming?>` entorno de trabajo, vea "
":ref:`docs/software/commandbased/profilepid-subsystems-commands:Combining "
"Motion Profiling and PID in Command-Based`."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:6
msgid ""
"In the previous article, we saw how to use the ``TrapezoidProfile`` class to"
" create and use a trapezoidal motion profile.  The example code from that "
"article demonstrates manually composing the ``TrapezoidProfile`` class with "
"the external PID control feature of a \"smart\" motor controller."
msgstr ""
"En el artículo anterior, vimos cómo usar la clase ``TrapezoidProfile`` para "
"crear y usar un perfil de movimiento trapezoidal. El código de ejemplo de "
"ese artículo demuestra la composición manual de la clase "
"``TrapezoidProfile`` con la función de control PID externo de un controlador"
" de motor \"smart\"."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:11
msgid "Using the ProfiledPIDController class"
msgstr "Usando la clase ProfiledPIDController"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:13
msgid ""
"In C++, the ``ProfiledPIDController`` class is templated on the unit type "
"used for distance measurements, which may be angular or linear.  The passed-"
"in values *must* have units consistent with the distance units, or a "
"compile-time error will be thrown.  For more information on C++ units, see "
":ref:`docs/software/basic-programming/cpp-units:The C++ Units Library`."
msgstr ""
"En C ++, la clase ``ProfiledPIDController`` se basa en el tipo de unidad "
"utilizada para las mediciones de distancia, que puede ser angular o lineal. "
"Los valores pasados ​​*deben* tener unidades consistentes con las unidades "
"de distancia, o se lanzará un error en tiempo de compilación. Para obtener "
"más información sobre las unidades C ++, consulte :ref:`docs/software/basic-"
"programming/cpp-units:The C++ Units Library`."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:15
msgid ""
"Much of the functionality of ``ProfiledPIDController`` is effectively "
"identical to that of ``PIDController``.  Accordingly, this article will only"
" cover features that are substantially-changed to accommodate the motion "
"profiling functionality.  For information on standard ``PIDController`` "
"features, see :ref:`docs/software/advanced-"
"controls/controllers/pidcontroller:PID Control in WPILib`."
msgstr ""
"Gran parte de la funcionalidad de ``ProfiledPIDController`` es efectivamente"
" idéntica a la de ``PIDController``. En consecuencia, este artículo solo "
"cubrirá las características que han cambiado sustancialmente para adaptarse "
"a la funcionalidad de creación de perfiles de movimiento. Para obtener "
"información sobre las características estándar del ``PIDController``, "
"consulte :ref:`docs/software/advanced-controls/controllers/pidcontroller:PID"
" Control in WPILib`."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:19
msgid "Constructing a ProfiledPIDController"
msgstr "Construyendo un ProfiledPIDController"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:21
msgid ""
"C++ is often able to infer the type of the inner classes, and thus a simple "
"initializer list (without the class name) can be sent as a parameter.  The "
"full class name is included in the example below for clarity."
msgstr ""
"C++ a menudo puede inferir el tipo de las clases internas y, por lo tanto, "
"se puede enviar una lista de inicializadores simple (sin el nombre de la "
"clase) como parámetro. El nombre completo de la clase se incluye en el "
"siguiente ejemplo para mayor claridad."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:23
msgid ""
"Creating a ``ProfiledPIDController`` is nearly identical to :ref:`creating a"
" PIDController <docs/software/advanced-"
"controls/controllers/pidcontroller:Constructing a PIDController>`.  The only"
" difference is the need to supply a set of :ref:`trapezoidal profile "
"constraints <docs/software/advanced-controls/controllers/trapezoidal-"
"profiles:Constraints>`, which will be automatically forwarded to the "
"internally-generated ``TrapezoidProfile`` instances:"
msgstr ""
"Crear un ``ProfiledPIDController`` es casi idéntico a :ref:`creating a "
"PIDController <docs/software/advanced-"
"controls/controllers/pidcontroller:Constructing a PIDController>`. La única "
"diferencia es la necesidad de suministrar un conjunto de :ref:`trapezoidal "
"profile constraints <docs/software/advanced-"
"controls/controllers/trapezoidal-profiles:Constraints>`, que se reenviará "
"automáticamente a las instancias ``TrapezoidProfile`` generadas "
"internamente:"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:46
msgid "Goal vs Setpoint"
msgstr "Objetivo vs punto de ajuste"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:48
msgid ""
"A major difference between a standard ``PIDController`` and a "
"``ProfiledPIDController`` is that the actual *setpoint* of the control loop "
"is not directly specified by the user.  Rather, the user specifies a *goal* "
"position or state, and the setpoint for the controller is computed "
"automatically from the generated motion profile between the current state "
"and the goal.  So, while the user-side call looks mostly identical:"
msgstr ""
"Una diferencia importante entre un ``PIDController`` estándar y un "
"``ProfiledPIDController`` es que el usuario no especifica directamente el "
"*setpoint* real del lazo de control. Más bien, el usuario especifica una "
"posición o estado *meta*, y el punto de ajuste para el controlador se "
"calcula automáticamente a partir del perfil de movimiento generado entre el "
"estado actual y el objetivo. Entonces, mientras que la llamada del lado del "
"usuario parece casi idéntica:"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:64
msgid ""
"The specified ``goal`` value (which can be either a position value or a "
"``TrapezoidProfile.State``, if nonzero velocity is desired) is *not* "
"necessarily the *current* setpoint of the loop - rather, it is the "
"*eventual* setpoint once the generated profile terminates."
msgstr ""
"El valor de ``meta`` especificado (que puede ser un valor de posición o un "
"``TrapezoidProfile.State``, si se desea una velocidad distinta de cero) *no*"
" es necesariamente el *actual* del bucle, sino que es el *eventual* punto de"
" ajuste una vez que finaliza el perfil generado."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:67
msgid "Getting/Using the Setpoint"
msgstr "Obtención / uso del punto de ajuste"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:69
msgid ""
"Since the ``ProfiledPIDController`` goal differs from the setpoint, is if "
"often desirable to poll the current setpoint of the controller (for "
"instance, to get values to use with :ref:`feedforward "
"<docs/software/advanced-controls/controllers/combining-feedforward-"
"feedback:Using Feedforward Components with PID>`).  This can be done with "
"the ``getSetpoint()`` method."
msgstr ""
"Dado que el objetivo del ``ProfiledPIDController`` difiere del punto de "
"ajuste, si a menudo es deseable sondear el punto de ajuste actual del "
"controlador (por ejemplo, para obtener valores para usar "
"con:ref:`feedforward <docs/software/advanced-controls/controllers/combining-"
"feedforward-feedback:Using Feedforward Components with PID>`). Esto se puede"
" hacer con el método ``getSetpoint()``."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:71
msgid "The returned setpoint might then be used as in the following example:"
msgstr ""
"El punto de ajuste devuelto podría usarse como en el siguiente ejemplo:"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:109
msgid "Complete Usage Example"
msgstr "Ejemplo de uso completo"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:111
msgid ""
"A more complete example of ``ProfiledPIDController`` usage is provided in "
"the ElevatorProfilePID example project (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/elevatorprofiledpid>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/ElevatorProfiledPID/cpp>`__):"
msgstr ""
"Un ejemplo más completo del uso de ``ProfiledPIDController`` se proporciona "
"en el proyecto de ejemplo ElevatorProfilePID (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/elevatorprofiledpid>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/ElevatorProfiledPID/cpp>`__):"
