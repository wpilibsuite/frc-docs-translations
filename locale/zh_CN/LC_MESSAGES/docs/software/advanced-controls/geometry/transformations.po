# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 楚涵 张 <zhangchuhan1210@126.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 04:04+0000\n"
"PO-Revision-Date: 2020-06-26 02:40+0000\n"
"Last-Translator: 楚涵 张 <zhangchuhan1210@126.com>, 2020\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:2
msgid "Transformations"
msgstr "转变"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:5
msgid "Translation2d"
msgstr "Translation2d"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:7
msgid ""
"Operations on a ``Translation2d`` perform operations to the vector "
"represented by the ``Translation2d``."
msgstr "在Translation2d上的操作对由Translation2d表示的向量执行操作。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:9
msgid ""
"Addition: Addition between two ``Translation2d`` a and b can be performed "
"using ``plus`` in Java, or the ``+`` operator in C++. Addition adds the two "
"vectors."
msgstr "加法：可以使用Java中的plus或C ++中的+运算符在两个Translation2d a和b之间进行加法。加法将两个向量相加。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:10
msgid ""
"Subtraction: Subtraction between two ``Translation2d`` can be performed "
"using ``minus`` in Java, or the binary ``-`` operator in C++. Subtraction "
"subtracts the two vectors."
msgstr "减法：两个“ Translation2d”之间的减法可以在Java中使用减号或在C ++中使用二进制“-”运算符来执行。减法减去两个向量。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:11
msgid ""
"Multiplication: Multiplication of a ``Translation2d`` and a scalar can be "
"performed using ``times`` in Java, or the ``*`` operator in C++. This "
"multiplies the vector by the scalar."
msgstr ""
"乘法：可以使用Java中的“时间”或C ++中的“ *”运算符来执行“ Translation2d”和标量的乘法。\n"
"该乘法是将向量乘以标量。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:12
msgid ""
"Division: Division of a ``Translation2d`` and a scalar can be performed "
"using ``div`` in Java, or the ``/`` operator in C++. This divides the vector"
" by the scalar."
msgstr "除法：可以使用Java中的div或C ++中的/运算符来执行Translation2d和标量的除法。该除法是用矢量除以标量。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:13
msgid ""
"Rotation: Rotation of a ``Translation2d`` by a counter-clockwise rotation "
":math:`\\theta` about the origin can be performed by using ``rotateBy``. "
"This is equivalent to multiplying the vector by the matrix "
":math:`\\begin{bmatrix} cos\\theta & -sin\\theta \\\\ sin\\theta & "
"cos\\theta \\end{bmatrix}`"
msgstr ""
"旋转：通过使用“ "
"rotateBy”，可以绕着原点逆时针旋转``Translation2d”。这相当于将向量乘以矩阵：math:`\\begin{bmatrix} "
"cos\\theta & -sin\\theta \\\\ sin\\theta & cos\\theta \\end{bmatrix}`"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:14
msgid ""
"Additionally, you can rotate a ``Translation2d`` by 180 degrees by using "
"``unaryMinus`` in Java, or the unary ``-`` operator in C++."
msgstr ""
"另外，您可以通过在Java中使用“ unaryMinus”或在C ++中使用一元“-”运算符将“ Translation2d”旋转180度。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:17
msgid "Rotation2d"
msgstr "Rotation2d"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:19
msgid ""
"Transformations for ``Rotation2d`` are just arithmetic operations on the "
"angle measure represented by the ``Rotation2d``."
msgstr "``Rotation2d''的转换只是对由``Rotation2d``表示的角度度量的算术运算。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:21
msgid ""
"``plus`` (Java) or ``+`` (C++): Adds the rotation component of ``other`` to "
"this ``Rotation2d``'s rotation component"
msgstr "``plus``（Java）或``+``（C ++）：将``other``的旋转分量添加到此``Rotation2d''的旋转分量"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:22
msgid ""
"``minus`` (Java) or binary ``-`` (C++): Subtracts the rotation component of "
"``other`` to this ``Rotation2d``'s rotation component"
msgstr "``减号（Java）或二进制``-''（C ++）：将``other''的旋转分量减去到此``Rotation2d''的旋转分量"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:23
msgid ""
"``unaryMinus`` (Java) or unary ``-`` (C++): Multiplies the rotation "
"component by a scalar of -1."
msgstr "``unaryMinus''（Java）或一元``-''（C ++）：将旋转分量乘以标量-1。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:24
msgid ""
"``times`` (Java) or ``*`` (C++) : Multiplies the rotation component by a "
"scalar."
msgstr "``times``（Java）或``*``（C ++）：将旋转分量乘以标量。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:27
msgid "Transform2d and Twist2d"
msgstr "Transform2d and Twist2d"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:31
msgid ""
"``Transform2d`` represents a **relative** transformation. It has an "
"translation and a rotation component. Transforming a ``Pose2d`` by a "
"``Transform2d`` rotates the translation component of the transform by the "
"rotation of the pose, and then adds the rotated translation component and "
"the rotation component to the pose. In other words, "
"``Pose2d.plus(Transform2d)`` returns :math:`\\begin{bmatrix} x_p \\\\ y_p "
"\\\\ \\theta_p \\end{bmatrix}+\\begin{bmatrix} cos\\theta_p & -sin\\theta_p "
"& 0 \\\\ sin\\theta_p & cos\\theta_p & 0 \\\\ 0 & 0 & 1 "
"\\end{bmatrix}\\begin{bmatrix}x_t \\\\ y_t \\\\ \\theta_t \\end{bmatrix}`"
msgstr ""
"``Transform2d''代表一个``相对''转换。它具有平移和旋转组件。通过“ Transform2d”变换“ "
"Pose2d”，将通过姿势的旋转来旋转变换的平移分量，然后将旋转的平移分量和旋转分量添加到该位姿。换句话说，``Pose2d.plus(Transform2d)``"
" 返回 :math:`\\begin{bmatrix} x_p \\\\ y_p \\\\ \\theta_p "
"\\end{bmatrix}+\\begin{bmatrix} cos\\theta_p & -sin\\theta_p & 0 \\\\ "
"sin\\theta_p & cos\\theta_p & 0 \\\\ 0 & 0 & 1 "
"\\end{bmatrix}\\begin{bmatrix}x_t \\\\ y_t \\\\ \\theta_t \\end{bmatrix}`"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:33
msgid ""
"``Twist2d`` represents a change in distance along an arc. Usually, this "
"class is used to represent the movement of a drivetrain, where the x "
"component is the forward distance driven, the y component is the distance "
"driven to the side (left positive), and the :math:`\\theta` component is the"
" change in heading. The underlying math behind finding the pose exponential "
"(new pose after moving the pose forward along the curvature of the twist) "
"can be found `here <https://file.tavsys.net/control/controls-engineering-in-"
"frc.pdf>`_ in chapter 10."
msgstr ""
"“Twist2d”表示沿弧线的距离变化。通常，这个类用于表示传动系统的运动，其中x组件是向前行驶的距离，y组件是向侧面行驶的距离(左正)，而:math:"
" ' \\theta '组件是航向的变化。我们可以在第10章，`此处 "
"<https://file.tavsys.net/control/controls-engineering-in-"
"frc.pdf>`找到寻找指数型位姿(沿扭转的曲率向前移动后的新位姿)背后的基本数学原理。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:35
msgid ""
"For nonholonomic drivetrains, the y component of a ``Twist2d`` should always"
" be 0."
msgstr "对于非完整的传动系统，``Twist2d''的y分量应始终为0。"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:37
msgid ""
"Both classes can be used to estimate robot location. Twist2d is used in "
"WPILib's odometry classes to update the robot's pose based on movement, "
"while Transform2d can be used to estimate the robot's global position from "
"vision data."
msgstr ""
"这两个类别均可用于估计机器人位置。 "
"WPILib的里程表类中使用Twist2d根据运动来更新机器人的姿势，而Transform2d可用于根据视觉数据估计机器人的全局位置。"
