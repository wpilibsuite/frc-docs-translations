# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 楚涵 张 <zhangchuhan1210@126.com>, 2020
# Yitong Zhao <lucius300er@outlook.com>, 2021
# eric sun <eric.szh@hotmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-18 04:03+0000\n"
"PO-Revision-Date: 2020-04-25 02:05+0000\n"
"Last-Translator: eric sun <eric.szh@hotmail.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:4
msgid "Strategies for Vision Programming"
msgstr "视觉编程策略"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:6
msgid ""
"Using computer vision is a great way of making your robot be responsive to "
"the elements on the field and make it much more autonomous. Often in FRC\\ "
"|reg| games there are bonus points for autonomously shooting balls or other "
"game pieces into goals or navigating to locations on the field. Computer "
"vision is a great way of solving many of these problems. And if you have "
"autonomous code that can do the challenge, then it can be used during the "
"teleop period as well to help the human drivers."
msgstr ""
"使用计算机视觉是使您的机器人对现场的元素做出反应并使其更加自动化的一种好方法。通常在FRC \\ | reg "
"|比赛中，可以通过自动将球或其他比赛物件射入目标，或导航到场地上获得奖励分数。计算机视觉是解决其中许多问题的好方法。而且，如果您拥有可以实现这一操作的自动代码，那么它也可以在遥控操作期间使用，以帮助驾驶员。"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:8
msgid ""
"There are many options for choosing the components for vision processing and"
" where the vision program should run. WPILib and associated tools support a "
"number of options and give teams a lot of flexibility to decide what to do. "
"This article will attempt to give you some insight into many of the choices "
"and tradeoffs that are available."
msgstr ""
"视觉处理系统的的组件以及视觉程序应该运行的位置有多种选项。WPILib和相关的工具也支持多种选项，并为团队的决定提供了很大的灵活性。本文将让您了解许多可用的选择和权衡。"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:14
msgid "OpenCV Computer Vision Library"
msgstr "OpenCV计算机视觉库"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:16
msgid ""
"**OpenCV** is an open source computer vision library that is widely used "
"throughout academia and industry. It has support from hardware manufactures "
"providing GPU accelerated processing, it has bindings for a number of "
"languages including C++, Java, and Python. It is also well documented with "
"many web sites, books, videos, and training courses so there are lots of "
"resources available to help learn how to use it. The C++ and Java versions "
"of WPILib include the OpenCV libraries, there is support in the library for "
"capturing, processing and viewing video, and tools to help you create your "
"vision algorithms. For more information about OpenCV see https://opencv.org."
msgstr ""
"**OpenCV**是一个计算机视觉软件库，在学术界和工业界广泛使用。它有来自硬件制造商的支持，提供GPU加速处理，它绑定多种语言，包括c++， "
"Java，和Python。它还在许多web站点、书籍、视频和培训课程有详细的文档，因此有许多可用资源来帮助学习如何使用它。c++和WPILib "
"Java版本都包含有OpenCV库，可提供捕获、处理和查看的视频，以及帮助创建视觉算法的工具。有关OpenCV的更多信息，请参见 "
"https://opencv.org。"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:19
msgid "Vision Code on roboRIO"
msgstr "在roboRIO上运行视觉代码"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:24
msgid ""
"Vision code can be embedded into the main robot program on the roboRIO. "
"Building and running the vision code is straightforward because it is built "
"and deployed along with the robot program. The vision code can be written by"
" hand or generated by GRIP in either C++ or Java. The disadvantage of this "
"approach is that having vision code running on the same processor as the "
"robot program can cause performance issues. This is something you will have "
"to evaluate depending on the requirements for your robot and vision program."
msgstr ""
"视觉代码可以嵌入到roboRIO的主机器人程序中。构建和运行视觉代码非常直接，因为它是与机器人程序一起构建和部署的。视觉代码可以手动编写，也可以由GRIP使用c++或Java生成。这种方法的缺点是将视觉代码运行在与机器人程序相同的处理器上可能会导致性能问题。你需要根据你的机器人和视觉程序的要求来进行评估。"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:26
msgid ""
"In this approach, the vision code simply produces results that the robot "
"code directly uses. Be careful about synchronization issues when writing "
"robot code that is getting values from a vision thread. The GRIP generated "
"code and the VisionRunner class in WPILib make this easier."
msgstr ""
"在这种方法中，视觉代码可以简单的输出机器人代码能够直接使用的结果。在编写机器人代码的时候，如果从视觉线程取值时，要小心同步问题。GRIP生成的代码和WPILib中的VisionRunner都可使这一点更容易实现。"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:28
msgid ""
"Using functions provided by the CameraServer class, the video stream can be "
"sent to dashboards such as Shuffleboard so operators can see what the camera"
" sees. In addition, annotations can be added to the images using OpenCV "
"commands so targets or other interesting objects can be identified in the "
"dashboard view."
msgstr ""
"使用CameraServer类提供的函数，视频流可以发送到仪表盘，比如Shuffleboard，这样操作手就可以看到摄像头看到的内容。此外，可以使用OpenCV命令将注释添加到图像中，以便在仪表盘视图中识别目标或其他感兴趣的对象。"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:31
msgid "Vision Code on DS Computer"
msgstr "DS计算机上的视觉代码"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:36
msgid ""
"When vision code is running on the DS computer, the video is streamed back "
"to the Driver Station laptop for processing. Even the older Classmate "
"laptops are substantially faster at vision processing than the roboRIO. GRIP"
" can be run on the Driver Station laptop directly with the results sent back"
" to the robot using NetworkTables. Alternatively you can write your own "
"vision program using a language of your choosing. Python makes a good choice"
" since there is a native NetworkTables implementation and the OpenCV "
"bindings are very good."
msgstr ""
"当视觉代码在DS计算机上运行时，视频流回操控站笔记本电脑进行处理。即使是老版本的Classmate笔记本电脑在视觉处理方面也比roboRIO快得多。GRIP可以在操控站的笔记本电脑上直接运行，并将结果通过网络表格发送回机器人。或者，你可以用你选择的语言编写自己的视觉程序。Python是一个很好的选择，因为它可在本地的NetworkTables中进行，而且OpenCV绑定非常好。"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:38
msgid ""
"After the images are processed, the key values such as the target position, "
"distance or anything else you need can be sent back to the robot with "
"NetworkTables. This approach generally has higher latency, as delay is added"
" due to the images needing to be sent to the laptop. Bandwidth limitations "
"also limit the maximum resolution and FPS of the images used for processing."
msgstr ""
"图像处理后，关键值，如目标位置、距离或任何您需要的东西，可以通过网络表格发送回机器人。这种方法通常具有较高的延迟，因为需要将图像发送到笔记本电脑会增加延迟。带宽的限制也限制了用于处理的图像的最大分辨率和FPS。"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:40
msgid "The video stream can be displayed on Shuffleboard or in GRIP."
msgstr "视频流可以在Shuffleboard或GRIP上显示。"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:43
msgid "Vision Code on Coprocessor"
msgstr "协处理器上的视觉代码"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:48
msgid ""
"Coprocessors such as the Raspberry Pi are ideal for supporting vision code "
"(see :ref:`docs/software/vision-processing/wpilibpi/using-the-raspberry-pi-"
"for-frc:Using the Raspberry Pi for FRC`). The advantage is that they can run"
" full speed and not interfere with the robot program. In this case, the "
"camera is probably connected to the coprocessor or (in the case of Ethernet "
"cameras) an Ethernet switch on the robot. The program can be written in any "
"language; Python is a good choice because of its simple bindings to OpenCV "
"and NetworkTables. Some teams have used high performance vision coprocessors"
" such as the Nvidia Jetson for fastest speed and highest resolution, "
"although this approach generally requires advanced Linux and programming "
"knowledge."
msgstr ""
"像Raspberry Pi这样的协处理器是支持视觉代码的理想选择(参见:ref: ' docs/software/vision-"
"processing/frcvision/ using-raspberry - pie -for- FRC:Using the Raspberry Pi"
" for FRC "
"')。优点是它们可以全速运行，不干扰机器人程序。在这种情况下，摄像机可能连接到协处理器，或者(对于以太网摄像机来说)机器人上的一个以太网开关。该程序可以用任何语言编写;Python是一个很好的选择，因为它可以简单地绑定到OpenCV和NetworkTables。一些团队使用高性能的视觉协同处理器，如Nvidia"
" Jetson，以获得最快的速度和最高的分辨率，尽管这种方法通常需要高级的Linux和编程知识。"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:50
msgid ""
"This approach takes a bit more programming expertise as well as a small "
"amount of additional weight, but otherwise it brings the best of both worlds"
" compared to the other two approaches, as coprocessors are much faster than "
"the roboRIO and the image processing can be performed with minimal latency "
"or bandwidth use."
msgstr ""
"与其他两种方法相比，这种方法需要更多的编程专业知识和少量的额外权重，但除此之外，它带来了两个方面的最佳效果，因为协处理器比roboRIO快得多，并且图像处理可以以最小的延迟或带宽使用进行。"
" "

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:52
msgid ""
"Data can be sent from the vision program on the coprocessor to the robot "
"using NetworkTables or a private protocol over a network or serial "
"connection."
msgstr "据可以通过网络或串行连接从协处理器上的视觉程序发送到机器人。"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:55
msgid "Camera Options"
msgstr "相机选择"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:57
msgid ""
"There are a number of camera options supported by WPILib. Cameras have a "
"number of parameters that affect operation; for example, frame rate and "
"image resolution affect the quality of the received images, but when set too"
" high impact processing time and, if sent to the driver station, may exceed "
"the available bandwidth on the field."
msgstr ""
"WPILib支持多种摄像机选项。 "
"摄像机有许多影响操作的参数；例如，帧频和图像分辨率影响接收图像的质量，但当设置过高的影响处理时间时，如果发送到操控站，可能会超过现场的可用带宽。 "

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:59
msgid ""
"The CameraServer class in C++ and Java is used to interface with cameras "
"connected to the robot. It retrieve frames for local processing through a "
"Source object and sends the stream to your driver station for viewing or "
"processing there."
msgstr ""
"c++和Java中的CameraServer用于与连接到机器人的摄像机进行对接。它通过源对象检索用于本地处理的帧，并将流发送到您的操控站，以便在那里查看或处理。"
