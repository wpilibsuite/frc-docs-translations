# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020
# Müfit ALKAYA_3390 <mufit.alkaya@tfo.k12.tr>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-02-28 16:18+0000\n"
"PO-Revision-Date: 2020-04-25 02:02+0000\n"
"Last-Translator: Müfit ALKAYA_3390 <mufit.alkaya@tfo.k12.tr>, 2021\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:2
msgid "Step 4: Creating and Following a Trajectory"
msgstr "Adım 4: Bir Yörünge Oluşturma ve Takip Etme"

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:4
msgid ""
"With our drive subsystem written, it is now time to generate a trajectory "
"and write an autonomous command to follow it."
msgstr ""
"Sürücü alt sistemimiz yazıldığında, şimdi bir yörünge oluşturma ve onu takip"
" etmek için otonom bir komut yazma zamanı."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:6
msgid ""
"As per the :ref:`standard command-based project structure "
"<docs/software/commandbased/structuring-command-based-project:Structuring a "
"Command-Based Robot Project>`, we will do this in the "
"``getAutonomousCommand`` method of the ``RobotContainer`` class.  The full "
"method from the RamseteCommand Example Project (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/ramsetecommand>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/RamseteCommand>`__)"
" can be seen below.  The rest of the article will break down the different "
"parts of the method in more detail."
msgstr ""
":ref:`standard command-based project structure <docs/software/commandbased"
"/structuring-command-based-project:Structuring a Command-Based Robot "
"Project>` uyarınca, bunu ``RobotContainer`` sınıfının "
"``getAutonomousCommand`` metodunda yapacağız. RamseteCommand Örnek "
"Projesinden tam metot (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/ramsetecommand>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/RamseteCommand>`__)"
" aşağıda görülebilir. Makalenin geri kalanı, yöntemin farklı kısımlarını "
"daha ayrıntılı olarak ele alacaktır."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:27
msgid "Configuring the Trajectory Constraints"
msgstr "Yörünge Kısıtlamalarını ayarlama"

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:29
msgid ""
"First, we must set some configuration parameters for the trajectory which "
"will ensure that the generated trajectory is followable."
msgstr ""
"İlk olarak, yörünge için oluşturulan yörüngenin takip edilebilir olmasını "
"sağlayacak bazı yapılandırma parametreleri belirlemeliyiz."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:32
msgid "Creating a Voltage Constraint"
msgstr "Voltage kısıtlama oluşturma"

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:34
msgid ""
"The first piece of configuration we will need is a voltage constraint.  This"
" will ensure that the generated trajectory never commands the robot to go "
"faster than it is capable of achieving with the given voltage supply:"
msgstr ""
"İhtiyacımız olan ilk konfigürasyon parçası bir voltaj kısıtlamasıdır. Bu, "
"oluşturulan yörüngenin robota verilen voltaj beslemesiyle ulaşabileceğinden "
"daha hızlı gitme komutu vermemesini sağlayacaktır:"

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:54
msgid ""
"Notice that we set the maximum voltage to 10V, rather than the nominal "
"battery voltage of 12V.  This gives us some \"headroom\" to deal with "
"\"voltage sag\" during operation."
msgstr ""
"Maksimum voltajı 12V nominal akü voltajı yerine 10V olarak ayarladığımıza "
"dikkat edin. Bu bize çalışma sırasında \"voltaj düşüşü\" ile başa çıkmak "
"için biraz \"boşluk payı\" verir."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:57
msgid "Creating the Configuration"
msgstr "Yapılandırmayı oluşturma"

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:59
msgid ""
"Now that we have our voltage constraint, we can create our "
"``TrajectoryConfig`` instance, which wraps together all of our path "
"constraints:"
msgstr ""
"Artık voltaj sınırlamamıza sahip olduğumuza göre, tüm yol kısıtlamalarımızı "
"bir araya getiren ``TrajectoryConfig`` örneğimizi oluşturabiliriz:"

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:80
msgid "Generating the Trajectory"
msgstr "Yörüngeyi - Trajectory oluşturmak"

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:82
msgid ""
"With our trajectory configuration in hand, we are now ready to generate our "
"trajectory.  For this example, we will be generating a \"clamped cubic\" "
"trajectory - this means we will specify full robot poses at the endpoints, "
"and positions only for interior waypoints (also known as \"knot points\").  "
"As elsewhere, all distances are in meters."
msgstr ""
"Yörünge konfigürasyonumuz ile artık yörüngemizi oluşturmaya hazırız. Bu "
"örnek için, \"kenetlenmiş kübik\" bir yörünge oluşturacağız - bu, uç "
"noktalarda tam robot pozlarını ve yalnızca iç geçiş noktaları için konumları"
" (\"düğüm noktaları\" olarak da bilinir) belirleyeceğimiz anlamına gelir. "
"Başka yerlerde olduğu gibi, tüm mesafeler metre cinsindendir."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:102
msgid ""
"Instead of generating the trajectory on the roboRIO as outlined above, one "
"can also :ref:`import a PathWeaver JSON <docs/software/wpilib-"
"tools/pathweaver/integrating-robot-program:Importing a PathWeaver JSON>`."
msgstr ""
"Yukarıda belirtildiği gibi roboRIO'da yörünge oluşturmak yerine, aynı "
"zamanda :ref:`bir PathWeaver JSON <docs/software/wpilib-tools/pathweaver"
"/integrating-robot-program:Importing a PathWeaver JSON>` içe aktarılabilir."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:105
msgid "Creating the RamseteCommand"
msgstr "RamseteCommand yaratmak"

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:107
msgid ""
"We will first reset our robot's pose to the starting pose of the trajectory."
" This ensures that the robot's location on the coordinate system and the "
"trajectory's starting position are the same."
msgstr ""
"Önce robotumuzun pozunu yörüngenin başlangıç pozuna sıfırlayacağız. Bu, "
"robotun koordinat sistemindeki konumu ile yörüngenin başlangıç konumunun "
"aynı olmasını sağlar."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:128
msgid ""
"It is very important that the initial robot pose match the first pose in the"
" trajectory.  For the purposes of our example, the robot will be reliably "
"starting at a position of ``(0,0)`` with a heading of ``0``.  In actual use,"
" however, it is probably not desirable to base your coordinate system on the"
" robot position, and so the starting position for both the robot and the "
"trajectory should be set to some other value.  If you wish to use a "
"trajectory that has been defined in robot-centric coordinates in such a "
"situation, you can transform it to be relative to the robot's current pose "
"using the ``transformBy`` method (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/trajectory/Trajectory.html#transformBy(edu.wpi.first.wpilibj.geometry.Transform2d)>`_,"
"  `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1Trajectory.html#a8edfbd82347bbf32ddfb092679336cd8>`_)."
"  For more information about transforming trajectories, see "
":ref:`docs/software/advanced-controls/trajectories/transforming-"
"trajectories:Transforming Trajectories`."
msgstr ""
"İlk robot pozunun yörüngedeki ilk pozla eşleşmesi çok önemlidir. Örneğimizin"
" amaçları doğrultusunda, robot, ``(0,0)`` pozisyonunda ``0`` başlığıyla "
"güvenilir bir şekilde başlayacaktır. Ancak gerçek kullanımda, koordinat "
"sisteminizi robot konumuna dayandırmanız muhtemelen istenmez ve bu nedenle "
"hem robot hem de yörünge için başlangıç konumu başka bir değere "
"ayarlanmalıdır. Böyle bir durumda robot merkezli koordinatlarda tanımlanmış "
"bir yörünge kullanmak isterseniz, onu robotun mevcut pozuna göre "
"``transformBy`` method (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/trajectory/Trajectory.html#transformBy(edu.wpi.first.wpilibj.geometry.Transform2d)>`_,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1Trajectory.html#a8edfbd82347bbf32ddfb092679336cd8>`_)."
"  Yörüngelerin dönüştürülmesi hakkında daha fazla bilgi için "
"bkz:ref:`docs/software/advanced-controls/trajectories/transforming-"
"trajectories:Transforming Trajectories`."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:130
msgid ""
"Now that we have a trajectory, we can create a command that, when executed, "
"will follow that trajectory.  To do this, we use the ``RamseteCommand`` "
"class (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj2/command/RamseteCommand.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc2_1_1RamseteCommand.html>`__)"
msgstr ""
"Artık bir yörüngeye sahip olduğumuza göre, çalıştırıldığında bu yörüngeyi "
"takip edecek bir komut oluşturabiliriz. Bunu yapmak için ``RamseteCommand`` "
"sınıfını kullanıyoruz (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj2/command/RamseteCommand.html>`"
" __, `C ++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc2_1_1RamseteCommand.html>`"
" __)"

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:150
msgid ""
"This declaration is fairly substantial, so we'll go through it argument-by-"
"argument:"
msgstr "Bu beyan oldukça önemlidir, bu yüzden onu adım adım inceleyeceğiz:"

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:152
msgid ""
"The trajectory: This is the trajectory to be followed; accordingly, we pass "
"the command the trajectory we just constructed in our earlier steps."
msgstr ""
"trajectory-yörünge : İzlenecek yörünge budur; buna göre, daha önceki "
"adımlarımızda oluşturduğumuz yörüngenin komutasını geçiyoruz."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:153
msgid ""
"The pose supplier: This is a method reference (or lambda) to the :ref:`drive"
" subsystem method that returns the pose <docs/software/examples-tutorials"
"/trajectory-tutorial/creating-drive-subsystem:Odometry Accessor Method>`.  "
"The RAMSETE controller needs the current pose measurement to determine the "
"required wheel outputs."
msgstr ""
"Pose-Poz tedarikçisi: Bu, :ref:`sürücü alt sistemi yöntemine poz döndüren "
"bir yöntem(veya lambda)dir<docs/software/examples-tutorials/trajectory-"
"tutorial/creating-drive-subsystem:Odometry Accessor Method>` . RAMSETE "
"kontrol cihazının, gerekli tekerlek çıkışlarını belirlemek için mevcut poz "
"ölçümüne ihtiyacı vardır."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:154
msgid ""
"The RAMSETE controller: This is the ``RamseteController`` object (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/controller/RamseteController.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1RamseteController.html>`__)"
" that will perform the path-following computation that translates the "
"current measured pose and trajectory state into a chassis speed setpoint."
msgstr ""
"RAMSETE denetleyicisi: Bu, mevcut ölçülen pozu ve yörünge durumunu bir kasa "
"hızı ayar noktasına çeviren yol izleme hesaplamasını gerçekleştirecek olan "
"``RamseteController`` nesnesidir (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/controller/RamseteController.html>`"
" __, `C ++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1RamseteController.html>`__)."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:155
msgid ""
"The drive feedforward: This is a ``SimpleMotorFeedforward`` object (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/controller/SimpleMotorFeedforward.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1SimpleMotorFeedforward.html>`__)"
" that will automatically perform the correct feedforward calculation with "
"the feedforward gains (``kS``, ``kV``, and ``kA``) that we obtained from the"
" drive characterization tool."
msgstr ""
"Sürücü ileri beslemesi : This is a ``SimpleMotorFeedforward`` object (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/controller/SimpleMotorFeedforward.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1SimpleMotorFeedforward.html>`__)"
" bu, ileri besleme kazançlarıyla (``kS``, ``kV`` ve ``kA``)  Sürücü "
"karakterizasyon aracından elde ettiğimiz."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:156
msgid ""
"The drive kinematics: This is the ``DifferentialDriveKinematics`` object "
"(`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/kinematics/DifferentialDriveKinematics.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1DifferentialDriveKinematics.html>`__)"
" that we constructed earlier in our constants file, and will be used to "
"convert chassis speeds to wheel speeds."
msgstr ""
"Sürüş kinematiği: Bu, sabitler dosyamızda daha önce oluşturduğumuz "
"``DifferentialDriveKinematics`` nesnesidir (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/kinematics/DifferentialDriveKinematics.html>`"
" __, `C ++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1DifferentialDriveKinematics.html>`"
" __) ve şasi hızlarını tekerlek hızlarına dönüştürmek için kullanılacaktır."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:157
msgid ""
"The wheel speed supplier: This is a method reference (or lambda) to the "
":ref:`drive subsystem method that returns the wheel speeds <docs/software"
"/examples-tutorials/trajectory-tutorial/creating-drive-subsystem:Encoder "
"Accessor Method>`"
msgstr ""
"wheel speed supplier: Bu, :ref:`tekerlek hızlarını <docs/software/examples-"
"tutorials/trajectory-tutorial/creating-drive-subsystem:Encoder Accessor "
"Method>` döndüren sürücü alt sistemi yöntemine bir yöntem referansıdır (veya"
" lambda)"

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:158
msgid ""
"The left-side PIDController: This is the ``PIDController`` object (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/controller/PIDController.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc2_1_1PIDController.html>`__)"
" that will track the left-side wheel speed setpoint, using the P gain that "
"we obtained from the drive characterization tool."
msgstr ""
"Sol taraftaki PIDController: Bu, sürücü karakterizasyonundan elde ettiğimiz "
"P kazancını kullanarak sol taraf tekerlek hızı ayar noktasını takip edecek "
"olan ``PIDController`` nesnesidir (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/controller/PIDController.html>`"
" __, `C ++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc2_1_1PIDController.html>`"
" __) aracı."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:159
msgid ""
"The right-side PIDController: This is the ``PIDController`` object (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/controller/PIDController.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc2_1_1PIDController.html>`__)"
" that will track the right-side wheel speed setpoint, using the P gain that "
"we obtained from the drive characterization tool."
msgstr ""
"Sağ taraftaki PIDController : This is the ``PIDController`` object (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/controller/PIDController.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc2_1_1PIDController.html>`__)"
" P kullanarak sağ taraf tekerlek hızı ayar noktasını takip edecek sürücü "
"karakterizasyon aracından elde ettiğimiz kazanç."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:160
msgid ""
"The output consumer: This is a method reference (or lambda) to the "
":ref:`drive subsystem method that passes the voltage outputs to the drive "
"motors <docs/software/examples-tutorials/trajectory-tutorial/creating-drive-"
"subsystem:Voltage-Based Drive Method>`."
msgstr ""
"output consumer: Bu, :ref:`gerilim çıkışlarını sürücü motorlarına "
"<docs/software/examples-tutorials/trajectory-tutorial/creating-drive-"
"subsystem:Voltage-Based Drive Method>` ileten sürücü alt sistemi yöntemine "
"bir yöntem referansıdır (veya lambda)."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:161
msgid ""
"The robot drive: This is the drive subsystem itself, included to ensure the "
"command does not operate on the drive at the same time as any other command "
"that uses the drive."
msgstr ""
"robot drive : Bu, sürücüyü kullanan diğer komutlarla aynı anda sürücüde "
"komutun çalışmamasını sağlamak için dahil edilen sürücü alt sisteminin "
"kendisidir."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:163
msgid ""
"Finally, note that we append a final \"stop\" command in sequence after the "
"path-following command, to ensure that the robot stops moving at the end of "
"the trajectory."
msgstr ""
"Son olarak, robotun yörüngenin sonunda hareket etmeyi durdurmasını sağlamak "
"için yolu takip etme komutundan sonra sırayla son bir \"stop\" komutu "
"eklediğimize dikkat edin."

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:166
msgid "Video"
msgstr "Video"

#: ../../frc-docs/source/docs/software/examples-tutorials/trajectory-tutorial/creating-following-trajectory.rst:168
msgid ""
"If all has gone well, your robot's autonomous routine should look something "
"like this:"
msgstr ""
"Her şey yolunda giderse, robotunuzun otonom rutini şunun gibi görünmelidir:"
