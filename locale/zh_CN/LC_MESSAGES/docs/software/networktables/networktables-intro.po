# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 楚涵 张 <zhangchuhan1210@126.com>, 2020
# KeseterG <zhiwan13579@126.com>, 2021
# Michael Zhang <zhang040426zyc@outlook.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-02 16:03+0000\n"
"PO-Revision-Date: 2020-04-25 02:04+0000\n"
"Last-Translator: Michael Zhang <zhang040426zyc@outlook.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:2
msgid "What is NetworkTables"
msgstr "什么是网络表"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:4
msgid ""
":term:`NetworkTables` is an implementation of a distributed \"dictionary\". "
"That is named values are created either on the robot, driver station, or "
"potentially an attached coprocessor, and the values are automatically "
"distributed to all the other participants. For example, a driver station "
"laptop might receive camera images over the network, perform some vision "
"processing algorithm, and come up with some values to sent back to the "
"robot. The values might be an X, Y, and Distance. By writing these results "
"to NetworkTables values called \"X\", \"Y\", and \"Distance\" they can be "
"read by the robot shortly after being written. Then the robot can act upon "
"them."
msgstr ""
"网络表是分布式“字典”的实现。即在机器人，驾驶员站或可能的附加协处理器上创建命名值，并将这些值自动分发给所有其他参与方。例如，一个驾驶台笔记本电脑可能会通过网络接收相机图像，执行一些视觉处理算法，并计算出返回机器人的值。这些值可能是“X”，“Y”和“Distance”。通过将这些结果写入网络表值“"
" X”，“ Y”和“ Distance”，它们可以在写入后不久由机器人读取，此后机器人可对它们进行操作。"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:6
msgid ""
"NetworkTables can be used by programs on the robot in either C++, Java or "
"LabVIEW and is built into each version of WPILib."
msgstr "网络表可以由C ++，Java或LabVIEW中的机械手程序使用，它内置于WPILib的每个版本。"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:9
msgid "NetworkTables organization"
msgstr "网络表结构"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:11
msgid ""
"Data is organized in NetworkTables in a hierarchy much like a directory on "
"disk with folders and files. For any instance of NetworkTables there can be "
"multiple values and subtables that may be nested in whatever way fits the "
"data organization desired. Subtables actually are represented as a long key "
"with slashes (/) separating the nested subtable and value key names. Each "
"value has a key associated with it that is used to retrieve the value. For "
"example, you might have a table called **datatable** as shown in the "
"following examples. Within a **datatable** there are two keys, X and Y and "
"their associated values. The OutlineViewer is a good utility for exploring "
"the values stored in NetworkTables while a program is running."
msgstr ""
"数据在网络表中按层次结构进行组织，类似磁盘上带有文件夹和文件的目录。对于网络表的任何实例，可以存在多个值和子表，它们可以以适合所需数据组织的任何方式嵌套。子表实际上表示为长键，带有斜杠（/）分隔嵌套的子表和值键名称。每个值都有一个与之关联的键，用于检索该值。例如，您可能有一个名为datatable的表，如以下示例所示。在datatable中，有两个键“X”和“Y”，及其关联的值。"
" OutlineViewer是一个很好的实用程序，可以用于在程序运行时浏览存储在网络表中的值。"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:13
msgid ""
"Data types for NetworkTables are either boolean, numeric, or string. Numeric"
" values are written as double precision values. In addition you can have "
"arrays of any of those types to ensure that multiple data items are "
"delivered consistently. There is also the option of storing raw data which "
"can be used for representing structured data."
msgstr ""
"网络表的数据类型为布尔，数字或字符串。数值写为双精度值。此外，您可以使用任何这些类型的数组，以确保多个数据项被连贯地传递。您还可以选择存储原始数据，它能被用于表示结构化数据。"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:15
msgid ""
"There are some default tables that are created automatically when the "
"program starts up:"
msgstr "一些默认表会在程序启动时自动创建："

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:18
msgid "Table name"
msgstr "表名"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:18
msgid "Use"
msgstr "用途"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:20
msgid "/SmartDashboard"
msgstr "/SmartDashboard"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:20
msgid ""
"Used to store values written to the SmartDashboard or Shuffleboard using the"
" ``SmartDashboard.put()`` set of methods."
msgstr "用于存储使用SmartDashboard.put()方法集写入SmartDashboard或Shuffleboard的值。"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:27
msgid "/LiveWindow"
msgstr "/LiveWindow"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:27
msgid ""
"Used to store Test mode (Test on the Driver Station) values. Typically these"
" are Subsystems and the associated sensors and actuators."
msgstr "用于存储测试模式（在驱动程序站上测试）值。这些通常是子系统以及关联的传感器和执行器。"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:35
msgid "/FMSInfo"
msgstr "/FMSInfo"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:35
msgid ""
"Information about the currently running match that comes from the Driver "
"Station and the Field Management System"
msgstr "来自 Driver Station 和现场管理系统的有关当前进行的比赛的信息"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:43
msgid "Writing a simple NetworkTables program"
msgstr "编写一个简单的网络表程序"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:45
msgid ""
"The NetworkTables classes are instantiated automatically when your program "
"starts. To access the instance of NetworkTables do call methods to read and "
"write the getDefault() method can be used to get the default instance."
msgstr "程序启动时，将自动实例化网络表类。要访问网络表实例，请使用方法读取和写入。可以使用getDefault()方法来获取默认实例。"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:126
msgid ""
"The values for X and Y can be easily viewed using the OutlineViewer program "
"that shows the NetworkTables hierarchy and all the values associated with "
"each key."
msgstr "使用OutlineViewer程序可以轻松查看“X”和“Y”的值，该程序显示了网络表的层次结构以及所有相关的键值对。"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:128
msgid ""
"Actually NetworkTables has a flat namespace for the keys. Having tables and "
"subtables is an abstraction to make it easier to organize your data. So for "
"a table called \"SmartDashboard\" and a key named \"xValue\", it is really a"
" single key called \"/SmartDashboard/xValue\". The hierarchy is not actually"
" represented in the distributed data, only keys with prefixes that are the "
"contained table."
msgstr ""
"对于键来说，网络表的命名空间实际上是扁平的。“表”和“子表”是一种抽象概念，使您更容易组织数据。对于名为“SmartDashboard”的表和名为“ "
"xValue”的键，它实际上只是一个名为“/SmartDashboard/xValue”的键。分布式数据实际上并未表示层次结构，它仅存储了键，以包含该键的表的名称作为前缀。"
