# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Andre Theberge <atheberge2@videotron.ca>, 2020
# Regis Bekale <rbekale@robotiquefirstquebec.org>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-02-01 04:19+0000\n"
"PO-Revision-Date: 2020-04-25 02:03+0000\n"
"Last-Translator: Regis Bekale <rbekale@robotiquefirstquebec.org>, 2021\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:2
msgid "Differential Drive Odometry"
msgstr "Odométrie à entraînement différentiel"

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:3
msgid ""
"A user can use the differential drive kinematics classes in order to perform"
" :ref:`odometry <docs/software/kinematics-and-odometry/intro-and-chassis-"
"speeds:What is odometry?>`. WPILib contains a ``DifferentialDriveOdometry`` "
"class that can be used to track the position of a differential drive robot "
"on the field."
msgstr ""
"Un utilisateur peut utiliser les classes cinématiques d'entraînement "
"différentiel afin d'effectuer l' :ref:`Odométrie <docs/software/kinematics-"
"and-odometry/intro-and-chassis-speeds:What is odometry?>`. WPILib contient "
"une classe ``DifferentialDriveOdometry`` qui peut être utilisée pour "
"détecter la position d'un robot avec entraînement différentiel sur le "
"terrain."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:5
msgid ""
"Because this method only uses encoders and a gyro, the estimate of the "
"robot's position on the field will drift over time, especially as your robot"
" comes into contact with other robots during gameplay. However, odometry is "
"usually very accurate during the autonomous period."
msgstr ""
"Étant donné que cette méthode utilise seulement que des encodeurs et un "
"gyroscope, l'estimation de la position du robot sur le terrain va dévier "
"avec le temps, surtout quand votre robot va entrer en contact avec des "
"objets ou autres robots pendant le jeu. Cependant, l'odométrie est "
"généralement très précise pendant la période autonome."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:8
msgid "Creating the Odometry Object"
msgstr "Création de l'objet Odometry"

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:9
msgid ""
"The ``DifferentialDriveOdometry`` class requires one mandatory argument and "
"one optional argument. The mandatory argument is the angle reported by your "
"gyroscope (as a Rotation2d). The optional argument is the starting pose of "
"your robot on the field (as a ``Pose2d``). By default, the robot will start "
"at ``x = 0, y = 0, theta = 0``."
msgstr ""
"La classe ``DifferentialDriveOdometry`` nécessite un argument obligatoire et"
" un argument facultatif. L'argument obligatoire est l'angle rapporté par "
"votre gyroscope (comme un Rotation2d). L'argument optionnel est la pose de "
"départ de votre robot sur le terrain (comme un ``Pose2d``). Par défaut, le "
"robot démarre à ``x = 0, y = 0, theta = 0``."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:11
msgid ""
"0 degrees / radians represents the robot angle when the robot is facing "
"directly toward your opponent's alliance station. As your robot turns to the"
" left, your gyroscope angle should increase. By default, WPILib gyros "
"exhibit the opposite behavior, so you should negate the gyro angle."
msgstr ""
"0 degrés / radians représente l'angle du robot lorsque le robot fait face "
"directement à la station d'alliance de votre adversaire. Lorsque votre robot"
" se tourne vers la gauche, l'angle de votre gyroscope devrait augmenter. Par"
" défaut, les gyroscopes WPILib présentent le comportement opposé, vous devez"
" donc compenser l'angle du gyroscope en le convertissant en une valeur "
"négative (nouvel angle = 0 - angle gyro)."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:13
msgid ""
"The encoder positions must be reset to zero before constructing the "
"``DifferentialDriveOdometry`` class."
msgstr ""
"Les positions de l'encodeur doivent être remises à zéro avant de construire "
"la classe ``DifferentialDriveOdometry``."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:35
msgid "Updating the Robot Pose"
msgstr "Mise à jour de Robot Pose"

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:36
msgid ""
"The ``update`` method can be used to update the robot's position on the "
"field. This method must be called periodically, preferably in the "
"``periodic()`` method of a :ref:`Subsystem "
"<docs/software/commandbased/subsystems:Subsystems>`. The ``update`` method "
"returns the new updated pose of the robot. This method takes in the gyro "
"angle of the robot, along with the left encoder distance and right encoder "
"distance."
msgstr ""
"La méthode Update peut être utilisée pour mettre à jour la position du robot"
" sur le terrain. Cette méthode doit être appelée périodiquement, de "
"préférence dans la méthode ``periodic()`` du :ref:`Sous-système "
"<docs/software/commandbased/subsystems:Subsystems>`.  La méthode Update "
"renvoie la toute dernière pose du robot. Cette méthode prend en compte "
"l'angle gyroscopique du robot, ainsi que le compte (distance) de l'encodeur "
"gauche et celui de l'encodeur droit."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:38
msgid ""
"The encoder distances in Java must be in meters. In C++, the units library "
"can be used to represent the distance using any linear distance unit. If the"
" robot is moving forward in a straight line, **both** distances (left and "
"right) must be positive."
msgstr ""
"Les distances de l'encodeur en Java doivent être en mètres. En C++, la "
"librairie d'unités peut être utilisée pour représenter la distance en "
"utilisant n'importe quelle unité de distance linéaire. Si le robot avance en"
" ligne droite, **les deux** distances (gauche et droite) doivent être "
"positives.  Faire les opérations mathématiques nécessaires pour y arriver."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:67
msgid "Resetting the Robot Pose"
msgstr "Réinitialisation de la pose de robot"

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:68
msgid ""
"The robot pose can be reset via the ``resetPose`` method. This method "
"accepts two arguments -- the new field-relative pose and the current gyro "
"angle."
msgstr ""
"La pose du robot peut être réinitialisée via la méthode ``resetPose``. Cette"
" méthode accepte deux arguments - la nouvelle pose relative au terrain de "
"jeu et l'angle gyroscopique actuel."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:70
msgid ""
"If at any time, you decide to reset your gyroscope, the ``resetPose`` method"
" MUST be called with the new gyro angle. Furthermore, the encoders must also"
" be reset to zero when resetting the pose."
msgstr ""
"Si à tout moment, vous décidez de réinitialiser votre gyroscope, la méthode "
"``resetPose`` DOIT être appelée avec le nouvel angle gyroscopique. De plus, "
"les encodeurs doivent également être remis à zéro lors de la "
"réinitialisation de la pose."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:72
msgid ""
"A full example of a differential drive robot with odometry is available "
"here: `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/DifferentialDriveBot>`_"
" / `Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/differentialdrivebot>`_."
msgstr ""
"Un exemple complet d’un robot d’entraînement différentiel avec odométrie est"
" disponible ici: `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/DifferentialDriveBot>`_"
" / `Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/differentialdrivebot>`_."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/differential-drive-odometry.rst:74
msgid ""
"In addition, the ``GetPose`` (C++) / ``getPoseMeters`` (Java) methods can be"
" used to retrieve the current robot pose without an update."
msgstr ""
"De plus, les méthodes ``GetPose`` (C++) / ``getPoseMeters`` (Java) peuvent "
"être utilisées pour récupérer la pose actuelle du robot sans mise à jour."
