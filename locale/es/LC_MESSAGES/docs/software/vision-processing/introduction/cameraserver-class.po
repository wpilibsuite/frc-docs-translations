# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Gibrán Verástegui <Gibranbasket1526@gmail.com>, 2020
# Diana Ramos <dianaracasas@gmail.com>, 2020
# Paulina Maynez <paump22@hotmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-18 04:03+0000\n"
"PO-Revision-Date: 2020-04-25 02:05+0000\n"
"Last-Translator: Paulina Maynez <paump22@hotmail.com>, 2020\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:4
msgid "Read and Process Video: CameraServer Class"
msgstr "Vídeo de Lectura y Procesamiento: Clase de CameraServer "

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:7
msgid "Concepts"
msgstr "Conceptos"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:9
msgid ""
"The cameras typically used in FRC\\ |reg| (commodity USB and Ethernet "
"cameras such as the Axis camera) offer relatively limited modes of "
"operation. In general, they provide only a single image output (typically in"
" an RGB compressed format such as JPG) at a single resolution and frame "
"rate. USB cameras are particularly limited as only one application may "
"access the camera at a time."
msgstr ""
"La cámara usualmente usada en FRC\\ |reg| (cámaras de USB Y Ethernet de "
"consumo como el Axis cámara) ofrece modos de operación relativamente "
"limitados. En general, te dan solo una imagen de salida (normalmente en "
"formato comprimido RGB como JPG) en una simple resolución y cuadros por "
"segundo. Las cámaras USB son particularmente limitadas ya que solo una "
"aplicación puede acceder a la cámara a la vez."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:11
msgid ""
"CameraServer supports multiple cameras. It handles details such as "
"automatically reconnecting when a camera is disconnected, and also makes "
"images from the camera available to multiple \"clients\" (e.g. both your "
"robot code and the dashboard can connect to the camera simultaneously)."
msgstr ""
"CameraServer soporta múltiples cámaras. Este cuenta con detalles como "
"reconexión automática cuando la cámara se desconecta, también hace imágenes "
"desde la disponibilidad de la cámara hacia múltiples “clientes” ( p.ej. El "
"código del robot y su dashboard pueden conectarse simultáneamente)."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:14
msgid "Camera Names"
msgstr "Nombres de Cámaras"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:16
msgid ""
"Each camera in CameraServer must be uniquely named. This is also the name "
"that appears for the camera in the Dashboard. Some variants of the "
"CameraServer ``startAutomaticCapture()`` and ``addAxisCamera()`` functions "
"will automatically name the camera (e.g. \"USB Camera 0\" or \"Axis "
"Camera\"), or you can give the camera a more descriptive name (e.g. \"Intake"
" Cam\"). The only requirement is that each camera have a unique name."
msgstr ""
"Cada cámara en CameraServer debe tener un nombre exclusivo. Este es también "
"el nombre que aparece en el Dashboard. Algunas variantes del CameraServer "
"startAutomaticCapture() y addAxisCamera() nombrarán a la cámara "
"automáticamente ( p.ej. “USB Camera 0” o “Axis Camera”), o puede dar un "
"nombre más descriptivo a la cámara ( p.ej. “Intake Camera” ). El único "
"requisito es que la cámara tenga su propio nombre. "

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:19
msgid "USB Camera Notes"
msgstr "Notas de Cámara USB"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:22
msgid "CPU Usage"
msgstr "Uso de CPU"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:24
msgid ""
"The CameraServer is designed to minimize CPU usage by only performing "
"compression and decompression operations when required and automatically "
"disabling streaming when no clients are connected."
msgstr ""
"La CameraServer está diseñada para minimizar el uso de CPU realizando solo "
"comprensión y operaciones de descompresión cuando sea necesario y "
"deshabilitar automáticamente la transmisión cuando no hay clientes "
"conectados."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:26
msgid ""
"To minimize CPU usage, the dashboard resolution should be set to the same "
"resolution as the camera; this allows the CameraServer to not decompress and"
" recompress the image, instead, it can simply forward the JPEG image "
"received from the camera directly to the dashboard. It's important to note "
"that changing the resolution on the dashboard does *not* change the camera "
"resolution; changing the camera resolution may be done by calling "
"``setResolution()`` on the camera object."
msgstr ""
"Para minimizar el uso de CPU, la resolución de las dashboard debe "
"establecerse en la misma resolución que la cámara; esto permite que "
"CameraServer no se descomprima y recomprimir la imagen, en lugar, "
"simplemente puede reenviar la imagen JPEG recibida desde la cámara "
"directamente al dashboard. Es importante notar que cambiando la resolución "
"en el dashboard no hace cambio en la resolución de la cámara; cambiando la "
"resolución de la cámara puede ser hecho llamando setResolution() en el "
"objeto de la cámara."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:29
msgid "USB Bandwidth"
msgstr "Ancho de Banda de USB"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:31
msgid ""
"The roboRIO can only transmit and receive so much data at a time over its "
"USB interfaces. Camera images can require a lot of data, and so it is "
"relatively easy to run into this limit. The most common cause of a USB "
"bandwidth error is selecting a non-JPEG video mode or running too high of a "
"resolution, particularly when multiple cameras are connected."
msgstr ""
"La RoboRIO solo puede transmitir y recibir cierta información al mismo "
"tiempo sobre las interfaces de la USB. Las imágenes de la cámara requiere "
"mucha información, y en sí es relativamente fácil reproducir las imágenes en"
" estos límites. El error más común en el ancho de banda de USB es "
"seleccionar un modo de video non-JPEG o corriendo una resolución muy alta, "
"particularmente cuando múltiples cámaras están conectadas."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:34
msgid "Architecture"
msgstr "Arquitectura "

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:36
msgid ""
"The CameraServer consists of two layers, the high level WPILib "
"**CameraServer class** and the low level **cscore library**."
msgstr ""
"La CameraServer consiste en dos capas, el nivel alto WPILib CameraServer "
"clase y el nivel bajo librería cscore."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:39
msgid "CameraServer Class"
msgstr "Clase de CameraServer"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:41
msgid ""
"The CameraServer class (part of WPILib) provides a high level interface for "
"adding cameras to your robot code. It also is responsible for publishing "
"information about the cameras and camera servers to NetworkTables so that "
"Driver Station dashboards such as the LabVIEW Dashboard and Shuffleboard can"
" list the cameras and determine where their streams are located. It uses a "
"singleton pattern to maintain a database of all created cameras and servers."
msgstr ""
"La clase de CameraServer ( parte de WPILib ) provisiona un alto nivel de "
"interface para añadir cámaras al código del robot. También es responsable "
"por publicar información sobre las cámaras y los servidores de cámaras a las"
" NetworkTables para que las dashboards de la Driver Station como la LabVIEW,"
" Dashboard y Shuffleboard pueden enlistar las cámaras y determinar dónde "
"está localizada la transmisión de estas. Esto usa un patrón único para "
"mantener una base de datos de todos los servidores y cámaras creadas."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:43
msgid "Some key functions in CameraServer are:"
msgstr "Algunas funciones clave en la CameraServer son:"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:45
msgid ""
"``startAutomaticCapture()``: Add a USB camera (e.g. Microsoft LifeCam) and "
"starts a server for it so it can be viewed from the dashboard."
msgstr ""
"startAutomaticCapture(): Agregue una cámara USB ( p.ej. Microsoft LifeCam ) "
"e inicie un servidor para que pueda verse desde el dashboard."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:46
msgid ""
"``addAxisCamera()``: Add an Axis camera. Even if you aren't processing "
"images from the Axis camera in your robot code, you may want to use this "
"function so that the Axis camera appears in the Dashboard's drop down list "
"of cameras. It also starts a server so the Axis stream can still be viewed "
"when your driver station is connected to the roboRIO via USB (useful at "
"competition if you have both the Axis camera and roboRIO connected to the "
"two robot radio Ethernet ports)."
msgstr ""
"addAxisCamera(): Agregue una cámara Axis. Aún cuando no esté procesando "
"imágenes desde la cámara Axis al código del robot, usted querrá usar esta "
"función para que aparezca la cámara Axis en la lista desplegable de cámaras "
"del Dashboard. También inicia un servidor así que la transmisión de Axis "
"pueda seguir siendo vista cuando el driver station está conectada a la "
"RoboRIO via USB (es útil que en una competencia si tiene conectado la "
"RoboRIO y una Cámara Axis a los dos puertos Ethernet del robot)"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:47
msgid ""
"``getVideo()``: Get OpenCV access to a camera. This allows you to get images"
" from the camera for image processing on the roboRIO (in your robot code)."
msgstr ""
"getVideo(): Obtenga acceso a OpenCV a la cámara. Esto le permite obtener las"
" imágenes desde la cámara para el procesamiento de la imagen en la RoboRIO "
"(en el código del robot)."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:48
msgid ""
"``putVideo()``: Start a server that you can feed OpenCV images to. This "
"allows you to pass custom processed and/or annotated images to the "
"dashboard."
msgstr ""
"putVideo(): Inicie un servidor al que pueda alimentar imágenes de OpenCV. "
"Esto le permite pasar imágenes personalizadas procesadas y/o anotadas en el "
"dashboard."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:51
msgid "cscore Library"
msgstr "Librería cscore"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:53
msgid "The cscore library provides the lower level implementation to:"
msgstr "La librería cscore provisiona el menor nivel de implementación para:"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:55
msgid "Get images from USB and HTTP (e.g. Axis) cameras"
msgstr "Obtener imágenes desde las cámaras USB y HTTP ( p.ej. Axis )"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:56
msgid "Change camera settings (e.g. contrast and brightness)"
msgstr "Cambiar la configuración de la cámara ( p.ej. contraste y brillo )"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:57
msgid "Change camera video modes (pixel format, resolution and frame rate)"
msgstr ""
"Cambiar los modos de vídeo de la cámara (formato del pixel, resolución y "
"cuadros por segundo)"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:58
msgid "Act as a web server and serve images as a standard MJPEG stream"
msgstr ""
"Actuar como un servidor web y servir imágenes como una transmisión MJPEG "
"estándar"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:59
msgid "Convert images to/from OpenCV ``Mat`` objects for image processing"
msgstr ""
"Convertir imágenes a/desde objetos Mat OpenCV para el procesamiento de la "
"imagen"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:62
msgid "Sources and Sinks"
msgstr "Fuentes y Receptores"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:64
msgid ""
"The basic architecture of the cscore library is similar to that of "
"MJPGStreamer, with functionality split between sources and sinks. There can "
"be multiple sources and multiple sinks created and operating simultaneously."
msgstr ""
"La arquitectura básica de la Librería cscore a la de MJPGStreamer, con "
"funcionalidad dividida entre fuentes y receptores. Puede haber múltiples "
"fuentes y múltiples receptores creado y operando simultáneamente."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:66
msgid ""
"An object that generates images is a source and an object that "
"accepts/consumes images is a sink. The generate/consume is from the "
"perspective of the library. Thus cameras are sources (they generate images)."
" The MJPEG web server is a sink because it accepts images from within the "
"program (even though it may be forwarding those images on to a web browser "
"or dashboard). Sources may be connected to multiple sinks, but sinks can be "
"connected to one and only one source. When a sink is connected to a source, "
"the cscore library takes care of passing each image from the source to the "
"sink."
msgstr ""
"Un objeto que genera imágenes es una fuente y un objeto que acepta / consume"
" imágenes es un receptor. El generar / consumir es desde la perspectiva de "
"la biblioteca. Por lo tanto, las cámaras son fuentes (generan imágenes). El "
"servidor web MJPEG es un receptor porque acepta imágenes de dentro del "
"programa (aunque puede reenviar esas imágenes a un navegador web o "
"dashboard). Las fuentes pueden estar conectadas a múltiples receptores, pero"
" los receptores pueden conectarse a uno y solo una fuente. Cuando un "
"receptor se conecta a una fuente, la biblioteca cscore se encarga de pasar "
"cada imagen desde la fuente al sumidero."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:68
msgid ""
"**Sources** obtain individual frames (such as provided by a USB camera) and "
"fire an event when a new frame is available. If no sinks are listening to a "
"particular source, the library may pause or disconnect from a source to save"
" processor and I/O resources. The library autonomously handles camera "
"disconnects/reconnects by simply pausing and resuming firing of events (e.g."
" a disconnect results in no new frames, not an error)."
msgstr ""
"Las fuentes obtienen marcos individuales (como los proporcionados por una "
"cámara USB) y disparan un evento cuando hay un nuevo marco disponible. Si "
"ningún receptor está escuchando una fuente en particular, la biblioteca "
"puede pausar o desconectarse de una fuente para ahorrar procesadores y "
"recursos de I / O. La biblioteca maneja de forma autónoma las desconexiones "
"y reconexiones de la cámara simplemente pausando y reanudando la activación "
"de eventos (por ejemplo, una desconexión no genera nuevos marcos, no hay un "
"error). "

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:69
msgid ""
"**Sinks** listen to a particular source's event, grab the latest image, and "
"forward it to its destination in the appropriate format. Similarly to "
"sources, if a particular sink is inactive (e.g. no client is connected to a "
"configured MJPEG over HTTP server), the library may disable parts of its "
"processing to save processor resources."
msgstr ""
"Los receptores escuchan el evento de una fuente en particular, toman la "
"última imagen y la reenvían a su destino en el formato apropiado. De manera "
"similar a las fuentes, si un receptor particular está inactivo (por ejemplo,"
" ningún cliente está conectado a un servidor MJPEG configurado a través de "
"HTTP), la biblioteca puede deshabilitar partes de su procesamiento para "
"ahorrar recursos del procesador. "

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:71
msgid ""
"User code (such as that used in a FRC robot program) can act as either a "
"source (providing processed frames as if it were a camera) or as a sink "
"(receiving a frame for processing) via OpenCV source and sink objects. Thus "
"an image processing pipeline that gets images from a camera and serves the "
"processed images out looks like the below graph:"
msgstr ""
"El código de usuario (como el utilizado en un programa de robot FRC) puede "
"actuar como fuente (proporcionando cuadros procesados ​​como si fuera una "
"cámara) o como un receptor (que recibe un cuadro para su procesamiento) a "
"través de la fuente de OpenCV y recibir objetos. Por lo tanto, una tubería "
"de procesamiento de imágenes que obtiene imágenes de una cámara y sirve las "
"imágenes procesadas se ve como el siguiente gráfico:"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:76
msgid ""
"Because sources can have multiple sinks connected, the pipeline may branch. "
"For example, the original camera image can also be served by connecting the "
"UsbCamera source to a second MjpegServer sink in addition to the CvSink, "
"resulting in the below graph:"
msgstr ""
"Debido a que las fuentes pueden tener múltiples receptores conectados, la "
"tubería puede ramificarse. Por ejemplo, la imagen de la cámara original "
"también se puede servir conectando la fuente USBCamera a un segundo receptor"
" MjpegServer además del CvSink, lo que da como resultado el siguiente "
"gráfico:"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:81
msgid ""
"When a new image is captured by the camera, both the CvSink and the "
"MjpegServer [1] receive it."
msgstr ""
"Cuando la cámara captura una nueva imagen, tanto el CvSink como el "
"MjpegServer [1] la reciben."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:83
msgid "The above graph is what the following CameraServer snippet creates:"
msgstr ""
"El gráfico anterior es lo que crea el siguiente fragmento de CameraServer:"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:115
msgid ""
"The CameraServer implementation effectively does the following at the cscore"
" level (for explanation purposes). CameraServer takes care of many of the "
"details such as creating unique names for all cscore objects and "
"automatically selecting port numbers. CameraServer also keeps a singleton "
"registry of created objects so they aren't destroyed if they go out of "
"scope."
msgstr ""
"La implementación de CameraServer efectivamente hace lo siguiente en el "
"nivel del cscore (con fines explicativos). El CameraServer se encarga de "
"muchos de los detalles, como la creación de nombres únicos para todos los "
"objetos cscore y seleccionando automáticamente los números de puerto. "
"CameraServer también mantiene un registro único de los objetos creados para "
"que no se destruyan si salen del alcance."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:159
msgid "Reference Counting"
msgstr "Recuento de Referencias"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/cameraserver-class.rst:161
msgid ""
"All cscore objects are internally reference counted. Connecting a sink to a "
"source increments the source's reference count, so it's only strictly "
"necessary to keep the sink in scope. The CameraServer class keeps a registry"
" of all objects created with CameraServer functions, so sources and sinks "
"created in that way effectively never go out of scope (unless explicitly "
"removed)."
msgstr ""
"Todos los objetos cscore se cuentan internamente como referencia. La "
"conexión de un receptor a una fuente aumenta el recuento de referencias de "
"la fuente, por lo que solo es estrictamente necesario mantener el receptor "
"dentro del alcance. La clase CameraServer mantiene un registro de todos los "
"objetos creados con las funciones de CameraServer, por lo que las fuentes y "
"los receptores creados de esa manera nunca salen del alcance (a menos que "
"explícitamente se remueva)."
