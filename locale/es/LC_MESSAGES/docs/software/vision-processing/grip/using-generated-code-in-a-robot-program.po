# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Fernando Soltero <fersg806@gmail.com>, 2020
# Diana Ramos <dianaracasas@gmail.com>, 2020
# Heber Sepúlveda <heber.sepulveda.m@gmail.com>, 2020
# Luis  Hernández, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-18 04:03+0000\n"
"PO-Revision-Date: 2020-04-25 02:05+0000\n"
"Last-Translator: Luis  Hernández, 2021\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:4
msgid "Using Generated Code in a Robot Program"
msgstr "Usar el código generado en un programa de robot"

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:6
msgid ""
"GRIP generates a class that can be added to an FRC\\ |reg| program that runs"
" on a roboRIO and without a lot of additional code, drive the robot based on"
" the output."
msgstr ""
"GRIP genera una clase que puede ser añadida a un programa FRC\\ |reg| que se"
" ejecuta en una roboRIO y sin mucho código adicional, conduce el robot según"
" la salida."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:9
msgid ""
"Included here is a complete sample program that uses a GRIP pipeline that "
"drives a robot towards a piece of retroreflective material."
msgstr ""
"Aquí se incluye un programa de muestra completo que utiliza una tubería GRIP"
" que conduce a un robot hacia un trozo de material retrorreflectante."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:12
msgid ""
"This program is designed to illustrate how the vision code works and does "
"not necessarily represent the best technique for writing your robot program."
" When writing your own program be aware of the following considerations:"
msgstr ""
"Este programa está diseñado para ilustrar cómo funciona el código de visión "
"y no representa necesariamente la mejor técnica para escribir su programa de"
" robot. Cuando escriba su propio programa, tenga en cuenta las siguientes "
"consideraciones:"

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:15
msgid ""
"**Using the camera output for steering the robot could be problematic**. The"
" camera code in this example that captures and processes images runs at a "
"much slower rate that is desirable for a control loop for steering the "
"robot. A better, and only slightly more complex solution, is to get headings"
" from the camera and it's processing rate, then have a much faster control "
"loop steering to those headings using a gyro sensor."
msgstr ""
"**Utilizar la salida de la cámara para dirigir el robot podría ser "
"problemático**. El código de la cámara en este ejemplo que captura y procesa"
" las imágenes funciona a una velocidad mucho más lenta que la deseable para "
"un bucle de control para dirigir el robot. Una mejor solución, y sólo "
"ligeramente más compleja, es obtener los encabezados de la cámara y su tasa "
"de procesamiento, y luego tener un bucle de control mucho más rápido para "
"dirigir esos encabezados usando un sensor giroscópico."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:19
msgid ""
"**Keep the vision code in the class that wraps the pipeline**. A better way "
"of writing object oriented code is to subclass or instantiate the generated "
"pipeline class and process the OpenCV results there rather than in the robot"
" program. In this example, the robot code extracts the direction to drive by"
" manipulating the resultant OpenCV contours. By having the OpenCV code "
"exposed throughout the robot program it makes it difficult to change the "
"vision algorithm should you have a better one."
msgstr ""
"**Mantenga el código de visión en la clase que envuelve la "
"pipeline/tubería**. Una mejor manera de escribir código orientado a objetos "
"es subclasificar o instanciar la clase de tubería generada y procesar los "
"resultados de OpenCV allí en vez de en el programa de robot. En este "
"ejemplo, el código del robot extrae la dirección a conducir manipulando los "
"contornos de OpenCV resultantes. Al tener el código de OpenCV expuesto a lo "
"largo del programa del robot hace difícil cambiar el algoritmo de visión en "
"caso de tener uno mejor."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:25
msgid "Iterative program definitions"
msgstr "Definiciones de programas iterativos"

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:58
msgid ""
"In this first part of the program you can see all the import statements for "
"the WPILib classes used for this program."
msgstr ""
"En esta primera parte del programa se pueden ver todas las declaraciones de "
"importación de las clases WPILib utilizadas para este programa."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:60
msgid "The **image width and height** are defined as 320x240 pixels."
msgstr "El **ancho y alto de la imagen** se definen como 320x240 píxeles."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:61
msgid ""
"The **VisionThread** is a WPILib class makes it easy to do your camera "
"processing in a separate thread from the rest of the robot program."
msgstr ""
"El **VisionThread** es una clase de WPILib que facilita el procesamiento de "
"la cámara en un hilo separado del resto del programa del robot."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:63
msgid ""
"**centerX** value will be the computed center X value of the detected "
"target."
msgstr ""
"El valor **centerX** será calculado del valor centro X del objetivo "
"detectado."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:64
msgid ""
"**DifferentialDrive** encapsulates the drive motors on this robot and allows"
" simplified driving."
msgstr ""
"**DifferentialDrive** encapsula los motores de accionamiento de este robot y"
" permite una conducción simplificada."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:65
msgid ""
"**imgLock** is a variable to synchronize access to the data being "
"simultaneously updated with each image acquisition pass and the code that's "
"processing the coordinates and steering the robot."
msgstr ""
"**imgLock** es una variable para sincronizar el acceso a los datos que se "
"actualizan simultáneamente con cada pasada de adquisición de imágenes y el "
"código que está procesando las coordenadas y dirigiendo el robot."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:92
msgid ""
"The **robotInit()** method is called once when the program starts up. It "
"creates a **CameraServer** instance that begins capturing images at the "
"requested resolution (IMG_WIDTH by IMG_HEIGHT)."
msgstr ""
"El método **robotInit()** se llama una vez cuando el programa se inicia. "
"Crea una instancia **CameraServer** que comienza a capturar imágenes con la "
"resolución solicitada (IMG_WIDTH por IMG_HEIGHT)."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:95
msgid ""
"Next an instance of the class **VisionThread** is created. VisionThread "
"begins capturing images from the camera asynchronously in a separate thread."
" After processing each image, the pipeline computed **bounding box** around "
"the target is retrieved and it's **center X** value is computed. This "
"centerX value will be the x pixel value of the center of the rectangle in "
"the image."
msgstr ""
"A continuación se crea una instancia de la clase **VisionThread**. "
"VisionThread comienza a capturar imágenes de la cámara asincrónicamente en "
"un hilo separado. Después de procesar cada imagen, se recupera el conducto "
"calculado **bounding box** alrededor del objetivo y se calcula su valor "
"**center X**. Este valor centerX será el valor de x píxeles del centro del "
"rectángulo en la imagen."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:99
msgid ""
"The VisionThread also takes a **VisionPipeline** instance (here, we have a "
"subclass **MyVisionPipeline** generated by GRIP) as well as a callback that "
"we use to handle the output of the pipeline. In this example, the pipeline "
"outputs a list of contours (outlines of areas in an image) that mark goals "
"or targets of some kind. The callback finds the bounding box of the first "
"contour in order to find its center, then saves that value in the variable "
"centerX. Note the synchronized block around the assignment: this makes sure "
"the main robot thread will always have the most up-to-date value of the "
"variable, as long as it also uses **synchronized** blocks to read the "
"variable."
msgstr ""
"El VisionThread también toma una instancia de **VisionPipeline** (aquí, "
"tenemos una subclase **MyVisionPipeline** generada por el GRIP) así como una"
" llamada de retorno que usamos para manejar la salida de la "
"tubería/pipeline. En este ejemplo, la tubería produce una lista de contornos"
" (contornos de áreas en una imagen) que marcan objetivos o metas de algún "
"tipo. La llamada de retorno encuentra el cuadro delimitador del primer "
"contorno para encontrar su centro, luego guarda ese valor en la variable "
"centerX. Observe el bloque sincronizado alrededor de la asignación: esto "
"asegura que el hilo principal del robot siempre tendrá el valor más "
"actualizado de la variable, siempre y cuando también utilice bloques "
"**sincronizados** para leer la variable."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:120
msgid ""
"This, the final part of the program, is called repeatedly during the "
"**autonomous period** of the match. It gets the **centerX** pixel value of "
"the target and **subtracts half the image width** to change it to a value "
"that is **zero when the rectangle is centered** in the image and **positive "
"or negative when the target center is on the left or right side of the "
"frame.** That value is used to steer the robot towards the target."
msgstr ""
"Esta, la parte final del programa, se llama repetidamente durante el "
"**período autónomo** del partido. Obtiene el valor de **centerX** píxeles "
"del objetivo y **sustrae la mitad del ancho de la imagen** para cambiarlo a "
"un valor que es **cero cuando el rectángulo está centrado** en la imagen y "
"**positivo o negativo cuando el centro del objetivo está a la izquierda o a "
"la derecha del cuadro.** Ese valor se utiliza para dirigir el robot hacia el"
" objetivo."

#: ../../frc-docs/source/docs/software/vision-processing/grip/using-generated-code-in-a-robot-program.rst:125
msgid ""
"Note the **synchronized** block at the beginning. This takes a snapshot of "
"the most recent centerX value found by the VisionThread."
msgstr ""
"Fíjese en el bloque **sincronizado** al principio. Esto toma una instantánea"
" del valor centerX más reciente encontrado por el VisionThread."
