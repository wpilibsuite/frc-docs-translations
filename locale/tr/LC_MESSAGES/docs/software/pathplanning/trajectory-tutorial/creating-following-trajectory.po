# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, FIRST and other WPILib Contributors. This work is licensed under a Creative Commons Attribution 4.0 International License
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2021
# ceren oktemer <ceren.oktemer@gmail.com>, 2021
# Deniz Şentürk, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2025\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-06 16:06+0000\n"
"PO-Revision-Date: 2021-06-22 22:08+0000\n"
"Last-Translator: Deniz Şentürk, 2025\n"
"Language-Team: Turkish (Turkey) (https://app.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:2
msgid "Step 4: Creating and Following a Trajectory"
msgstr "Adım 4: Bir Yörüngenin Oluşturulması ve Takip Edilmesi"

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:6
msgid ""
"As per the :ref:`standard command-based project structure "
"<docs/software/commandbased/structuring-command-based-project:Structuring a "
"Command-Based Robot Project>`, we will do this in the "
"``getAutonomousCommand`` method of the ``RobotContainer`` class.  The full "
"method from the RamseteCommand Example Project (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/v2024.3.2/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/ramsetecommand>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/v2024.3.2/wpilibcExamples/src/main/cpp/examples/RamseteCommand>`__)"
" can be seen below.  The rest of the article will break down the different "
"parts of the method in more detail."
msgstr ""
":ref:`Standart komut temelli proje yapısıyla "
"<docs/software/commandbased/structuring-command-based-project:Structuring a "
"Command-Based Robot Project>` gereğince bu işlemleri ``RobotContainer`` "
"sınıfının ``getAutonomousCommand`` metodu ile gerçekleştireceğiz. "
"RamseteCommand Örnek Projesi'ndeki metodun tamamı (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/v2024.3.2/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/ramsetecommand>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/v2024.3.2/wpilibcExamples/src/main/cpp/examples/RamseteCommand>`__)"
" aşağıda görüntülenebilmektedir. Yazının geri kalanı, metodun farklı "
"bölümlerini ayrıntılandıracaktır."

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:0
msgid "Java"
msgstr "Java"

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:0
msgid "C++ (Source)"
msgstr "C ++ (Kaynak)"

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:108
msgid ""
"Instead of generating the trajectory on the roboRIO as outlined above, one "
"can also :ref:`import a PathWeaver JSON "
"<docs/software/pathplanning/pathweaver/integrating-robot-program:Importing a"
" PathWeaver JSON>`."
msgstr ""
"Yukarıda belirtildiği üzere roboRIO'da bir yörünge oluşturmak yerine "
":ref:`bi PathWeaver JSON'un içe aktarılması "
"<docs/software/pathplanning/pathweaver/integrating-robot-program:Importing a"
" PathWeaver JSON>` da mümkündür."

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:136
msgid ""
"It is very important that the initial robot pose match the first pose in the"
" trajectory.  For the purposes of our example, the robot will be reliably "
"starting at a position of ``(0,0)`` with a heading of ``0``.  In actual use,"
" however, it is probably not desirable to base your coordinate system on the"
" robot position, and so the starting position for both the robot and the "
"trajectory should be set to some other value.  If you wish to use a "
"trajectory that has been defined in robot-centric coordinates in such a "
"situation, you can transform it to be relative to the robot's current pose "
"using the ``transformBy`` method (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/math/trajectory/Trajectory.html#transformBy(edu.wpi.first.math.geometry.Transform2d)>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc_1_1_trajectory.html#a8edfbd82347bbf32ddfb092679336cd8>`__)."
"  For more information about transforming trajectories, see "
":ref:`docs/software/advanced-controls/trajectories/transforming-"
"trajectories:Transforming Trajectories`."
msgstr ""
"İlk robot pozunun yörüngedeki ilk poz ile örtüşmesi son derece önemlidir. "
"Kullanacağımız örnek için robotun düzenli bir şekilde ``0`` yönü ile "
"``(0,0)`` başlangıç konumunda olduğunu varsayınız. Ancak gerçek kullanım "
"sırasında, koordinat sisteminizi robot konumundan yola çıkarak belirlemek "
"istenilen bir durum olmayacaktır, bu sebeple başlangıç konumu olarak başka "
"bir değerin belirlenmesi gerekmektedir. Böyle bir durumda robot odaklı "
"koordinatlarda tanımlanmış bir yörünge kullanmak istiyorsanız, "
"``transformBy`` metodunu (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/math/trajectory/Trajectory.html#transformBy(edu.wpi.first.math.geometry.Transform2d)>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc_1_1_trajectory.html#a8edfbd82347bbf32ddfb092679336cd8>`__)"
" kullanarak yörüngeyi robotun anlık pozuna göreceli olacak bir şekle "
"dönüştürebilirsiniz. Yörünge dönüşümlerine dair daha fazla bilgi için bkz. "
":ref:`docs/software/advanced-controls/trajectories/transforming-"
"trajectories:Transforming Trajectories`."

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:138
msgid ""
"Now that we have a trajectory, we can create a command that, when executed, "
"will follow that trajectory.  To do this, we use the ``RamseteCommand`` "
"class (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/wpilibj2/command/RamseteCommand.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc2_1_1_ramsete_command.html>`__)"
msgstr ""
"artık elimizde bir yörünge olduğuna göre çalıştırıldığı zaman u yörüngeyi "
"takip edecek bir komut oluşturabiliriz. Bunun için ``RamseteCommand`` "
"sınıfını (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/wpilibj2/command/RamseteCommand.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc2_1_1_ramsete_command.html>`__)"
" kullanmaktayız."

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:163
msgid ""
"The pose supplier: This is a method reference (or lambda) to the :ref:`drive"
" subsystem method that returns the pose "
"<docs/software/pathplanning/trajectory-tutorial/creating-drive-"
"subsystem:Odometry Accessor Method>`.  The RAMSETE controller needs the "
"current pose measurement to determine the required wheel outputs."
msgstr ""
"Poz tedarikçisi: Bu, :ref:`pozu döndüren sürüş alt sistemi metodu "
"<docs/software/pathplanning/trajectory-tutorial/creating-drive-"
"subsystem:Odometry Accessor Method>` için bir metod referansı (veya lambda) "
"görevi görmektedir. RAMSETE kontrolörü gerekli teker çıktılarını belirlemek "
"için anlık poz ölçümlerine ihtiyaç duymaktadır."

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:164
msgid ""
"The RAMSETE controller: This is the ``RamseteController`` object (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/math/controller/RamseteController.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc_1_1_ramsete_controller.html>`__)"
" that will perform the path-following computation that translates the "
"current measured pose and trajectory state into a chassis speed setpoint."
msgstr ""
"RAMSETE kontrolörü: Bu, anlık ölçülen poz ve yörünge durumunu şasi hız ayar "
"noktasına dönüştüren yol takibi hesaplamasını gerçekleştirecek "
"``RamseteController`` nesnesidir (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/math/controller/RamseteController.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc_1_1_ramsete_controller.html>`__)."

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:165
msgid ""
"The drive feedforward: This is a ``SimpleMotorFeedforward`` object (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/math/controller/SimpleMotorFeedforward.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc_1_1_simple_motor_feedforward.html>`__)"
" that will automatically perform the correct feedforward calculation with "
"the feedforward gains (``kS``, ``kV``, and ``kA``) that we obtained from the"
" drive identification tool."
msgstr ""
"Sürüş ileri beslemesi: Bu, sürüş tespitinden elde ettiğimiz ileri besleme "
"kazançları  (``kS``, ``kV`` ve ``kA``) ile kendiliğinden uygun ileri besleme"
" hesaplarını yapacak ``SimpleMotorFeedforward`` nesnesidir (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/math/controller/SimpleMotorFeedforward.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc_1_1_simple_motor_feedforward.html>`__)."

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:166
msgid ""
"The drive kinematics: This is the ``DifferentialDriveKinematics`` object "
"(`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/math/kinematics/DifferentialDriveKinematics.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc_1_1_differential_drive_kinematics.html>`__)"
" that we constructed earlier in our constants file, and will be used to "
"convert chassis speeds to wheel speeds."
msgstr ""
"Sürüş kinematikleri: Bu, önceden sabitler dosyasında oluşturduğumuz ve şasi "
"hazını teker hızına dönüştürmek için kullanılacak "
"``DifferentialDriveKinematics`` nesnesidir (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/math/kinematics/DifferentialDriveKinematics.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc_1_1_differential_drive_kinematics.html>`__)."
" "

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:167
msgid ""
"The wheel speed supplier: This is a method reference (or lambda) to the "
":ref:`drive subsystem method that returns the wheel speeds "
"<docs/software/pathplanning/trajectory-tutorial/creating-drive-"
"subsystem:Encoder Accessor Method>`"
msgstr ""
"Teker hızı tedrikçisi: Bu, :ref:`tekerlek hızını döndüren sürüş alt sistemi "
"metodu <docs/software/pathplanning/trajectory-tutorial/creating-drive-"
"subsystem:Encoder Accessor Method>` için bir metod referansı (veya lambda) "
"görevi görmektedir."

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:168
msgid ""
"The left-side PIDController: This is the ``PIDController`` object (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/math/controller/PIDController.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc_1_1_p_i_d_controller.html>`__)"
" that will track the left-side wheel speed setpoint, using the P gain that "
"we obtained from the drive identification tool."
msgstr ""
"Sol taraftaki PIDController: Bu, sürüş tespit aracından elde ettiğimiz P "
"kazancını kullanarak sol taraftaki tekerlek hız ayar noktasını izleyecek "
"``PIDController`` nesnesidir (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/math/controller/PIDController.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc_1_1_p_i_d_controller.html>`__)."

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:169
msgid ""
"The right-side PIDController: This is the ``PIDController`` object (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/math/controller/PIDController.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc_1_1_p_i_d_controller.html>`__)"
" that will track the right-side wheel speed setpoint, using the P gain that "
"we obtained from the drive identification tool."
msgstr ""
"Sağ taraftaki PIDController: Bu, sürüş tespit aracından elde ettiğimiz P "
"kazancını kullanarak sağ taraftaki tekerlek hız ayar noktasını izleyecek "
"``PIDController`` nesnesidir (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/math/controller/PIDController.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classfrc_1_1_p_i_d_controller.html>`__)."

#: ../../frc-docs/source/docs/software/pathplanning/trajectory-tutorial/creating-following-trajectory.rst:170
msgid ""
"The output consumer: This is a method reference (or lambda) to the "
":ref:`drive subsystem method that passes the voltage outputs to the drive "
"motors <docs/software/pathplanning/trajectory-tutorial/creating-drive-"
"subsystem:Voltage-Based Drive Method>`."
msgstr ""
"Çıktı tüketicisi: Bu, :ref:`voltaj çıktılarını sürüş motorlarına aktaran "
"sürüş alt sistemi metodu <docs/software/pathplanning/trajectory-"
"tutorial/creating-drive-subsystem:Voltage-Based Drive Method>` için bir "
"metod referansı (veya lambda) görevi görmektedir."
