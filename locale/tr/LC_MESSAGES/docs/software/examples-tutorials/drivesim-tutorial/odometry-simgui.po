# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Esra ÖZEMRE <esra.ozemre@tfo.k12.tr>, 2020
# Müfit ALKAYA_3390 <mufit.alkaya@tfo.k12.tr>, 2020
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-06 04:14+0000\n"
"PO-Revision-Date: 2020-12-16 04:21+0000\n"
"Last-Translator: Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2021\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/odometry-simgui.rst:2
msgid "Step 4: Updating Odometry and Visualizing Robot Position"
msgstr "Adım 4: Odometriyi Güncelleme ve Robot Konumunu Görselleştirme"

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/odometry-simgui.rst:3
msgid ""
"Now that the simulated encoder positions, velocities, and gyro angles are "
"being updated with accurate information periodically, this data can be used "
"to update the pose of the robot in a periodic loop (such as the "
"``periodic()`` method in a ``Subsystem``). In simulation, the periodic loop "
"will use simulated encoder and gyro readings to update odometry whereas on "
"the real robot, the same code will use real readings from physical hardware."
msgstr ""
"Simüle edilmiş kodlayıcı konumları, hızları ve cayro açıları düzenli olarak "
"doğru bilgilerle güncellendiğinden, bu veriler periyodik bir döngüde robotun"
" pozunu güncellemek için kullanılabilir (örneğin, bir periyodik döngüde "
"``periodic()`` yöntemi ``Subsystem-Alt Sistem``). Simülasyonda, periyodik "
"döngü, odometriyi güncellemek için simüle edilmiş kodlayıcı ve cayro "
"okumalarını kullanır, oysa gerçek robotta aynı kod fiziksel donanımdan "
"gerçek okumaları kullanır."

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/odometry-simgui.rst:5
msgid ""
"For more information on using odometry, see :ref:`this document "
"<docs/software/kinematics-and-odometry/differential-drive-"
"odometry:Differential Drive Odometry>`."
msgstr ""
"Odometri kullanma hakkında daha fazla bilgi için bkz :ref:`this document "
"<docs/software/kinematics-and-odometry/differential-drive-"
"odometry:Differential Drive Odometry>`."

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/odometry-simgui.rst:8
msgid "Robot Pose Visualization"
msgstr "Robot Poz Görselleştirme"

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/odometry-simgui.rst:9
msgid ""
"The robot pose can be visualized on the Simulator GUI (during simulation) or"
" on a dashboard such as Glass (on a real robot) by sending the odometry pose"
" over a ``Field2d`` object. A ``Field2d`` can be trivially constructed "
"without any constructor arguments:"
msgstr ""
"Robot duruşu Simülatör GUI'de (simülasyon sırasında) veya Cam gibi bir "
"gösterge panosunda (gerçek bir robot üzerinde) odometre pozunu bir "
"``Field2d`` nesnesi üzerinden göndererek görselleştirilebilir. Bir "
"``Field2d``,  herhangi bir yapıcı argümanı olmadan önemsiz bir şekilde "
"oluşturulabilir:"

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/odometry-simgui.rst:24
msgid ""
"This ``Field2d`` instance must then be sent over NetworkTables. The best "
"place to do this is in the constructor of your subsystem."
msgstr ""
"Bu ``Field2d`` örneği daha sonra NetworkTables üzerinden gönderilmelidir. "
"Bunu yapmak için en iyi yer, alt sisteminizin kurucusudur."

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/odometry-simgui.rst:43
msgid ""
"The ``Field2d`` instance can also be sent using a lower-level NetworkTables "
"API or using the :ref:`Shuffleboard API <docs/software/wpilib-"
"tools/shuffleboard/getting-started/shuffleboard-displaying-data:Displaying "
"data from your robot>`."
msgstr ""
"``Field2d`` örneği, daha düşük seviyeli bir NetworkTables API kullanılarak "
"veya :ref:`Shuffleboard API <docs/software/wpilib-tools/shuffleboard"
"/getting-started/shuffleboard-displaying-data:Displaying data from your "
"robot>` kullanılarak da gönderilebilir."

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/odometry-simgui.rst:45
msgid ""
"Finally, the pose from your odometry must be updated periodically into the "
"``Field2d`` object. Remember that this should be in a general ``periodic()``"
" method i.e. one that runs both during simulation and during real robot "
"operation."
msgstr ""
"Son olarak, odometrinizden alınan poz periyodik olarak ``Field2d`` nesnesine"
" güncellenmelidir. Bunun genel bir ``periodic ()`` yöntemi, yani hem "
"simülasyon sırasında hem de gerçek robot çalışması sırasında çalışan bir "
"yöntem olması gerektiğini unutmayın."

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/odometry-simgui.rst:74
msgid ""
"It is important that this code is placed in a regular ``periodic()`` method "
"-- one that is called periodically regardless of mode of operation. If you "
"are using the command-based library, this method already exists. If not, you"
" are responsible for calling this method periodically from the main "
"``Robot`` class."
msgstr ""
"Bu kodun, çalışma modundan bağımsız olarak periyodik olarak çağrılan düzenli"
" bir ``periodic ()`` yöntemine yerleştirilmesi önemlidir. Komut tabanlı "
"kitaplığı kullanıyorsanız, bu yöntem zaten mevcuttur. Değilse, bu yöntemi "
"periyodik olarak ana ``Robot`` sınıfından çağırmakla sorumlusunuz."
