# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020
# Müfit ALKAYA <mufit.alkaya@tfo.k12.tr>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-21 16:23+0000\n"
"PO-Revision-Date: 2020-04-25 02:05+0000\n"
"Last-Translator: Müfit ALKAYA <mufit.alkaya@tfo.k12.tr>, 2020\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:4
msgid "2017 Vision Examples"
msgstr "2017 Vision Örnekleri"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:7
msgid "LabVIEW"
msgstr "LabVIEW"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:9
msgid ""
"The 2017 LabVIEW Vision Example is included with the other LabVIEW examples."
" From the Splash screen, click Support->Find FRC\\ |reg| Examples or from "
"any other LabVIEW window, click Help->Find Examples and locate the Vision "
"folder to find the 2017 Vision Example. The example images are bundled with "
"the example."
msgstr ""
"2017 LabVIEW Vision Örneği diğer LabVIEW örnekleriyle birlikte "
"verilmektedir. Açılış ekranından Destek-> FRC Bul \\ | reg | Örneklerden "
"veya başka herhangi bir LabVIEW penceresinden, Yardım-> Örnekler Bul'a "
"tıklayın ve 2017 Vision Örneğini bulmak için Vision klasörünü bulun. Örnek "
"görüntüler örnekle paketlenmiştir."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:12
msgid "C++/Java"
msgstr "C++/Java"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:14
msgid ""
"We have provided a GRIP project and the description below, as well as the "
"example images, bundled into a ZIP that `can be found on TeamForge "
"<https://usfirst.collab.net/sf/frs/do/viewRelease/projects.wpilib/frs.sample_programs.2017_c_java_vision_sample>`_."
msgstr ""
"Bir GRIP projesi ve aşağıdaki açıklamanın yanı sıra bir ZIP içine "
"yerleştirilmiş örnek görseller sağladık. `TeamForge'da bulunabilir "
"<https://usfirst.collab.net/sf/frs/do/viewRelease/projects.wpilib/frs.sample_programs.2017_c_java_vision_sample>`_."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:16
msgid ""
"See :ref:`docs/software/vision-processing/grip/using-generated-code-in-a"
"-robot-program:Using Generated Code in a Robot Program` for details about "
"integrating GRIP generated code in your robot program."
msgstr ""
"GRIP tarafından oluşturulan kodu robot programınıza entegre etme hakkında "
"ayrıntılar için :ref:`docs/software/vision-processing/grip/using-generated-"
"code-in-a-robot-program:Using Generated Code in a Robot Program`  bölümüne "
"bakın."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:18
msgid ""
"The code generated by the included GRIP project will find OpenCV contours "
"for green particles in images like the ones included in the Vision Images "
"folder of this ZIP. From there you may wish to further process these "
"contours to assess if they are the target. To do this:"
msgstr ""
"Dahil edilen GRIP projesi tarafından oluşturulan kod, bu ZIP'ın Vision "
"Images klasöründe bulunanlar gibi görüntülerde yeşil parçacıklar için OpenCV"
" konturlarını bulacaktır. Oradan, hedef olup olmadıklarını değerlendirmek "
"için bu konturları daha fazla işlemek isteyebilirsiniz. Bunu yapmak için:"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:20
msgid ""
"Use the boundingRect method to draw bounding rectangles around the contours"
msgstr ""
"Konturların etrafına sınırlayıcı dikdörtgenler çizmek için boundingRect "
"yöntemini kullanın"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:21
msgid ""
"The LabVIEW example code calculates 5 separate ratios for the target. Each "
"of these ratios should nominally equal 1.0. To do this, it sorts the "
"contours by size, then starting with the largest, calculates these values "
"for every possible pair of contours that may be the target, and stops if it "
"finds a target or returns the best pair it found."
msgstr ""
"LabVIEW örnek kodu, hedef için 5 ayrı oran hesaplar. Bu oranların her biri "
"nominal olarak 1.0'a eşit olmalıdır. Bunu yapmak için, konturları boyuta "
"göre sıralar, ardından en büyüğünden başlayarak, hedef olabilecek her olası "
"kontur çifti için bu değerleri hesaplar ve bir hedef bulursa veya bulduğu en"
" iyi çifti döndürürse durur."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:23
msgid ""
"In the formulas below, each letter refers to a coordinate of the bounding "
"rect (H = Height, L = Left, T = Top, B = Bottom, W = Width) and the numeric "
"subscript refers to the contour number (1 is the largest contour, 2 is the "
"second largest, etc)."
msgstr ""
"Aşağıdaki formüllerde, her harf sınırlayıcı rektenin (H = Yükseklik, L = "
"Sol, T = Üst, B = Alt, W = Genişlik) bir koordinatını ve sayısal alt simge "
"kontur numarasını (1 en büyük kontur, 2 en büyük ikinci, vb.)."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:25
msgid "Top height should be 40% of total height (4 in / 10 in):"
msgstr "Üst yükseklik, toplam yüksekliğin% 40'ı olmalıdır (4 inç / 10 inç):"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:27
msgid ""
"\\textit{Group Height} = \\frac{H_1}{0.4 (B_2 - T_1)}\n"
"\n"
msgstr ""
"\\textit{Group Height} = \\frac{H_1}{0.4 (B_2 - T_1)}\n"
"\n"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:29
msgid ""
"Top of bottom stripe to top of top stripe should be 60% of total height (6 "
"in / 10 in):"
msgstr ""
"Alt şeridin üstünden üst şeridin üstüne kadar toplam yüksekliğin% 60'ı "
"olmalıdır (6 inç / 10 inç):"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:31
msgid ""
"\\textit{dTop} = \\frac{T_2 - T_1}{0.6 (B_2 - T_1)}\n"
"\n"
msgstr ""
"\\textit{dTop} = \\frac{T_2 - T_1}{0.6 (B_2 - T_1)}\n"
"\n"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:33
msgid ""
"The distance between the left edge of contour 1 and the left edge of contour"
" 2 should be small relative to the width of the 1st contour; then we add 1 "
"to make the ratio centered on 1:"
msgstr ""
"Kontur 1'in sol kenarı ile kontur 2'nin sol kenarı arasındaki mesafe, 1. "
"konturun genişliğine göre küçük olmalıdır; daha sonra oranı 1'e ortalamak "
"için 1 ekliyoruz:"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:35
msgid ""
"\\textit{LEdge} = \\frac{L_1 - L_2}{W_1} + 1\n"
"\n"
msgstr ""
"\\textit{LEdge} = \\frac{L_1 - L_2}{W_1} + 1\n"
"\n"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:37
msgid "The widths of both contours should be about the same:"
msgstr "Her iki konturun genişliği yaklaşık olarak aynı olmalıdır:"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:39
msgid ""
"\\textit{Width ratio} = \\frac{W_1}{W_2}\n"
"\n"
msgstr ""
"\\textit{Width ratio} = \\frac{W_1}{W_2}\n"
"\n"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:41
msgid "The larger stripe should be twice as tall as the smaller one"
msgstr "Büyük şerit, küçük şeritten iki kat daha uzun olmalıdır."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:43
msgid ""
"\\textit{Height ratio} = \\frac{H_1}{2 H_2}\n"
"\n"
msgstr ""
"\\textit{Height ratio} = \\frac{H_1}{2 H_2}\n"
"\n"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:45
msgid "Each of these ratios is then turned into a 0-100 score by calculating:"
msgstr ""
"Bu oranların her biri daha sonra hesaplanarak 0-100 arasında bir puana "
"dönüştürülür:"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:47
msgid ""
"100 - (100 \\cdot \\mathrm{abs}(1 - \\textit{Val}))\n"
"\n"
msgstr ""
"100 - (100 \\cdot \\mathrm{abs}(1 - \\textit{Val}))\n"
"\n"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:49
msgid ""
"To determine distance, measure pixels from top of top bounding box to bottom"
" of bottom bounding box:"
msgstr ""
"Mesafeyi belirlemek için, üst sınırlayıcı kutunun üstünden alt sınırlayıcı "
"kutunun altına kadar pikselleri ölçün:"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:51
msgid ""
"\\textit{distance} = \\frac{\\textit{Target height in ft.} (10/12) \\cdot \\textit{YRes}}{2 \\cdot \\textit{PixelHeight} \\cdot \\tan (\\textit{viewAngle of camera})}\n"
"\n"
msgstr ""
"\\textit{distance} = \\frac{\\textit{Target height in ft.} (10/12) \\cdot \\textit{YRes}}{2 \\cdot \\textit{PixelHeight} \\cdot \\tan (\\textit{viewAngle of camera})}\n"
"\n"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:53
msgid ""
"The LabVIEW example uses height as the edges of the round target are the "
"most prone to noise in detection (as the angle points further from the "
"camera   the color looks less green). The downside of this is that the pixel"
" height of the target in the image is affected by perspective distortion "
"from the angle of the camera. Possible fixes include:"
msgstr ""
"LabVIEW örneği, yuvarlak hedefin kenarları algılamada parazite en yatkın "
"olduğu için yüksekliği kullanır (açı kameradan uzaklaştıkça renk daha az "
"yeşil görünür). Bunun dezavantajı, görüntüdeki hedefin piksel yüksekliğinin "
"kamera açısından perspektif bozulmadan etkilenmesidir. Olası düzeltmeler "
"şunları içerir:"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:55
msgid "Try using width instead"
msgstr "Bunun yerine genişliği kullanmayı deneyin"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:56
msgid ""
"Empirically measure height at various distances and create a lookup table or"
" regression function"
msgstr ""
"Yüksekliği çeşitli mesafelerde ampirik olarak ölçün ve bir arama tablosu "
"veya regresyon işlevi oluşturun"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:57
msgid ""
"Mount the camera to a servo, center the target vertically in the image and "
"use servo angle for distance calculation (you'll have to work out the proper"
" trig yourself or find a math teacher to help!)"
msgstr ""
"Kamerayı bir servoya monte edin, hedefi görüntüde dikey olarak ortalayın ve "
"mesafe hesaplaması için servo açısını kullanın (uygun tetiği kendiniz "
"hesaplamanız veya yardım etmesi için bir matematik öğretmeni bulmanız "
"gerekir!)"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/2017-vision-examples.rst:58
msgid ""
"Correct for the perspective distortion using OpenCV. To do this you will "
"need to `calibrate your camera with OpenCV "
"<https://docs.opencv.org/3.4.6/d4/d94/tutorial_camera_calibration.html>`_. "
"This will result in a distortion matrix and camera matrix. You will take "
"these two matrices and use them with the undistortPoints function to map the"
" points you want to measure for the distance calculation to the \"correct\" "
"coordinates (this is much less CPU intensive than undistorting the whole "
"image)"
msgstr ""
"OpenCV kullanarak perspektif bozulmasını düzeltin. Bunu yapmak için, "
"`calibrate your camera with OpenCV "
"<https://docs.opencv.org/3.4.6/d4/d94/tutorial_camera_calibration.html>`_ "
"ile kalibre etmeniz gerekir. Bu, bir distorsiyon matrisi ve kamera matrisi "
"ile sonuçlanacaktır. Mesafe hesaplaması için ölçmek istediğiniz noktaları "
"\"correct-doğru\" koordinatlarla eşlemek için bu iki matrisi alacak ve "
"onları undistortPoints fonksiyonu ile kullanacaksınız (bu, tüm görüntünün "
"bozulmasını bozmaktan çok daha az CPU yoğunlukludur)"
