# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Ningxi Huang, 2021
# Team 5308 <team5308@163.com>, 2021
# Ran Xin <xinryanryan@outlook.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-04 16:03+0000\n"
"PO-Revision-Date: 2021-06-22 22:06+0000\n"
"Last-Translator: Ran Xin <xinryanryan@outlook.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:2
msgid "Displaying data from your robot"
msgstr "显示来自机器人的数据"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:4
msgid ""
"Your robot can display data in regular operating modes like Teleop and "
"Autonomous modes but you can also display the status and operate all the "
"robot subsystems when the robot is switched to Test mode. By default you'll "
"see two tabs when you start Shuffleboard, one for Teleop/Autonomous and "
"another for Test mode. The currently selected tab is underlined as can be "
"seen in the picture below."
msgstr ""
"您的机器人可以在诸如遥测阶段和自动阶段模式之类的常规操作模式下显示数据，但是当机器人切换到“测试”模式时，您还可以显示状态并操作所有机器人子系统。默认情况下，启动Shuffleboard时，您会看到两个标签，一个用于遥测姐阶段"
" / 自动阶段，另一个用于测试模式。如下面的图片所示，当前选择的选项卡带有下划线。"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:9
msgid ""
"Often debugging or monitoring the status of a robot involves writing a "
"number of values to the console and watching them stream by. With "
"Shuffleboard you can put values to a GUI that is automatically constructed "
"based on your program. As values are updated, the corresponding GUI element "
"changes value - there is no need to try to catch numbers streaming by on the"
" screen."
msgstr ""
"通常，调试或监视机器的状态需要将许多数值写入控制台，并观察它们的流向。使用Shuffleboard，您可以将数值放到基于程序自动构建的GUI中。随着数值的更新"
"，相应的GUI元素也会更改值-无需尝试捕获屏幕上流式传输的数字。"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:12
msgid "Displaying values in normal operating mode (autonomous or teleop)"
msgstr "在正常操作模式下显示数值（自动阶段或遥测阶段）"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:32
msgid ""
"You can write Boolean, Numeric, or String values to Shuffleboard by simply "
"calling the correct method for the type and including the name and the value"
" of the data, no additional code is required."
msgstr "您可以通过简单地为类型调用正确的方法，包括数据的名称和值，将布尔值，数字值或字符串值写入Shuffleboard，而无需其他代码。"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:34
msgid ""
"Numeric types such as char, int, long, float or double call "
"SmartDashboard.putNumber(\"dashboard-name\", value)."
msgstr ""
"字符类型，例如char，int，long，float或double调用SmartDashboard.putNumber（“ dashboard-"
"name”，value）。"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:35
msgid "String types call SmartDashboard.putString(\"dashboard-name\", value)"
msgstr "字符串类型调用SmartDashboard.putString（“ dashboard-name”，value）"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:36
msgid "Boolean types call SmartDashboard.putBoolean(\"dashboard-name\", value)"
msgstr "布尔类型调用SmartDashboard.putBoolean（“ dashboard-name”，value）"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:39
msgid "Changing the display type of data"
msgstr "更改数据的显示类型"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:41
msgid ""
"Depending on the data type of the values being sent to Shuffleboard you can "
"often change the display format. In the previous example you can see that "
"number values were displayed as either decimal numbers, a dial to better "
"represent angles, and as a voltage view for the turret potentiometer. To set"
" the display type right-click on the tile and select \"Show as...\". You can"
" choose display types from the list in the popup menu."
msgstr ""
"根据发送到Shuffleboard的值的数据类型，您通常可以更改显示格式。在前面的示例中，您可以看到数字值显示为十进制数字，更好地表示角度的刻度盘以及转塔电位计的电压视图。要设置显示类型，请在图块上单击鼠标右键，然后选择“显示为...”。您可以从弹出菜单的列表中选择显示类型。"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:47
msgid "Displaying data in Test mode"
msgstr "在测试模式下显示数据"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:49
msgid ""
"You may add code to your program to display values for your sensors and "
"actuators while the robot is in Test mode. This can be selected from the "
"Driver Station whenever the robot is not on the field. The code to display "
"these values is automatically generated by RobotBuilder or manually added to"
" your program and is described in the next article. Test mode is designed to"
" verify the correct operation of the sensors and actuators on a robot. In "
"addition it can be used for obtaining setpoints from sensors such as "
"potentiometers and for tuning PID loops in your code."
msgstr ""
"您可以将代码添加到程序中，让机器人在处于“测试”模式时显示传感器和执行器的值。只要机器人不在现场，都可以从机器操控台中进行选择。显示这些值的代码由RobotBuilder自动生成或手动添加到您的程序中，并在下一篇文章中进行介绍。测试模式旨在验证机器人上传感器和执行器的正确操作。此外，它还可以用于从电位计等传感器获取设定值，以及在代码中调整PID回路。"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:52
msgid "Setting test mode"
msgstr "设定测试模式"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:57
msgid ""
"Enable Test Mode in the Driver Station by clicking on the \"Test\" button "
"and setting \"Enable\" on the robot. When doing this, Shuffleboard will "
"display the status of any actuators and sensors used by your program "
"organized by subsystem."
msgstr ""
"通过单击“测试”按钮并在机械手上设置“启用”，在机器操控台中启用测试模式。执行此操作时，Shuffleboard将显示由子系统组织的程序所使用的任何执行器和传感器的状态。"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:60
msgid "Getting data from the Sources view"
msgstr "从 Sources 中获取数据"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:62
msgid ""
"Normally :term:`NetworkTables` data automatically appears on one of the tabs"
" and you just rearrange and use that data. Sometimes you might want to "
"recover a value that was accidentally deleted from the tab or display a "
"value that is not part of the SmartDashboard / NetworkTables key. For these "
"cases the values can be dragged onto a pane from NetworkTables view under "
"Sources on the left side of the window. Choose the value that you want to "
"display and just drag it to the pane and it will be automatically created "
"with the default type of widget for the data type."
msgstr ""
"通常 :term:`NetworkTables` "
"数据会自动出现在其中一个选项卡上，您只需重新排列和使用该数据。有时您可能想要恢复从选项卡中意外删除的值或显示不属于 SmartDashboard / "
"NetworkTables 键的值。对于这些情况，可以将值从窗口左侧的 Sources 下的 NetworkTables "
"视图拖到窗格上。选择要显示的值并将其拖到窗格中，它将使用该数据类型的默认小部件类型自动创建。"

#: ../../frc-docs/source/docs/software/dashboards/shuffleboard/getting-started/shuffleboard-displaying-data.rst:67
msgid ""
"Sometimes the Sources view is not visible on the left - it is possible to "
"drag the divider between the tabbed panes and the Sources so the sources is "
"not visible. If this happens move the cursor over the left edge and look for"
" a divider resizing cursor, then left click and drag out the view. In the "
"two images below you can see where to click and drag, and when finished the "
"divider is as shown in the second image."
msgstr ""
"有时左边的Sources视图不可见——可以拖动选项卡窗格和源之间的分隔符，这样源就不可见了。如果发生这种情况，将光标移到左边边缘，寻找调整大小的分隔符光标，然后左键单击并拖出视图。在下面的两张图片中，你可以看到点击和拖动的位置，完成后的分割线如图2所示。"
