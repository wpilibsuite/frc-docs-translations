# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors. This work is licensed under a Creative Commons Attribution 4.0 International License
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Diana Ramos <dianaracasas@gmail.com>, 2021
# Sofia Fernandez <sofiafdz.val@gmail.com>, 2021
# Paulina Maynez <paump22@hotmail.com>, 2021
# Austin Shalit <austinshalit@gmail.com>, 2021
# Fernando Soltero <fersg806@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-26 04:30+0000\n"
"PO-Revision-Date: 2021-02-27 16:27+0000\n"
"Last-Translator: Fernando Soltero <fersg806@gmail.com>, 2021\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:2
msgid "Unit Testing"
msgstr "Unit Testing"

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:7
msgid "Writing Testable Code"
msgstr "Escribir código para pruebas"

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:9
msgid ""
"This example can be easily adapted to the command-based paradigm by having "
"``Intake`` inherit from ``SubsystemBase``."
msgstr ""
"Este ejemplo se puede adaptar fácilmente al paradigma basado en comandos "
"haciendo que ``Intake`` herede de ``SubsystemBase``."

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:11
msgid ""
"Our subsystem will be an Infinite Recharge intake mechanism containing a "
"piston and a motor: the piston deploys/retracts the intake, and the motor "
"will pull the Power Cells inside. We don't want the motor to run if the "
"intake mechanism isn't deployed because it won't do anything."
msgstr ""
"Nuestro subsistema será un mecanismo Intake para Infinite Recharge que "
"contiene un pistón y un motor: el pistón despliega/retrae la admisión y el "
"motor arrastrará las Power Cells hacia adentro. No queremos que el motor "
"funcione si el mecanismo de admisión no está desplegado porque no hará nada."

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:13
msgid ""
"To provide a \"clean slate\" for each test, we need to have a function to "
"destroy the object and free all hardware allocations. In Java, this is done "
"by implementing the ``AutoCloseable`` interface and its ``.close()`` method,"
" destroying each member object by calling the member's ``.close()`` method -"
" an object without a ``.close()`` method probably doesn't need to be closed."
" In C++, the default destructor will be called automatically when the object"
" goes out of scope and will call destructors of member objects."
msgstr ""
"Para proporcionar una \"pizarra limpia\" para cada prueba, necesitamos tener"
" una función para destruir el objeto y liberar todas las asignaciones de "
"hardware. En Java, esto se hace implementando la interfaz ``AutoCloseable`` "
"y su método ``.close()``, destruyendo cada objeto de los miembros al llamar "
"al método ``.close()`` del objeto -  un objeto sin un método ``.close()``  "
"probablemente no necesite ser cerrado. En C ++, el destructor predeterminado"
" se llamará automáticamente cuando el objeto salga del alcance y llamará a "
"los destructores de los objetos miembros."

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:15
msgid ""
"Vendors might not support resource closing identically to the way shown "
"here. See your vendor's documentation for more information as to what they "
"support and how."
msgstr ""
"Es posible que los proveedores no admitan el cierre de recursos de la misma "
"manera que se muestra aquí. Consulte la documentación de su proveedor para "
"obtener más información sobre qué admiten y cómo."

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:18
msgid "Java"
msgstr "Java"

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:59
msgid "C++ (Header)"
msgstr "C++ (Encabezado)"

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:80
msgid "C++ (Source)"
msgstr "C++ (Fuente)"

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:104
msgid "Writing Tests"
msgstr "Writing Tests"

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:106
msgid ""
"Tests are placed inside the ``test`` source set: ``/src/test/java/`` and "
"``/src/test/cpp/`` for Java and C++ tests, respectively. Files outside that "
"source root do not have access to the test framework - this will fail "
"compilation due to unresolved references."
msgstr ""
"Los tests se colocan dentro del conjunto de fuentes de ``test``:  "
"``/src/test/java/`` y ``/src/test/cpp/`` para tests de Java y C++ "
"respectivamente.  Los archivos fuera de esa raíz de origen no tienen acceso "
"al marco de prueba; esto fallará en la compilación debido a referencias sin "
"resolver."

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:108
msgid ""
"In Java, each test class contains at least one test method marked with "
"``@org.junit.Test``, each method representing a test case. Additional "
"methods for opening resources (such as our ``Intake`` object) before each "
"test and closing them after are respectively marked with "
"``@org.junit.Before`` and ``@org.junit.After``. In C++, test fixture classes"
" inheriting from ``testing::Test`` contain our subsystem and simulation "
"hardware objects, and test methods are written using the "
"``TEST_F(testfixture, testname)`` macro. The ``SetUp()`` and ``TearDown()`` "
"methods can be overridden in the test fixture class and will be run "
"respectively before and after each test."
msgstr ""
"En Java, cada clase de prueba contiene al menos un método de prueba marcado "
"con ``@org.junit.Test``, cada método representa un caso de prueba. Los "
"métodos adicionales para abrir recursos (como nuestro objeto ``Intake``) "
"antes de cada prueba y cerrarlos después están marcados respectivamente con "
"``@org.junit.Before`` y ``@org.junit.After``. En C++, las clases de test "
"fixture que heredan de ``testing::Test`` contienen nuestros objetos de "
"subsistema y hardware de simulación, y los métodos de prueba se escriben "
"utilizando la macro ``TEST_F(testfixture, testname)``. Los métodos "
"``SetUp()`` y ``TearDown()`` pueden ser sobreescritos en la clase test "
"fixture y se ejecutarán respectivamente antes y después de cada prueba."

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:110
msgid ""
"Each test method should contain at least one *assertion* (``assert*()`` in "
"Java or ``EXPECT_*()`` in C++). These assertions verify a condition at "
"runtime and fail the test if the condition isn't met. If there is more than "
"one assertion in a test method, the first failed assertion will crash the "
"test - execution won't reach the later assertions."
msgstr ""
"Cada método de prueba debe contener al menos una *aserción* (``assert*()`` "
"en Java o ``EXPECT_*()`` en C++). Estas aserciones verifican una condición "
"en tiempo de ejecución y fallan la prueba si la condición no se cumple. Si "
"hay más de una aserción en un método de prueba, la primera aserción fallida "
"bloqueará la prueba - la ejecución no llegará a las aserciones posteriores."

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:112
msgid ""
"Both JUnit and GoogleTest have multiple assertion types, but the most common"
" is equality: ``assertEquals(expected, actual)``/``EXPECT_EQ(expected, "
"actual)``. When comparing numbers, a third parameter - ``delta``, the "
"acceptable error, can be given. In JUnit (Java), these assertions are static"
" methods and can be used without qualification by adding the static star "
"import ``import static org.junit.Asssert.*``. In Google Test (C++), "
"assertions are macros from the ``<gtest/gtest.h>`` header."
msgstr ""
"Tanto JUnit como GoogleTest tienen múltiples tipos de aserción, pero la más "
"común es la de igualdad: ``assertEquals(expected, "
"actual)``/`EXPECT_EQ(expected, actual)``. Cuando se comparan números, se "
"puede dar un tercer parámetro: ``delta``, el error aceptable. En JUnit "
"(Java), estas aserciones son métodos estáticos y se pueden utilizar sin "
"calificación añadiendo la estrella estática import ``import static "
"org.junit.Asssert.*``. En Google Test (C++), las aserciones son macros de la"
" cabecera ``<gtest/gtest.h>``."

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:114
msgid ""
"Comparison of floating-point values isn't accurate, so comparing them should"
" be done with an acceptable error parameter (``DELTA``)."
msgstr ""
"La comparación de valores de punto flotante no es precisa, por lo que la "
"comparación debe hacerse con un parámetro de error aceptable (``DELTA``)."

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:214
msgid ""
"For more advanced usage of JUnit and Google Test, see the framework docs."
msgstr ""
"Para un uso más avanzado de JUnit y Google Test, consulte la documentación "
"del framework."

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:217
msgid "Running Tests"
msgstr "Pruebas para correrlo"

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:219
msgid ""
"Tests will always be run in simulation on your desktop. For prerequisites "
"and more info, see :doc:`the simulation introduction <introduction>`."
msgstr ""
"Las pruebas se ejecutarán siempre en simulación en su escritorio. Para "
"conocer los requisitos previos y más información, consulte el documento "
":doc:`introducción a la simulación<introduction>`."

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:221
msgid ""
"For Java tests to run, make sure that your ``build.gradle`` file contains "
"the following block:"
msgstr ""
"Para que las pruebas Java se ejecuten, asegúrese de que su archivo "
"``build.gradle`` contenga el siguiente bloque:"

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:229
msgid ""
"Use :guilabel:`Test Robot Code` from the Command Palette to run the tests. "
"Results will be reported in the terminal output, each test will have a "
"``FAILED`` or ``PASSED``/``OK`` label next to the test name in the output. "
"JUnit (Java only) will generate a HTML document in "
"``build/reports/tests/test/index.html`` with a more detailed overview of the"
" results; if there are failied test a link to render the document in your "
"browser will be printed in the terminal output."
msgstr ""
"Utilice :guilabel:`Test Robot Code` de la paleta de comandos para ejecutar "
"las pruebas. Los resultados serán reportados en la salida de la terminal, "
"cada prueba tendrá una etiqueta ``FAILED`` o ``PASSED``/``OK`` junto al "
"nombre de la prueba en la salida. JUnit (sólo en Java) generará un documento"
" HTML en ``build/reports/tests/test/index.html`` con un resumen más "
"detallado de los resultados; si hay pruebas fallidas se imprimirá en la "
"salida de la terminal un enlace para renderizar el documento en el "
"navegador."

#: ../../frc-docs/source/docs/software/wpilib-tools/robot-simulation/unit-testing.rst:231
msgid ""
"By default, Gradle runs the tests whenever robot code is built, including "
"deploys. This will increase deploy time, and failing tests will cause the "
"build and deploy to fail. To prevent this from happening, you can use "
":guilabel:`Change Skip Tests On Deploy Setting` from the Command Palette to "
"configure whether to run tests when deploying."
msgstr ""
"Por defecto, Gradle ejecuta las pruebas cada vez que se construye el código "
"del robot, incluyendo los despliegues. Esto aumentará el tiempo de "
"despliegue, y las pruebas fallidas harán que la construcción y el despliegue"
" fallen. Para evitar que esto ocurra, puedes utilizar :guilabel:`Change Skip"
" Tests On Deploy Setting` de la paleta de comandos para configurar si se "
"ejecutan las pruebas al desplegar."
