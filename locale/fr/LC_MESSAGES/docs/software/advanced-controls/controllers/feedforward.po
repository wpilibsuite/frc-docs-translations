# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Regis Bekale <rbekale@robotiquefirstquebec.org>, 2022
# Andre Theberge <atheberge2@videotron.ca>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-14 04:06+0000\n"
"PO-Revision-Date: 2020-04-25 02:01+0000\n"
"Last-Translator: Andre Theberge <atheberge2@videotron.ca>, 2022\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:4
msgid "Feedforward Control in WPILib"
msgstr "Commande prédictive ou par anticipation en WPILib"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:6
msgid ""
"So far, we've used feedback control for reference tracking (making a "
"system's output follow a desired reference signal). While this is effective,"
" it's a reactionary measure; the system won't start applying control effort "
"until the system is already behind. If we could tell the controller about "
"the desired movement and required input beforehand, the system could react "
"quicker and the feedback controller could do less work. A controller that "
"feeds information forward into the plant like this is called a feedforward "
"controller."
msgstr ""
"N.D.T. le terme anglais Feedforward sera utilisé quelquefois pour alléger le"
" texte. Jusqu'à présent, nous avons utilisé le contrôle de rétroaction pour "
"le suivi des références (faire en sorte que la sortie d'un système suive le "
"signal de référence souhaité). Bien que cela soit efficace, c'est une mesure"
" réactionnaire; le système ne commencera pas à appliquer l'effort de "
"contrôle tant que le système n'a pas pris un certain retard. Si nous "
"pouvions informer le contrôleur du mouvement souhaité et de l'entrée requise"
" à l'avance, le système pourrait réagir plus rapidement et le contrôleur de "
"rétroaction pourrait faire moins de travail. Un contrôleur qui transmet des "
"informations à l'Usine comme celle-ci est appelé contrôleur par anticipation"
" (Feedforward)."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:8
msgid ""
"A feedforward controller injects information about the system’s dynamics "
"(like a mathematical model does) or the intended movement. Feedforward "
"handles parts of the control actions we already know must be applied to make"
" a system track a reference, then feedback compensates for what we do not or"
" cannot know about the system’s behavior at runtime."
msgstr ""
"Un contrôleur par anticipation injecte des informations sur la dynamique du "
"système (comme le fait un modèle mathématique) ou le mouvement prévu. La "
"composante calculée par anticipation donne le mouvement désiré et la "
"meilleure façon d'atteindre le point de contrôle, et la rétroaction du "
"système compense pour ce que nous ignorons, ou les variations du "
"comportement du système au moment de l'exécution."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:10
msgid ""
"There are two types of feedforwards: model-based feedforward and feedforward"
" for unmodeled dynamics. The first solves a mathematical model of the system"
" for the inputs required to meet desired velocities and accelerations. The "
"second compensates for unmodeled forces or behaviors directly so the "
"feedback controller doesn't have to. Both types can facilitate simpler "
"feedback controllers. We'll cover several examples below."
msgstr ""
"Il existe deux types de contrôleurs par anticipation: Feedforward basé sur "
"un modèle et Feedforward pour une dynamique sans modèle. Le premier résout "
"un modèle mathématique du système pour les entrées nécessaires pour répondre"
" aux vitesses et accélérations souhaitées. Le second compense directement "
"les forces ou les comportements non modélisés afin que le contrôleur de "
"rétroaction n'ait pas à le faire. Les deux types peuvent faciliter des "
"contrôleurs de rétroaction plus simples. Nous couvrirons plusieurs exemples "
"ci-dessous."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:13
msgid "The WPILib Feedforward Classes"
msgstr "Les classes FeedForward WPILib"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:15
msgid ""
"WPILib provides a number of classes to help users implement accurate "
"feedforward control for their mechanisms.  In many ways, an accurate "
"feedforward is more important than feedback to effective control of a "
"mechanism.  Since most FRC\\ |reg| mechanisms closely obey well-understood "
"system equations, starting with an accurate feedforward is both easy and "
"hugely beneficial to accurate and robust mechanism control."
msgstr ""
"WPILib fournit un certain nombre de classes pour aider les utilisateurs à "
"implémenter une commande feedforward pour leurs mécanismes. À bien des "
"égards, un feedforward précis est plus important que la rétroaction au "
"contrôle efficace d’un mécanisme. Comme la plupart des mécanismes en FRC\\ "
"|reg| obéissent étroitement aux équations bien comprises du système, en "
"commençant par un feedforward précis est à la fois facile et extrêmement "
"bénéfique pour le contrôle précis et robuste du mécanisme"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:17
msgid ""
"The WPILib feedforward classes closely match the available mechanism "
"characterization tools available in the :ref:`SysId toolsuite "
"<docs/software/pathplanning/system-identification/introduction:Introduction "
"to System Identification>`.  The system identification toolsuite can be used"
" to quickly and effectively determine the correct gains for each type of "
"feedforward.  If you are unable to empirically characterize your mechanism "
"(due to space and/or time constraints), reasonable estimates of ``kG``, "
"``kV``, and ``kA`` can be obtained by fairly simple computation, and are "
"also available from `ReCalc <https://www.reca.lc/>`__.  ``kS`` is nearly "
"impossible to model, and must be measured empirically."
msgstr ""
"Les classes d'anticipation WPILib correspondent étroitement aux outils de "
"caractérisation des mécanismes disponibles dans la suite d'outils "
":ref:`SysId <docs/software/pathplanning/system-"
"identification/introduction:Introduction to System Identification>`. La "
"suite d'outils d'identification du système peut être utilisée pour "
"déterminer rapidement et efficacement les gains corrects pour chaque type "
"d'anticipation. Si vous n'êtes pas en mesure de caractériser empiriquement "
"votre mécanisme (en raison de contraintes d'espace et/ou de temps), des "
"estimations raisonnables de ``kG``, ``kV`` et ``kA`` peuvent être obtenues "
"par un calcul assez simple, et sont également disponibles sur `ReCalc "
"<https://www.reca.lc/>`__. ``kS`` est presque impossible à modéliser et doit"
" être mesuré de manière empirique."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:19
msgid ""
"WPILib currently provides the following three helper classes for feedforward"
" control:"
msgstr ""
"WPILib fournit actuellement les trois classes suivantes pour le contrôle "
"Feedforward"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:21
msgid ""
"`SimpleMotorFeedforward`_ (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/math/controller/SimpleMotorFeedforward.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1_simple_motor_feedforward.html>`__)"
msgstr ""
"`SimpleMotorFeedforward`_ (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/math/controller/SimpleMotorFeedforward.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1_simple_motor_feedforward.html>`__)"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:22
msgid ""
"`ArmFeedforward`_ (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/math/controller/ArmFeedforward.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1_arm_feedforward.html>`__)"
msgstr ""
"`ArmFeedforward`_ (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/math/controller/ArmFeedforward.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1_arm_feedforward.html>`__)"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:23
msgid ""
"`ElevatorFeedforward`_ (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/math/controller/ElevatorFeedforward.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1_elevator_feedforward.html>`__)"
msgstr ""
"`ElevatorFeedforward`_ (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/math/controller/ElevatorFeedforward.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1_elevator_feedforward.html>`__)"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:26
msgid "SimpleMotorFeedforward"
msgstr "La classe \"SimpleMotorFeedforward\""

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:28
msgid ""
"In C++, the ``SimpleMotorFeedforward`` class is templated on the unit type "
"used for distance measurements, which may be angular or linear.  The passed-"
"in gains *must* have units consistent with the distance units, or a compile-"
"time error will be thrown.  ``kS`` should have units of ``volts``, ``kV`` "
"should have units of ``volts * seconds / distance``, and ``kA`` should have "
"units of ``volts * seconds^2 / distance``.  For more information on C++ "
"units, see :ref:`docs/software/basic-programming/cpp-units:The C++ Units "
"Library`."
msgstr ""
"En C ++, la classe ``SimpleMotorFeedforward`` est basée sur le type d'unité "
"utilisé pour les mesures de distance, qui peut être angulaire ou linéaire. "
"Les gains transmis *doivent* avoir des unités cohérentes avec les unités de "
"distance, sinon une erreur de compilation sera générée. ``kS`` doit avoir "
"des unités de ``volts``, ``kV`` doit avoir des unités de ``volts * secondes "
"/ distance`` et ``kA`` doit avoir des unités de ``volts * secondes^2 / "
"distance``. Pour plus d'informations sur les unités C ++, voir "
":ref:`docs/software/basic-programming/cpp-units:The C++ Units Library`."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:30
#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:74
#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:119
msgid ""
"The Java feedforward components will calculate outputs in units determined "
"by the units of the user-provided feedforward gains.  Users *must* take care"
" to keep units consistent, as WPILibJ does not have a type-safe unit system."
msgstr ""
"Les composants Java Feedforward calculent les sorties en unités déterminées "
"par les unités des gains Feedforward fournis par l'utilisateur. Les "
"utilisateurs *doivent* maintenir la cohérence des unités, car WPILibJ ne "
"dispose pas d'un système d'unités de type sécurisé."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:32
msgid ""
"The ``SimpleMotorFeedforward`` class calculates feedforwards for mechanisms "
"that consist of permanent-magnet DC motors with no external loading other "
"than friction and inertia, such as flywheels and robot drives."
msgstr ""
"La classe ``SimpleMotorFeedforward`` calcule les valeurs de Feedforward pour"
" les mécanismes qui se composent de moteurs à courant continu à aimant "
"permanent (comme le CIM, Bag, 775...) sans charge externe autre que le "
"frottement et l'inertie, tels que les volants d'inertie et les entraînements"
" de robots."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:34
msgid ""
"To create a ``SimpleMotorFeedforward``, simply construct it with the "
"required gains:"
msgstr ""
"Pour créer un ``SimpleMotorFeedforward``, il suffit de le construire avec "
"les gains requis:"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:36
#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:80
#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:125
msgid ""
"The ``kA`` gain can be omitted, and if it is, will default to a value of "
"zero.  For many mechanisms, especially those with little inertia, it is not "
"necessary."
msgstr ""
"Le gain ``kA`` peut être omis, et s'il l'est, sera par défaut à une valeur "
"de zéro. Pour de nombreux mécanismes, en particulier ceux avec peu "
"d'inertie, ce n'est pas nécessaire."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:51
#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:140
msgid ""
"To calculate the feedforward, simply call the ``calculate()`` method with "
"the desired motor velocity and acceleration:"
msgstr ""
"Pour calculer le feedforward, il suffit d'appeler la méthode ``calculate()``"
" avec la vitesse et l'accélération désirées du moteur:"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:53
#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:96
#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:142
msgid ""
"The acceleration argument may be omitted from the ``calculate()`` call, and "
"if it is, will default to a value of zero.  This should be done whenever "
"there is not a clearly-defined acceleration setpoint."
msgstr ""
"L'argument d'accélération peut être omis de l'appel ``calculate()``, et si "
"c'est le cas, sa valeur par défaut sera zéro. Cela doit être fait chaque "
"fois qu'il n'y a pas de point de consigne d'accélération clairement défini."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:70
msgid "ArmFeedforward"
msgstr "La classe ArmFeedforward"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:72
msgid ""
"In C++, the ``ArmFeedforward`` class assumes distances are angular, not "
"linear.  The passed-in gains *must* have units consistent with the angular "
"unit, or a compile-time error will be thrown.  ``kS`` and ``kG`` should have"
" units of ``volts``, ``kV`` should have units of ``volts * seconds / "
"radians``, and ``kA`` should have units of ``volts * seconds^2 / radians``."
"  For more information on C++ units, see :ref:`docs/software/basic-"
"programming/cpp-units:The C++ Units Library`."
msgstr ""
"En C++, la classe ``ArmFeedforward`` suppose que les distances sont "
"angulaires et non linéaires. Les gains transmis *doivent* avoir des unités "
"cohérentes avec l'unité angulaire, sinon une erreur de compilation sera "
"générée. ``kS`` et ``kG`` doivent avoir des unités de ``volts``, ``kV`` "
"doivent avoir des unités de ``volts * secondes / radians``, et ``kA`` "
"doivent avoir des unités de ``volts * secondes^2 / radians``. Pour plus "
"d'informations sur les unités C++, consultez :ref:`docs/software/basic-"
"programming/cpp-units:The C++ Units Library`."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:76
msgid ""
"The ``ArmFeedforward`` class calculates feedforwards for arms that are "
"controlled directly by a permanent-magnet DC motor, with external loading of"
" friction, inertia, and mass of the arm.  This is an accurate model of most "
"arms in FRC."
msgstr ""
"La classe ``ArmFeedforward`` calcule les valeurs de Feedforward pour les "
"bras de levier qui sont contrôlés directement par un moteur à courant "
"continu à aimant permanent, avec une charge externe de frottement, d'inertie"
" et de masse du bras. Il s'agit d'un modèle précis qui simule la plupart des"
" bras de levier utilisés en FRC."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:78
msgid ""
"To create an ``ArmFeedforward``, simply construct it with the required "
"gains:"
msgstr ""
"Pour créer un ``ArmFeedforward``, il suffit de le construire avec les gains "
"requis:"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:94
msgid ""
"To calculate the feedforward, simply call the ``calculate()`` method with "
"the desired arm position, velocity, and acceleration:"
msgstr ""
"Pour calculer le Feedforward, il suffit d'appeler la méthode ``calculate()``"
" avec la position, la vitesse et l'accélération souhaitées du bras de "
"levier:"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:115
msgid "ElevatorFeedforward"
msgstr "La classe ElevatorFeedforward"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:117
msgid ""
"In C++, the ``ElevatorFeedforward`` class is templated on the unit type used"
" for distance measurements, which may be angular or linear.  The passed-in "
"gains *must* have units consistent with the distance units, or a compile-"
"time error will be thrown.  ``kS`` and ``kG`` should have units of "
"``volts``, ``kV`` should have units of ``volts * seconds / distance``, and "
"``kA`` should have units of ``volts * seconds^2 / distance``.  For more "
"information on C++ units, see :ref:`docs/software/basic-programming/cpp-"
"units:The C++ Units Library`."
msgstr ""
"En C++, la classe ``ElevatorFeedforward`` est basée sur le type d'unité "
"utilisé pour les mesures de distance, qui peut être angulaire ou linéaire. "
"Les gains transmis *doivent* avoir des unités cohérentes avec les unités de "
"distance, sinon une erreur de compilation sera levée. ``kS`` et ``kG`` "
"doivent avoir des unités de ``volts``, ``kV`` doivent avoir des unités de "
"``volts * secondes / distance`` et ``kA`` doivent avoir des unités de "
"``volts * secondes ^ 2 / distance``. Pour plus d'informations sur les unités"
" C ++, voir :ref:`docs/software/basic-programming/cpp-units:The C++ Units "
"Library`."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:121
msgid ""
"The ``ElevatorFeedforward`` class calculates feedforwards for elevators that"
" consist of permanent-magnet DC motors loaded by friction, inertia, and the "
"mass of the elevator.  This is an accurate model of most elevators in FRC."
msgstr ""
"La classe ``ElevatorFeedforward`` calcule les feed-back pour un mécanisme de"
" type ascenseur qui se composent de moteurs à courant continu à aimant "
"permanent chargés par le frottement, l'inertie et la masse de charge "
"déplacée par l'ascenseur. Il s'agit d'un modèle précis de la plupart des "
"mécanismes d'ascenseurs en FRC."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:123
msgid ""
"To create a ``ElevatorFeedforward``, simply construct it with the required "
"gains:"
msgstr ""
"Pour créer un ``ElevatorFeedforward``, il suffit de le construire avec les "
"gains requis:"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:161
msgid "Using Feedforward to Control Mechanisms"
msgstr "Utilisation de Feedforward pour contrôler les mécanismes"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:163
msgid ""
"Since feedforward voltages are physically meaningful, it is best to use the "
"``setVoltage()`` (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/motorcontrol/MotorController.html#setVoltage(double)>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1_speed_controller.html#a8252b1dbd027218c7966b15d0f9faff7>`__)"
" method when applying them to motors to compensate for \"voltage sag\" from "
"the battery."
msgstr ""
"Étant donné que les tensions de contrôle d'anticipation (feedforward) sont "
"physiquement significatives, il est préférable d’utiliser la méthode "
"``setVoltage()`` (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/wpilibj/motorcontrol/MotorController.html#setVoltage(double)>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1_speed_controller.html#a8252b1dbd027218c7966b15d0f9faff7>`__)"
" lors de leur application sur des moteurs pour compenser \"l’affaissement de"
" la tension\" de la batterie."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/feedforward.rst:165
msgid ""
"Feedforward control can be used entirely on its own, without a feedback "
"controller.  This is known as \"open-loop\" control, and for many mechanisms"
" (especially robot drives) can be perfectly satisfactory.  A "
"``SimpleMotorFeedforward`` might be employed to control a robot drive as "
"follows:"
msgstr ""
"Le contrôle par anticipation (Feedforward) peut être utilisé à lui seul, "
"sans contrôleur de rétroaction. Ceci est connu sous le nom de contrôle \"en "
"boucle ouverte\", et pour de nombreux mécanismes (en particulier les moteurs"
" qui font avancer le robot) peuvent être parfaitement satisfaisants. Un "
"``SimpleMotorFeedforward`` peut être utilisé pour contrôler un entraînement "
"de robot comme suit:"
