# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Duru Ünlü <aodunlu@gmail.com>, 2020
# Müfit ALKAYA <mufit.alkaya@tfo.k12.tr>, 2021
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 04:04+0000\n"
"PO-Revision-Date: 2020-04-25 02:01+0000\n"
"Last-Translator: Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2021\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:2
msgid "Combining Motion Profiling and PID Control with ProfiledPIDController"
msgstr ""
"Motion Profiling ve PID Control'ü ProfiledPIDController ile Birleştirme"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:4
msgid ""
"For a guide on implementing the ``ProfiledPIDController`` class in the "
":ref:`command-based framework <docs/software/commandbased/what-is-command-"
"based:What Is \"Command-Based\" Programming?>` framework, see "
":ref:`docs/software/commandbased/profilepid-subsystems-commands:Combining "
"Motion Profiling and PID in Command-Based`."
msgstr ""
"``ProfiledPIDController`` sınıfının :ref:`command-based framework "
"<docs/software/commandbased/what-is-command-based:What Is \"Command-Based\" "
"Programming?>` Çerçevesine uygulanmasına ilişkin bir kılavuz için,  bkz: "
":ref:`docs/software/commandbased/profilepid-subsystems-commands:Combining "
"Motion Profiling and PID in Command-Based`."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:6
msgid ""
"In the previous article, we saw how to use the ``TrapezoidProfile`` class to"
" create and use a trapezoidal motion profile.  The example code from that "
"article demonstrates manually composing the ``TrapezoidProfile`` class with "
"the external PID control feature of a \"smart\" motor controller."
msgstr ""
"Önceki makalede, trapezoidal hareket profili oluşturmak ve kullanmak için ``"
" TrapezoidProfile``  sınıfının nasıl kullanılacağını gördük. Bu makaledeki "
"örnek kod, bir \"akıllı\" motor kontrol cihazının harici PID kontrol "
"özelliği ile ``TrapezoidProfile`` sınıfını manuel olarak oluşturmayı "
"gösterir."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:11
msgid "Using the ProfiledPIDController class"
msgstr "ProfiledPIDController sınıfını kullanma"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:13
msgid ""
"In C++, the ``ProfiledPIDController`` class is templated on the unit type "
"used for distance measurements, which may be angular or linear.  The passed-"
"in values *must* have units consistent with the distance units, or a "
"compile-time error will be thrown.  For more information on C++ units, see "
":ref:`docs/software/basic-programming/cpp-units:The C++ Units Library`."
msgstr ""
"C ++ 'da, ``ProfiledPIDController``sınıfı, açısal veya doğrusal olabilen "
"mesafe ölçümleri için kullanılan birim türüne göre şablonlanır. İletilen "
"değerler * zorunlu * mesafe birimleriyle tutarlı birimlere sahip olmalıdır, "
"aksi takdirde derleme zamanı hatası atılır. C ++ birimleri hakkında daha "
"fazla bilgi için bkz :ref:`docs/software/basic-programming/cpp-units:The C++"
" Units Library`.."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:15
msgid ""
"Much of the functionality of ``ProfiledPIDController`` is effectively "
"identical to that of ``PIDController``.  Accordingly, this article will only"
" cover features that are substantially-changed to accommodate the motion "
"profiling functionality.  For information on standard ``PIDController`` "
"features, see :ref:`docs/software/advanced-"
"controls/controllers/pidcontroller:PID Control in WPILib`."
msgstr ""
"``ProfiledPIDController`` işlevinin çoğu, `` PIDController`` ile etkin bir "
"şekilde aynıdır. Buna göre, bu makale yalnızca hareket profili oluşturma "
"işlevini barındırmak için büyük ölçüde değiştirilmiş özellikleri "
"kapsayacaktır. Standart ``PIDController`` özellikleri hakkında bilgi için "
"bkz .: ref: `docs / software / advanced-controls / controllers / "
"pidcontroller: PID Control in WPILib`."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:19
msgid "Constructing a ProfiledPIDController"
msgstr "Profilli PIDController Oluşturma"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:21
msgid ""
"C++ is often able to infer the type of the inner classes, and thus a simple "
"initializer list (without the class name) can be sent as a parameter.  The "
"full class name is included in the example below for clarity."
msgstr ""
"C ++ genellikle iç sınıfların türünü çıkarabilir ve bu nedenle basit bir "
"başlatıcı listesi (sınıf adı olmadan) parametre olarak gönderilebilir. Tam "
"sınıf adı, netlik açısından aşağıdaki örnekte verilmiştir."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:23
msgid ""
"Creating a ``ProfiledPIDController`` is nearly identical to :ref:`creating a"
" PIDController <docs/software/advanced-"
"controls/controllers/pidcontroller:Constructing a PIDController>`.  The only"
" difference is the need to supply a set of :ref:`trapezoidal profile "
"constraints <docs/software/advanced-controls/controllers/trapezoidal-"
"profiles:Constraints>`, which will be automatically forwarded to the "
"internally-generated ``TrapezoidProfile`` instances:"
msgstr ""
"Bir ``ProfiledPIDController`` oluşturmak, :ref:`creating a PIDController "
"<docs/software/advanced-controls/controllers/pidcontroller:Constructing a "
"PIDController>`   oluşturmak ile neredeyse aynıdır. Tek fark, dahili olarak "
"oluşturulan `` TrapezoidProfile '' örneklerine otomatik olarak iletilecek "
"olan bir dizi :ref:`trapezoidal profile constraints <docs/software/advanced-"
"controls/controllers/trapezoidal-profiles:Constraints>`, sağlama "
"ihtiyacıdır:"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:46
msgid "Goal vs Setpoint"
msgstr "Hedef ve Ayar Noktası"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:48
msgid ""
"A major difference between a standard ``PIDController`` and a "
"``ProfiledPIDController`` is that the actual *setpoint* of the control loop "
"is not directly specified by the user.  Rather, the user specifies a *goal* "
"position or state, and the setpoint for the controller is computed "
"automatically from the generated motion profile between the current state "
"and the goal.  So, while the user-side call looks mostly identical:"
msgstr ""
"Standart bir `` PIDController`` ile `` ProfiledPIDController`` arasındaki en"
" büyük fark, kontrol döngüsünün gerçek* ayar noktasının * kullanıcı "
"tarafından doğrudan belirtilmemesidir. Bunun yerine, kullanıcı bir *hedef * "
"konumu veya durumu belirtir ve kontrolör için ayar noktası, mevcut durum ile"
" hedef arasında oluşturulan hareket profilinden otomatik olarak hesaplanır. "
"Dolayısıyla, kullanıcı tarafı arama çoğunlukla aynı görünürken:"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:64
msgid ""
"The specified ``goal`` value (which can be either a position value or a "
"``TrapezoidProfile.State``, if nonzero velocity is desired) is *not* "
"necessarily the *current* setpoint of the loop - rather, it is the "
"*eventual* setpoint once the generated profile terminates."
msgstr ""
"Belirtilen ``hedef`` değeri (sıfırdan farklı bir hız isteniyorsa, bir konum "
"değeri veya bir ``TrapezProfile.State`` olabilir), döngünün *zorunlu* akım "
"*ayar noktası değildir - daha ziyade, oluşturulan profil sona erdiğinde "
"*nihai * ayar noktasıdır."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:67
msgid "Getting/Using the Setpoint"
msgstr "Ayar Noktasını Alma / Kullanma"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:69
msgid ""
"Since the ``ProfiledPIDController`` goal differs from the setpoint, is if "
"often desirable to poll the current setpoint of the controller (for "
"instance, to get values to use with :ref:`feedforward "
"<docs/software/advanced-controls/controllers/combining-feedforward-"
"feedback:Using Feedforward Components with PID>`).  This can be done with "
"the ``getSetpoint()`` method."
msgstr ""
"``ProfiledPIDController`` hedefi ayar noktasından farklı olduğundan, "
"genellikle kontrolörün mevcut ayar noktasını sorgulamak istenir (örneğin, "
"kullanılacak değerleri almak için: ref: `ileri besleme "
"<docs/software/advanced-controls/controllers/combining-feedforward-"
"feedback:Using Feedforward Components with PID>`). Bu, ``getSetpoint ()`` "
"yöntemi ile yapılabilir."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:71
msgid "The returned setpoint might then be used as in the following example:"
msgstr ""
"Döndürülen ayar noktası daha sonra aşağıdaki örnekte olduğu gibi "
"kullanılabilir:"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:109
msgid "Complete Usage Example"
msgstr "Tam Kullanım Örneği"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/profiled-pidcontroller.rst:111
msgid ""
"A more complete example of ``ProfiledPIDController`` usage is provided in "
"the ElevatorProfilePID example project (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/elevatorprofiledpid>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/ElevatorProfiledPID/cpp>`__):"
msgstr ""
"ElevatorProfilePID örnek projesinde ``ProfiledPIDController`` kullanımının "
"daha eksiksiz bir örneği verilmiştir (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/elevatorprofiledpid>`"
" __, `C ++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/ElevatorProfiledPID/cpp>`"
" __):"
