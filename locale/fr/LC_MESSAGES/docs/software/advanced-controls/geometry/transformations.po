# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Kaitlyn Kenwell <redrield@gmail.com>, 2020
# Andre Theberge <atheberge2@videotron.ca>, 2020
# Regis Bekale <rbekale@robotiquefirstquebec.org>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-09 16:03+0000\n"
"PO-Revision-Date: 2020-06-26 02:40+0000\n"
"Last-Translator: Regis Bekale <rbekale@robotiquefirstquebec.org>, 2022\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:2
msgid "Transformations"
msgstr "Transformations"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:5
msgid "Translation2d"
msgstr "Translation2d"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:7
msgid ""
"Operations on a ``Translation2d`` perform operations to the vector "
"represented by the ``Translation2d``."
msgstr ""
"Les opérations sur un ``Translation2d`` exécutent des opérations sur le "
"vecteur representé par le ``Translation2d``."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:9
msgid ""
"Addition: Addition between two ``Translation2d`` a and b can be performed "
"using ``plus`` in Java, or the ``+`` operator in C++. Addition adds the two "
"vectors."
msgstr ""
"Addition: L'addition entre deux ``Translation2d`` a et b peut être exécuté "
"en utilisant ``plus`` en Java, ou l'opérateur ``+`` en C++. L'addition "
"ajoute les deux vecteurs."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:10
msgid ""
"Subtraction: Subtraction between two ``Translation2d`` can be performed "
"using ``minus`` in Java, or the binary ``-`` operator in C++. Subtraction "
"subtracts the two vectors."
msgstr ""
"Soustraction: Soustraction entre deux ``Translation2d`` peut être exécuté en"
" utilisant ``minus`` en Java ou l'opérateur binaire ``-`` en C++. "
"Soustraction soustrait les deux vecteurs."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:11
msgid ""
"Multiplication: Multiplication of a ``Translation2d`` and a scalar can be "
"performed using ``times`` in Java, or the ``*`` operator in C++. This "
"multiplies the vector by the scalar."
msgstr ""
"Multiplication: Multiplication d'un ``Translation2d`` et un scalaire peut "
"être exécuté en utilisant ``times`` en Java ou l'opérateur ``*`` en C++. "
"Cela multiplie le vecteur par le scalaire."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:12
msgid ""
"Division: Division of a ``Translation2d`` and a scalar can be performed "
"using ``div`` in Java, or the ``/`` operator in C++. This divides the vector"
" by the scalar."
msgstr ""
"Division: Division d'un ``Translation2d`` et un scalaire peut être exécuté "
"en utilisant ``div`` en Java, ou l'opérateur ``/`` en C++. Cela divise le "
"vecteur par le scalaire."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:13
msgid ""
"Rotation: Rotation of a ``Translation2d`` by a counter-clockwise rotation "
":math:`\\theta` about the origin can be performed by using ``rotateBy``. "
"This is equivalent to multiplying the vector by the matrix "
":math:`\\begin{bmatrix} cos\\theta & -sin\\theta \\\\ sin\\theta & "
"cos\\theta \\end{bmatrix}`"
msgstr ""
"Rotation: Rotation d'un ``Translation2d`` de façon anti-horaire en utilisant"
" un angle de rotation :math:`\\theta` autour de l'origine.  Cela peut être "
"exécuté en utilisant ``rotateBy``, et équivaut à multiplier le vecteur par "
"la matrice :math:`\\begin{bmatrix} cos\\theta & -sin\\theta \\\\ sin\\theta "
"& cos\\theta \\end{bmatrix}`"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:14
msgid ""
"Additionally, you can rotate a ``Translation2d`` by 180 degrees by using "
"``unaryMinus`` in Java, or the unary ``-`` operator in C++."
msgstr ""
"Aditionellement, vous pouvez tourner un ``Translation2d`` de 180 degrés en "
"utilisant ``unaryMinus`` en Java, ou l'opératueur ``-`` en C++."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:17
msgid "Rotation2d"
msgstr "Rotation2d"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:19
msgid ""
"Transformations for ``Rotation2d`` are just arithmetic operations on the "
"angle measure represented by the ``Rotation2d``."
msgstr ""
"Transformations sur un ``Translation2d`` sont juste des opérations "
"arithmétiques sur la mesure d'angle representé par le ``Rotation2d``."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:21
msgid ""
"``plus`` (Java) or ``+`` (C++): Adds the rotation component of ``other`` to "
"this ``Rotation2d``'s rotation component"
msgstr ""
"``plus`` (Java) ou ``+`` (C++): Ajoute le composant rotation de ``other`` à "
"celui de cette ``Rotation2d``."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:22
msgid ""
"``minus`` (Java) or binary ``-`` (C++): Subtracts the rotation component of "
"``other`` to this ``Rotation2d``'s rotation component"
msgstr ""
"``minus`` (Java) ou ``-`` binaire (C++): Soustrait le composant de rotation "
"de ``other`` de celui de cette ``Rotation2d``"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:23
msgid ""
"``unaryMinus`` (Java) or unary ``-`` (C++): Multiplies the rotation "
"component by a scalar of -1."
msgstr ""
"``unaryMinus`` (Java) ou ``-`` unaire (C++): Multiplie le composant de "
"rotation par un scalaire de -1."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:24
msgid ""
"``times`` (Java) or ``*`` (C++) : Multiplies the rotation component by a "
"scalar."
msgstr ""
"``times`` (Java) ou ``*`` (C++): Multiplie le composant de rotation par un "
"scalaire."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:27
msgid "Transform2d and Twist2d"
msgstr "Transform2d et Twist2d"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:29
msgid ""
"WPILib provides 2 classes, ``Transform2d`` (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/math/geometry/Transform2d.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1_transform2d.html>`__),"
" which represents a transformation to a pose, and ``Twist2d`` (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/math/geometry/Twist2d.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/structfrc_1_1_twist2d.html>`__)"
" which represents a movement along an arc. ``Transform2d`` and ``Twist2d`` "
"all have x, y and :math:`\\theta` components."
msgstr ""
"WPILib fournit 2 classes, ``Transform2d`` (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/math/geometry/Transform2d.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/classfrc_1_1_transform2d.html>`__),"
" qui représente une transformation en pose, et ``Twist2d`` (`Java "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/java/edu/wpi/first/math/geometry/Twist2d.html>`__,"
" `C++ "
"<https://first.wpi.edu/wpilib/allwpilib/docs/release/cpp/structfrc_1_1_twist2d.html>`__)"
" qui représente du mouvement le long d'un arc. ``Transform2d`` et "
"``Twist2d`` possèdent tous les deux des composants x, y, et :math:`\\theta`."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:31
msgid ""
"``Transform2d`` represents a **relative** transformation. It has an "
"translation and a rotation component. Transforming a ``Pose2d`` by a "
"``Transform2d`` rotates the translation component of the transform by the "
"rotation of the pose, and then adds the rotated translation component and "
"the rotation component to the pose. In other words, "
"``Pose2d.plus(Transform2d)`` returns :math:`\\begin{bmatrix} x_p \\\\ y_p "
"\\\\ \\theta_p \\end{bmatrix}+\\begin{bmatrix} cos\\theta_p & -sin\\theta_p "
"& 0 \\\\ sin\\theta_p & cos\\theta_p & 0 \\\\ 0 & 0 & 1 "
"\\end{bmatrix}\\begin{bmatrix}x_t \\\\ y_t \\\\ \\theta_t \\end{bmatrix}`"
msgstr ""
"``Transform2d`` représente une transformation **relative**. Elle a deux "
"composantes: une de transfert et l'autre de rotation. La transformation d'un"
" ``Pose2d`` par un ``Transform2d`` s'effectue en faisant pivoter le "
"composant \"translation\" du transfert selon le paramètre de rotation de la "
"pose, et ensuite on ajoute le composant transfert tourné et le composant de "
"rotation de pose. En d'autre termes, ``Pose2d.plus(Transform2d)`` revient "
":math:`\\begin{bmatrix} x_p \\\\ y_p \\\\ \\theta_p "
"\\end{bmatrix}+\\begin{bmatrix} cos\\theta_p & -sin\\theta_p & 0 \\\\ "
"sin\\theta_p & cos\\theta_p & 0 \\\\ 0 & 0 & 1 "
"\\end{bmatrix}\\begin{bmatrix}x_t \\\\ y_t \\\\ \\theta_t \\end{bmatrix}`"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:33
msgid ""
"``Twist2d`` represents a change in distance along an arc. Usually, this "
"class is used to represent the movement of a drivetrain, where the x "
"component is the forward distance driven, the y component is the distance "
"driven to the side (left positive), and the :math:`\\theta` component is the"
" change in heading. The underlying math behind finding the pose exponential "
"(new pose after moving the pose forward along the curvature of the twist) "
"can be found `here <https://file.tavsys.net/control/controls-engineering-in-"
"frc.pdf>`_ in chapter 10."
msgstr ""
"``Twist2d`` représente un changement en distance le long d'un arc. "
"Généralement, cette classe est utilisé pour représenter le mouvement de du "
"chassis du robot, où le composant x est la distance parcourue vers l'avant, "
"le composant y est la distance parcourue vers le côté, (le côté gauche donne"
" des valeurs positives), et le composant :math:`\\theta` est le changement "
"de cap (pivot sur l'axe central en Z du robot). Les mathématiques sous-"
"jacentes qui expliquent les calculs de l'exponentielle de pose (nouvelle "
"position qui suit la courbure de la fonction \"Twist2d\" ) peuvent être "
"trouvé `ici <https://file.tavsys.net/control/controls-engineering-in-"
"frc.pdf>`_ , au chapitre 10."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:35
msgid ""
"For nonholonomic drivetrains, the y component of a ``Twist2d`` should always"
" be 0."
msgstr ""
"Pour les entraînements non holonomiques (comme le mode Tank), le composant y"
" d'un ``Twist2d`` devrait toujours être 0."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:37
msgid ""
"Both classes can be used to estimate robot location. Twist2d is used in "
"WPILib's odometry classes to update the robot's pose based on movement, "
"while Transform2d can be used to estimate the robot's global position from "
"vision data."
msgstr ""
"Les deux classes peuvet être utilisées pour estimer l'emplacement de robot. "
"Twist2d est utilisé pour les classes odométriques de WPILib afin de mettre à"
" jour la pose du robot basée sur le mouvement, tandis que Transform2d peut "
"être utilisée pour estimer l'emplacement global du robot à partir des "
"données de vision. "
