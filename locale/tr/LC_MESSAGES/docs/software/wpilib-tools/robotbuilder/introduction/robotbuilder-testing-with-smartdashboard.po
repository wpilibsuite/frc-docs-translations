# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020
# Müfit ALKAYA <mufit.alkaya@tfo.k12.tr>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-26 16:24+0000\n"
"PO-Revision-Date: 2020-04-25 02:07+0000\n"
"Last-Translator: Müfit ALKAYA <mufit.alkaya@tfo.k12.tr>, 2020\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/wpilib-tools/robotbuilder/introduction/robotbuilder-testing-with-smartdashboard.rst:2
msgid "Using SmartDashboard to Test a Command"
msgstr "Bir Komutu Test Etmek İçin SmartDashboard'u Kullanma"

#: ../../frc-docs/source/docs/software/wpilib-tools/robotbuilder/introduction/robotbuilder-testing-with-smartdashboard.rst:4
msgid ""
"RobotBuilder has been updated to support the new commandbased framework! "
"Unfortunately, this documentation is outdated and only for the old "
"commandbased framework. Individuals interested in updating this "
"documentation can open a pull request on the `frc-docs "
"<https://github.com/wpilibsuite/frc-docs>`__ repository."
msgstr ""
"RobotBuilder, yeni komut tabanlı çerçeveyi desteklemek için güncellendi! Ne "
"yazık ki, bu dokümantasyon güncelliğini yitirmiştir ve yalnızca eski komut "
"temelli çerçeve içindir. Bu dokümantasyonu güncellemekle ilgilenen kişiler, "
"\"frc-docs <https://github.com/wpilibsuite/frc-docs>\" __ deposuna destekte "
"bulunabilirler."

#: ../../frc-docs/source/docs/software/wpilib-tools/robotbuilder/introduction/robotbuilder-testing-with-smartdashboard.rst:6
msgid ""
"Commands are easily tested by adding a button to the SmartDashboard to "
"trigger the command. In this way, no integration with the rest of the robot "
"program is necessary and commands can easily be independently tested. This "
"is the easiest way to verify commands since with a single line of code in "
"your program, a button can be created on the SmartDashboard that will run "
"the command. These buttons can then be left in place to verify subsystems "
"and command operations in the future."
msgstr ""
"Komutlar, SmartDashboard'a komutu tetiklemek için bir düğme eklenerek "
"kolayca test edilir. Bu şekilde, robot programının geri kalanıyla hiçbir "
"entegrasyon gerekli değildir ve komutlar bağımsız olarak kolayca test "
"edilebilir. Bu, komutları doğrulamanın en kolay yoludur, çünkü "
"programınızdaki tek bir kod satırı ile, SmartDashboard'da komutu "
"çalıştıracak bir düğme oluşturulabilir. Bu düğmeler, gelecekte alt "
"sistemleri ve komut işlemlerini doğrulamak için yerinde bırakılabilir."

#: ../../frc-docs/source/docs/software/wpilib-tools/robotbuilder/introduction/robotbuilder-testing-with-smartdashboard.rst:8
msgid ""
"This has the added benefit of accommodating multiple programmers, each "
"writing commands. As the code is checked into the main robot project, the "
"commands can be individually tested."
msgstr ""
"Bu, her biri komut yazan birden çok programcıyı barındırma avantajına "
"sahiptir. Kod ana robot projesinde kontrol edildiğinde, komutlar ayrı ayrı "
"test edilebilir."

#: ../../frc-docs/source/docs/software/wpilib-tools/robotbuilder/introduction/robotbuilder-testing-with-smartdashboard.rst:11
msgid "Creating the Button on SmartDashboard"
msgstr "SmartDashboard'da Düğme Oluşturma"

#: ../../frc-docs/source/docs/software/wpilib-tools/robotbuilder/introduction/robotbuilder-testing-with-smartdashboard.rst:15
msgid ""
"The button is created on the SmartDashboard by putting an instance of the "
"command from the robot program to the dashboard. This is such a common "
"operation that it has been added to RobotBuilder as a checkbox. When writing"
" your commands, be sure that the box is checked, and buttons will be "
"automatically generated for you."
msgstr ""
"Düğme, komutun bir örneğini robot programından kontrol paneline koyarak "
"SmartDashboard'da oluşturulur. Bu o kadar yaygın bir işlemdir ki, "
"RobotBuilder'a bir onay kutusu olarak eklenmiştir. Komutlarınızı yazarken, "
"kutunun işaretli olduğundan ve düğmelerin sizin için otomatik olarak "
"oluşturulduğundan emin olun."

#: ../../frc-docs/source/docs/software/wpilib-tools/robotbuilder/introduction/robotbuilder-testing-with-smartdashboard.rst:18
msgid "Operating the Buttons"
msgstr "Düğmelerin Çalıştırılması"

#: ../../frc-docs/source/docs/software/wpilib-tools/robotbuilder/introduction/robotbuilder-testing-with-smartdashboard.rst:22
msgid ""
"The buttons will be generated automatically and will appear on the dashboard"
" screen. You can put the SmartDashboard into edit mode, and the buttons can "
"then be rearranged along with other values that are being generated. In this"
" example there are a number of commands, each with an associated button for "
"testing. The button is labeled \"Start\" and pressing it will run the "
"command. As soon as it is pressed, the label changes to \"Cancel\" and "
"pressing it will interrupt the command causing the ``Interrupted()`` method "
"to be called."
msgstr ""
"Düğmeler otomatik olarak oluşturulacak ve kontrol paneli ekranında "
"görünecektir. SmartDashboard'u düzenleme moduna getirebilirsiniz ve ardından"
" düğmeler, oluşturulan diğer değerlerle birlikte yeniden düzenlenebilir. Bu "
"örnekte, her biri test için ilişkili bir düğme içeren birkaç komut vardır. "
"Düğme \"Start-Başlat\" olarak etiketlenir ve düğmeye basmak komutu "
"çalıştırır. Basıldığı anda etiket \"Cancel-İptal\" olarak değişir ve buna "
"basılması komutu kesintiye uğratarak ```Interrupted()`` yönteminin "
"çağrılmasına neden olur."

#: ../../frc-docs/source/docs/software/wpilib-tools/robotbuilder/introduction/robotbuilder-testing-with-smartdashboard.rst:25
msgid "Adding Commands Manually"
msgstr "Manuel Olarak Komut Ekleme"

#: ../../frc-docs/source/docs/software/wpilib-tools/robotbuilder/introduction/robotbuilder-testing-with-smartdashboard.rst:41
msgid ""
"Commands can be added to the SmartDashboard manually by writing the code "
"yourself. This is done by passing instances of the command to the PutData "
"method along with the name that should be associated with the button on the "
"SmartDashboard. These instances are scheduled whenever the button is "
"pressed. The result is exactly the same as RobotBuilder generated code, "
"although clicking the checkbox in RobotBuilder is much easier than writing "
"all the code by hand."
msgstr ""
"Kodu kendiniz yazarak SmartDashboard'a komutlar manuel olarak eklenebilir. "
"Bu, SmartDashboard'daki düğmeyle ilişkilendirilmesi gereken adla birlikte "
"komutun örneklerini PutData yöntemine ileterek yapılır. Bu örnekler, düğmeye"
" her basıldığında planlanır. Sonuç, RobotBuilder'ın oluşturduğu kodla "
"tamamen aynıdır, ancak RobotBuilder'daki onay kutusuna tıklamak tüm kodu "
"elle yazmaktan çok daha kolaydır."
