# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, FIRST and other WPILib Contributors. This work is licensed under a Creative Commons Attribution 4.0 International License
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Deniz Şentürk, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2025\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-07 16:05+0000\n"
"PO-Revision-Date: 2022-01-10 04:14+0000\n"
"Last-Translator: Deniz Şentürk, 2025\n"
"Language-Team: Turkish (Turkey) (https://app.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/telemetry/robot-telemetry-with-sendable.rst:2
msgid "Robot Telemetry with Sendable"
msgstr "Sendable ile Robot Telemetrisi"

#: ../../frc-docs/source/docs/software/telemetry/robot-telemetry-with-sendable.rst:4
msgid ""
"While the WPILib dashboard APIs allow users to easily send small pieces of "
"data from their robot code to the dashboard, it is often tedious to manually"
" write code for publishing telemetry values from the robot code's "
"operational logic."
msgstr ""
"WPILib gösterge paneli API'ları, kullanıcıların robot kodundan ufak verileri"
" gösterge paneline göndermesine olanak tanıyor olsa da robotun işlemsel "
"mantığından telemetri değerlerinin yayınlanması için elle kod yazmak "
"uğraştırıcı bir işlemdir."

#: ../../frc-docs/source/docs/software/telemetry/robot-telemetry-with-sendable.rst:6
msgid ""
"A cleaner approach is to leverage the existing object-oriented structure of "
"user code to mark important data fields for telemetry logging in a "
":term:`declarative programming` style.  The WPILib framework can then handle"
" the tedious/tricky part of correctly reading from (and, potentially, "
"*writing to*) those fields for you, greatly reducing the total amount of "
"code the user has to write and improving readability."
msgstr ""
"Daha basit bir yaklaşım, :term:`declarative programming` - bildirimsel "
"programlama tarzında telemetri veri kaydı adına önemli veri alanlarının "
"işaretlenmesi için kullanıcı kodunun varolan nesne odaklı yapısından "
"faydalanmaktır. Bunu takiben WPILib çerçevesi, kullanıcının yazması gereken "
"toplam kod miktarını düşürüp kodun okunabilirliğini arttırarak, işlemin "
"zorlayıcı/sıkıntılı kısmı olan veri alanlarının doğru bir şekilde okunması "
"(ve bu alanlara yazım) işlemlerini sizin adınıza üstlenebilmektedir. "

#: ../../frc-docs/source/docs/software/telemetry/robot-telemetry-with-sendable.rst:8
msgid ""
"WPILib provides this functionality with the ``Sendable`` interface.  Classes"
" that implement ``Sendable`` are able to register value listeners that "
"automatically send data to the dashboard - and, in some cases, receive "
"values back.  These classes can be declaratively sent to any of the WPILib "
"dashboards (as one would an ordinary data field), removing the need for "
"teams to write their own code to send/poll for updates."
msgstr ""
"WPILib bu işlevselliği ``Sendable`` arayüzüyle sağlamaktadır. ``Sendable`` "
"içeren sınıflar, kendiliğinden gösterge paneline veri gönderen, ve bazı "
"durumlarda panelden geri veri alan, değer dinleyicilerini "
"algılayabilmektedir. Bu sınıflar, takımların güncelleme göndermek/oylamak "
"için kendi kodlarını yazma ihtiyacını ortadan kaldırarak, (sıradan bir veri "
"alanı gibi) bildirimsel olarak herhangi bir WPILib gösterge paneline "
"gönderilebilmektedir."

#: ../../frc-docs/source/docs/software/telemetry/robot-telemetry-with-sendable.rst:11
msgid "What is Sendable?"
msgstr "Sendable nedir?"

#: ../../frc-docs/source/docs/software/telemetry/robot-telemetry-with-sendable.rst:13
msgid ""
"``Sendable`` (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/util/sendable/Sendable.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classwpi_1_1_sendable.html>`__,"
" :external:py:class:`Python <wpiutil.Sendable>`) is an interface provided by"
" WPILib to facilitate robot telemetry.  Classes that implement ``Sendable`` "
"can declaratively send their state to the dashboard - once declared, WPILib "
"will automatically send the telemetry values every robot loop.  This removes"
" the need for teams to handle the iteration-to-iteration logic of sending "
"and receiving values from the dashboard, and also allows teams to separate "
"their telemetry code from their robot logic."
msgstr ""
"``Sendable`` (`Java "
"<https://github.wpilib.org/allwpilib/docs/release/java/edu/wpi/first/util/sendable/Sendable.html>`__,"
" `C++ "
"<https://github.wpilib.org/allwpilib/docs/release/cpp/classwpi_1_1_sendable.html>`__,"
" :external:py:class:`Python <wpiutil.Sendable>`), robot telemetrisinin "
"kolaylaştırılması için WPILib tarafından sağalanan bir arayüzdür. "
"``Sendable`` içeren sınıflar bildirimsel bir şekilde durumlarını gösterge "
"paneline aktarabilirler. Bu durumlar bir kez bildirildiklerinde WPILib "
"telemetri değerlerini her bir robot döngüsüne kendiliğinden gönderecektir. "
"Bu durum takımların döngüden döngüye gösterge paneline veri gönderme ve "
"panelden veri alma mantığını yönetme ihtiyacını ortadan kaldırmakta ve "
"takımlara telemetri kodunu robot mantığından ayırma olanağı tanımaktadır."

#: ../../frc-docs/source/docs/software/telemetry/robot-telemetry-with-sendable.rst:15
msgid ""
"Many WPILib classes (such as :ref:`Commands "
"<docs/software/dashboards/shuffleboard/advanced-usage/shuffleboard-commands-"
"subsystems:Commands and Subsystems>`) already implement ``Sendable``, and so"
" can be sent to the dashboard without any user modification.  Users are also"
" able to easily extend their own classes to implement ``Sendable``."
msgstr ""
"(:ref:`Commands <docs/software/dashboards/shuffleboard/advanced-"
"usage/shuffleboard-commands-subsystems:Commands and Subsystems>` gibi) "
"birçok WPILib sınıfı çoktan ``Sendable`` içermektedir ve bu sebeple herhangi"
" bir kullanıcı değişikliği olmadan gösterge paneline gönderilebilmektedir. "
"Kullanıcılar aynı zamanda kendi sınıflarını ``Sendable`` içerecek şekilde "
"genişletebilmektedir."

#: ../../frc-docs/source/docs/software/telemetry/robot-telemetry-with-sendable.rst:17
msgid ""
"The ``Sendable`` interface contains only one method: ``initSendable``.  "
"Implementing classes override this method to perform the binding of in-code "
"data values to structured :term:`JSON` data, which is then automatically "
"sent to the robot dashboard via NetworkTables.  Implementation of the "
"``Sendable`` interface is discussed in the :ref:`next "
"article<docs/software/telemetry/writing-sendable-classes:Writing Your Own "
"Sendable Classes>`."
msgstr ""
"``Sendable`` arayüzü yalnızca bir metod içermektedir: ``initSendable``. "
"Dahil edilen sınıflar, kod içerisindeki veri değerlerinin yapılandırılmış "
":term:`JSON` verilerine bağlanması için, bu metodu devre dışı bırakmaktadır."
" Bağlanılan veriler ardından NetworkTables üzerinden robot gösterge paneline"
" kendiliğinden gönderilmektedir. ``Sendable`` arayüzünün nasıl dahil "
"edildiği :ref:`bir sonraki yazıda<docs/software/telemetry/writing-sendable-"
"classes:Writing Your Own Sendable Classes>` ele alınmaktadır."

#: ../../frc-docs/source/docs/software/telemetry/robot-telemetry-with-sendable.rst:20
msgid "Sending a Sendable to the Dashboard"
msgstr "Gösterge Paneline bir Sendable Gönderilmesi"

#: ../../frc-docs/source/docs/software/telemetry/robot-telemetry-with-sendable.rst:22
msgid ""
"Unlike simple data types, Sendables are automatically kept up-to-date on the"
" dashboard by WPILib, without any further user code - \"set it and forget "
"it\".  Accordingly, they should usually be sent to the dashboard in an "
"initialization block or constructor, *not* in a periodic function."
msgstr ""
"Basit veri türlerinin aksinde Sendable'lar herhangi ek bir kullanıcı kodu "
"olmadan, \"kur ve unut\" mantığıyla WPILib tarafından gösterge panelinde "
"kendiliğinden güncellenmektedir. Bu doğrultuda Sendable'lar gösterge "
"paneline periyodik bir fonksiyon yerine bir başlangıç bloku veya constructor"
" içerisinde gönderilmelidir."

#: ../../frc-docs/source/docs/software/telemetry/robot-telemetry-with-sendable.rst:24
msgid ""
"To send a ``Sendable`` object to the dashboard, simply use the dashboard's "
"``putData`` method.  For example, an \"arm\" class that uses a :ref:`PID "
"Controller <docs/software/advanced-controls/controllers/pidcontroller:PID "
"Control in WPILib>` can automatically log telemetry from the controller by "
"calling the following in its constructor:"
msgstr ""
"Gösterge paneline bir  ``Sendable`` nesnesi göndermek için sadece gösterge "
"panelinin ``putData`` metodunu kullanmanız yeterli olacaktır. Örneğin, "
":ref:`PID Kontrolörü <docs/software/advanced-"
"controls/controllers/pidcontroller:PID Control in WPILib>` kullanan bir "
"\"kol\" sınıfı, aşağıdaki constructor'ı çağırarak kontrolörden gelen "
"telemetri verilerini kendiliğinden kaydedebilmektedir:"

#: ../../frc-docs/source/docs/software/telemetry/robot-telemetry-with-sendable.rst:44
msgid ""
"Additionally, some ``Sendable`` classes bind setters to the data values sent"
" *from the dashboard to the robot*, allowing remote tuning of robot "
"parameters."
msgstr ""
"Bunlara ek olarak bazı ``Sendable`` sınıfları, belirleyicileri *gösterge "
"panelinden robota* gönderilen veri değerlerine bağlayabilmekte, böylece "
"robot parametrelerinin uzaktan ayralanmasına olanak tanıyabilmektedir."
