# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Austin Shalit <austinshalit@gmail.com>, 2020
# Paulina Maynez <paump22@hotmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-18 04:03+0000\n"
"PO-Revision-Date: 2020-12-18 04:25+0000\n"
"Last-Translator: Paulina Maynez <paump22@hotmail.com>, 2021\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:4
msgid "Using a Coprocessor for vision processing"
msgstr "Uso de un coprocesador para el procesamiento de la visión"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:5
msgid ""
"Vision processing using libraries like OpenCV for recognizing field targets "
"or game pieces can often be a CPU intensive process. Often the load isn't "
"too significant and the processing can easily be handled by the roboRIO. In "
"cases where there are more camera streams or the image processing is "
"complex, it is desirable to off-load the roboRIO by putting the code and the"
" camera connection on a different processor. There are a number of choices "
"of processors that are popular in FRC\\ |reg| such as the Raspberry PI, the "
"intel-based Kangaroo, the LimeLight for the ultimate in simplicity, or for "
"more complex vision code a graphics accelerator such as one of the nVidia "
"Jetson models."
msgstr ""
"El procesamiento de Visión utilizando librerías como OpenCV para reconocer "
"objetivos de campo o piezas de juego a menudo puede ser un proceso intensivo"
" de CPU. A menudo la carga no es demasiado significativa y el procesamiento "
"puede ser manejado fácilmente por la roboRIO. En casos donde hay más "
"transmisiones de cámara o el procesamiento de imágenes es complejo, es "
"deseable quitar la roboRIO colocando el código y la conexión de la cámara en"
" un procesador diferente. Hay varias opciones de procesadores que son "
"populares en FRC\\ |reg| como el Raspberry PI, el Kangaroo basado en "
"inteligencia, la LimeLight para lo último en simplicidad, o para un código "
"de visión más complejo, un acelerador de gráficos como uno de los modelos "
"nVidia Jetson."

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:13
msgid "Strategy"
msgstr "Estrategia"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:14
msgid ""
"Generally the idea is to set up the coprocessor with the required software "
"that generally includes:"
msgstr ""
"En general, la idea es configurar el coprocesador con el software requerido "
"que generalmente incluye:"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:16
msgid "OpenCV - the open source computer vision library"
msgstr "OpenCV- la biblioteca de visión por computadora de código abierto"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:18
msgid ""
"Camera server library - to handle the camera connections and publish streams"
" that can be viewed on a dashboard"
msgstr ""
"Librería del Camera Sever- para manejar las conexiones de la cámara y "
"publicar secuencias que pueden ser vistas en un dashboard"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:19
msgid ""
"The language library for whatever computer language is used for the vision "
"program"
msgstr ""
"La librería de idiomas para cualquier lenguaje de computadora utilizado para"
" el programa de visión."

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:20
msgid "The actual vision program that does the object detection"
msgstr "El programa de visión real que hace la detección de objetos."

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:31
msgid "Streaming camera data to the dashboard"
msgstr "Transmitir datos de la cámara al dashboard"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:32
msgid ""
"It is often desirable to simply stream the camera data to the dashboard over"
" the robot network. In this case one or more camera connections can be sent "
"to the network and viewed on a dashboard such as Shuffleboard or a web "
"browser. Using Shuffleboard has the advantage of having easy controls to set"
" the camera resolution and bit rate as well as integrating the camera "
"streams with other data sent from the robot."
msgstr ""
"A menudo es deseable simplemente transmitir los datos de la cámara al "
"dashboard a través de la red del robot. En este caso, se pueden enviar una o"
" más conexiones de cámara a la red y verlas en un dashboard de instrumentos "
"como Shuffleboard o un navegador web. Usar Shuffleboard tiene la ventaja de "
"tener controles sencillos para establecer la resolución de la cámara y la "
"velocidad de bits, así como integrar las transmisiones de la cámara con "
"otros datos enviados desde el robot."

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:37
msgid ""
"It is also possible to process images and add annotation to the image, such "
"as target lines or boxes showing what the image processing code has detected"
" then send it forward to the dashboard to make it easier for operators to "
"see a clear picture of what's around the robot."
msgstr ""
"También es posible procesar imágenes y agregar anotaciones a la imagen, como"
" líneas de destino o cuadros que muestran lo que ha detectado el código de "
"procesamiento de imagen y luego enviarlo al dashboard para que sea más fácil"
" para los operadores ver una imagen clara de lo que hay alrededor del robot."
