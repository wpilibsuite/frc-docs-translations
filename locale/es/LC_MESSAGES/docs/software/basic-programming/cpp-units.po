# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors. This work is licensed under a Creative Commons Attribution 4.0 International License
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Karina Torres <karina.torres0399@gmail.com>, 2020
# Sofia Fernandez <sofiafdz.val@gmail.com>, 2020
# Diana Ramos <dianaracasas@gmail.com>, 2020
# Heber Sepúlveda <heber.sepulveda.m@gmail.com>, 2020
# Pierre Cote <persini24@outlook.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-26 04:30+0000\n"
"PO-Revision-Date: 2020-04-25 02:01+0000\n"
"Last-Translator: Pierre Cote <persini24@outlook.com>, 2020\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:2
msgid "The C++ Units Library"
msgstr "Biblioteca de unidades de C++"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:7
msgid "Using the Units Library"
msgstr "Usar la Biblioteca de Unidades"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:9
msgid ""
"The units library is a header-only library. You must include the relevant "
"header in your source files for the units you want to use. Here's a list of "
"available units."
msgstr ""
"La biblioteca de las unidades es una biblioteca de sólo cabecera. Debe "
"incluir la cabecera correspondiente en sus archivos fuente para las unidades"
" que desea utilizar. Aquí tienes una lista de las unidades disponibles."

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:53
msgid ""
"The ``units/math.h`` header provides unit-aware functions like "
"``units::math::abs()``."
msgstr ""
"El encabezado ``units/math.h`` proporciona funciones de reconocimiento de "
"unidades como ``units::math::abs()``."

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:56
msgid "Unit Types and Container Types"
msgstr "Tipos de Unidades y Tipos de Contenedores"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:58
msgid ""
"The C++ units library is based around two sorts of type definitions: unit "
"types and container types."
msgstr ""
"Las librerías de unidades de C++ están basadas en dos clases de "
"definiciones: tipos de unidades y tipos de contenedores."

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:61
msgid "Unit Types"
msgstr "Tipos de Unidades"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:63
msgid ""
"Unit types correspond to the abstract concept of a unit, without any actual "
"stored value.  Unit types are the fundamental \"building block\" of the "
"units library - all unit types are defined constructively (using the "
"``compound_unit`` template) from a small number of \"basic\" unit types "
"(such as ``meters``, ``seconds``, etc)."
msgstr ""
"Los tipos de unidades corresponden al concepto abstracto de una unidad, sin "
"que tenga un valor actual guardado. Unit types son el “bloque de "
"construcción” fundamental de las librerías de unidad - todos los tipos de "
"unidades son definidos constructivamente (usando la plantilla "
"``compound_unit``) de un número pequeño de unit types \"básicas\" (como "
"``meters``, ``seconds``, etc)."

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:68
msgid "Container Types"
msgstr "Tipos de contenedores"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:70
msgid ""
"Container types correspond to an actual quantity dimensioned according to "
"some unit - that is, they are what actually hold the numerical value. "
"Container types are constructed from unit types with the ``unit_t`` "
"template.  Most unit types have a corresponding container type that has the "
"same name suffixed by ``_t`` - for example, the unit type ``units::meter`` "
"corresponds to the container type ``units::meter_t``."
msgstr ""
"Los tipos de contenedores corresponden a una cantidad actual dimensionada de"
" acuerdo con cierta unidad – que es, ellos son los que contienen realmente "
"el valor numérico. Container types son hechos de unit types con el modelo "
"``unit_t``. La mayoría de los unit types tienen un container type que les "
"correponde que tiene el mismo sufijo de nombre por ``_t`` - por ejemplo, el "
"unit type ``units::meter`` corresponde al container type ``units::meter_t``."

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:72
msgid ""
"Whenever a specific quantity of a unit is used (as a variable or a method "
"parameter), it will be an instance of the container type.  By default, "
"container types will store the actual value as a ``double`` - advanced users"
" may change this by calling the ``unit_t`` template manually."
msgstr ""
"Cuando una cantidad específica de unidad es utilizada (como variable o un "
"parámetro de método), va a ser una instancia del tipo contenedor/container "
"type. Por defecto, los tipos contenedores pueden almacenar el valor actual "
"como ``double`` - usuarios avanzados pueden cambiar esto llamando al modelo "
"``unit_t`` manualmente."

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:74
msgid ""
"A full list of unit and container types can be found in the `documentation "
"<https://github.com/nholthaus/units#namespaces>`__."
msgstr ""
"Una lista completa de tipos unitarios y contenedores puede ser encontrada en"
" la `documentación <https://github.com/nholthaus/units#namespaces>`__."

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:77
msgid "Creating Instances of Units"
msgstr "Creando instancias de unidades"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:79
msgid ""
"To create an instance of a specific unit, we create an instance of its "
"container type:"
msgstr ""
"Para crear una instancia de una unidad específica, creamos una instancia con"
" su tipo contenedor:"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:86
msgid ""
"Alternatively, the units library has `type literals "
"<https://en.cppreference.com/w/cpp/language/user_literal>`__ defined for "
"some of the more common container types.  These can be used in conjunction "
"with type inference via ``auto`` to define a unit more succinctly:"
msgstr ""
"Una alternativa es que la librería de unidades tiene `tipos literales "
"<https://en.cppreference.com/w/cpp/language/user_literal>`__  definidos por "
"algunos de los tipos contenedores más comunes. Éstos pueden ser usados en "
"conjunción con tipo de inferencia vía ``auto`` para definir una unidad más "
"sucintamente:"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:93
msgid ""
"Units can also be initialized using a value of an another container type, as"
" long as the types can be converted between one another. For example, a "
"``meter_t`` value can be created from a ``foot_t`` value."
msgstr ""
"Las unidades también se pueden inicializar usando un valor de otro tipo "
"contenedor, mientras que los tipos puedan ser convertidos en medio de los "
"otros. Por ejemplo, un valor ``meter_t`` puede ser creado desde un valor "
"``foot_t``."

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:100
msgid ""
"In fact, all container types representing convertible unit types are "
"*implicitly convertible*.  Thus, the following is perfectly legal:"
msgstr ""
"DE hecho, todos los tipos contenedor representando tipo unidad convertibles "
"son *implícitamente convertibles*. Así, lo siguiente es perfectamente legal:"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:106
msgid ""
"In short, we can use *any* unit of length in place of *any other* unit of "
"length, anywhere in our code; the units library will automatically perform "
"the correct conversion for us."
msgstr ""
"En breve, usamos *ninguna* unidad de medida en lugar de *otra* unidad de "
"medida, en ningun lugar del codigo; las librerias de unidades pueden "
"automáticamente realizar la conversión por nosotros."

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:109
msgid "Performing Arithmetic with Units"
msgstr "Realizando aritmética con unidades"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:111
msgid ""
"Container types support all of the ordinary arithmetic operations of their "
"underlying data type, with the added condition that the operation must be "
"*dimensionally* sound.  Thus, addition must always be performed on two "
"compatible container types:"
msgstr ""
"Los tipo contenedores soportan todas las operaciones aritméticas ordinarias "
"de su tipo de datos subyacente, con la condición añadida que la operación "
"debe estar *dimensionalmente* sólido. Así, las adiciones siempre tienen que "
"estar realizadas en dos tipos de contenedores compatibles:"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:124
msgid ""
"Multiplication may be performed on any pair of container types, and yields "
"the container type of a compound unit:"
msgstr ""
"La multiplicación debe de ser realizada en cualquier par de tipo contenedor,"
" y dar al tipo contenedor de una unidad compuesta:"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:126
msgid ""
"When a calculation yields a compound unit type, this type will only be "
"checked for validity at the point of operation if the result type is "
"specified explicitly.  If ``auto`` is used, this check will not occur.  For "
"example, when we divide distance by time, we may want to ensure the result "
"is, indeed, a velocity (i.e. ``units::meter_per_second_t``). If the return "
"type is declared as ``auto``, this check will not be made."
msgstr ""
"Cuando un calculo da un tipo de unidad compuesta, éste tipo será solo "
"revisado para validar en el punto de operación si el tipo resultado es "
"especificado explícitamente. Si ``auto`` es utilizado, esta verificación no "
"ocurrirá. Por ejemplo, cuando nosotros dividimos distancia sobre tiempo, "
"deberíamos querer asegurar que el resultado, en efecto, es velocidad (por "
"ejemplo, ``units::meter_per_second_t``). Si el tipo resultante es declarado "
"como ``auto``, esta verificación no se hará."

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:139
msgid "``<cmath>`` Functions"
msgstr "``<cmath>`` Funciones"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:141
msgid ""
"Some ``std`` functions (such as ``clamp``) are templated to accept any type "
"on which the arithmetic operations can be performed.  Quantities stored as "
"container types will work with these functions without issue."
msgstr ""
"Algunas funciones ``std`` (como ``clamp``) son plantillas que aceptan "
"cualquier tipo que realice las operaciones aritméticas. Las cantidades "
"almacenadas como tipo contenedores pueden funcionar con estas funciones sin "
"ningún problema."

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:143
msgid ""
"However, other ``std`` functions work only on ordinary numerical types (e.g."
" ``double``).  The units library's ``units::math`` namespace contains "
"wrappers for several of these functions that accept units. Examples of such "
"functions include ``sqrt``, ``pow``, etc."
msgstr ""
"De cualquier manera, otras funciones ``std`` funcionan solo con tipos "
"numéricos ordinarios (por ejemplo, ``double``). Los espacios para el nombre "
"de las librerías unitarias ``units::math``contienen envolvedores para "
"algunas de estas funciones que aceptan unidades. Ejemplos de estas funciones"
" incluyen ``sqrt``, ``pow``, etc."

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:151
msgid "Removing the Unit Wrapper"
msgstr "Quitar el envoltorio de la unidad"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:162
msgid "Example of the Units Library in WPILib Code"
msgstr "Ejemplo de librería de unidades en el código WPILib"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:163
msgid ""
"Several arguments for methods in new features of WPILib (ex. "
":ref:`kinematics <docs/software/kinematics-and-odometry/intro-and-chassis-"
"speeds:What is kinematics?>`) use the units library. Here is an example of "
":ref:`sampling a trajectory <docs/software/advanced-"
"controls/trajectories/manipulating-trajectories:Sampling the trajectory>`."
msgstr ""
"Algunos argumentos de métodos en nuevas funciones de WPILib (ex. "
":ref:`cinemáticas <docs/software/kinematics-and-odometry/intro-and-chassis-"
"speeds:What is kinematics?>`) usan las librerías de unidad. Aquí hay un "
"ejemplo de :ref:`probando una trayectoria <docs/software/advanced-"
"controls/trajectories/manipulating-trajectories:Sampling the trajectory>`."

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:174
msgid ""
"Some WPILib classes represent objects that could naturally work with "
"multiple choices of unit types - for example, a motion profile might operate"
" on either linear distance (e.g. meters) or angular distance (e.g. radians)."
"  For such classes, the unit type is required as a template parameter:"
msgstr ""
"Algunas clases de WPILib representan objetos que pueden trabajar "
"naturalmente con múltiples opciones de tipos de unidades - por ejemplo, un "
"perfil de movimiento puede operar en cualquier distancia lineal (por "
"ejemplo, metros) o distancia angular (por ejemplo, radianes). Para esas "
"clases, el tipo unitario es requerido como un parámetro modelo:"

#: ../../frc-docs/source/docs/software/basic-programming/cpp-units.rst:188
msgid ""
"For more detailed documentation, please visit the official `GitHub page "
"<https://github.com/nholthaus/units>`_ for the units library."
msgstr ""
"Para documentación más detallada, por favor visite laágina oficial de "
"`GitHub <https://github.com/nholthaus/units>`_ para las librerías de unidad."
