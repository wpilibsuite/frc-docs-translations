# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Atlus Zhang <atluslan@yahoo.co.jp>, 2021
# Michael Zhao <haitong1110@126.com>, 2021
# 海宇 鲍 <arlicbao@163.com>, 2021
# Ran Xin <xinryanryan@outlook.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-05 16:08+0000\n"
"PO-Revision-Date: 2020-12-18 04:25+0000\n"
"Last-Translator: Ran Xin <xinryanryan@outlook.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:4
msgid "Using a Coprocessor for vision processing"
msgstr "使用协同处理器的视觉处理"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:5
msgid ""
"Vision processing using libraries like OpenCV for recognizing field targets "
"or game pieces can often be a CPU intensive process. Often the load isn't "
"too significant and the processing can easily be handled by the roboRIO. In "
"cases where there are more camera streams or the image processing is "
"complex, it is desirable to off-load the roboRIO by putting the code and the"
" camera connection on a different processor. There are a number of choices "
"of processors that are popular in FRC\\ |reg| such as the Raspberry PI, the "
"intel-based Kangaroo, the LimeLight for the ultimate in simplicity, or for "
"more complex vision code a graphics accelerator such as one of the nVidia "
"Jetson models."
msgstr ""
"使用诸如OpenCV之类的库进行视觉处理来识别目标或游戏作品通常会占用大量CPU资源。通常，负载并不是太重要，而且roboRIO可以轻松处理该处理。在摄像机流更多或图像处理复杂的情况下，最好通过将代码和摄像机连接放在不同的处理器上来卸载roboRIO。在FRC"
" \\ | reg |中有很多种处理器可供选择。例如Raspberry "
"PI，基于Intel的袋鼠，LimeLight，以实现极致的简洁性，或者为更复杂的视觉代码提供图形加速器，例如nVidia Jetson型号之一。"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:13
msgid "Strategy"
msgstr "策略"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:14
msgid ""
"Generally the idea is to set up the coprocessor with the required software "
"that generally includes:"
msgstr "我们需要一款对应的软件来设置我们的协同处理器，一般包括有："

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:16
msgid "OpenCV - the open source computer vision library"
msgstr "OpenCV - 一个开源的计算机视觉库"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:17
msgid ""
":term:`NetworkTables` - to commute the results of the image processing to "
"the roboRIO program"
msgstr "术语: Network tables（网络表） - 用于将图像处理的结果传输到RoboRIO的程序里"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:18
msgid ""
"Camera server library - to handle the camera connections and publish streams"
" that can be viewed on a dashboard"
msgstr "Camera server library（摄像头服务器库） - 用于摄像头的连接与传输视频流以确保在控制面板上能看到视频"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:19
msgid ""
"The language library for whatever computer language is used for the vision "
"program"
msgstr "语言库（对应视觉程序的编程语言）"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:20
msgid "The actual vision program that does the object detection"
msgstr "你的程序（能探测到物体的那种）"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:22
msgid ""
"The coprocessor is connected to the roboRIO network by plugging it into the "
"extra ethernet port on the network router or, for more connections, adding a"
" small network switch to the robot. The cameras are plugged into the "
"coprocessor, it acquires the images, processes them, and publishes the "
"results, usually target location information, to NetworkTables so it is can "
"be consumed by the robot program for steering and aiming."
msgstr ""
"将协同处理器连接到RoboRIO的办法有两种。一，将协同处理器通过额外的以太网接口与路由器相连；二，若是要连接更多设备的话，可以在机器上添加一个小型的网络交换机。摄像头插入协同处理器后会获取图像、处理图像，最终将结果（通常是目标的地点信息）通过Network"
" tables（网络表）传输到机器以便瞄准与控制方向。"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rstNone
msgid "Network diagram with the coprocessor and roboRIO on the same network."
msgstr "协处理器和 roboRIO 在同一网络上的网络图。"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:31
msgid "Streaming camera data to the dashboard"
msgstr "将视频流传输至控制面板"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:32
msgid ""
"It is often desirable to simply stream the camera data to the dashboard over"
" the robot network. In this case one or more camera connections can be sent "
"to the network and viewed on a dashboard such as Shuffleboard or a web "
"browser. Using Shuffleboard has the advantage of having easy controls to set"
" the camera resolution and bit rate as well as integrating the camera "
"streams with other data sent from the robot."
msgstr ""
"我们通常会简单地将摄像头的数据直接通过机器人的网络传到控制面板。使用以上方法，我们可以将一个或多个视频流传输到网络并且通过例如Shuffleboard或网页浏览器在控制面板上显示。使用Shuffleboard的好处有几点：1、便于调整摄像头的分辨率；2、便于调整摄像头的比特率；3、可以将视频流与其他数据一起传输给机器人。"

#: ../../frc-docs/source/docs/software/vision-processing/wpilibpi/using-a-coprocessor-for-vision-processing.rst:37
msgid ""
"It is also possible to process images and add annotation to the image, such "
"as target lines or boxes showing what the image processing code has detected"
" then send it forward to the dashboard to make it easier for operators to "
"see a clear picture of what's around the robot."
msgstr "同时，我们也可以在处理图像时添加注释并传输到控制面板，例如目标的线或是盒子，如此以便于操控手们看清机器人周围的情况。"
