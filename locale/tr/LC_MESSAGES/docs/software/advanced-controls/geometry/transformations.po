# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 04:04+0000\n"
"PO-Revision-Date: 2020-06-26 02:40+0000\n"
"Last-Translator: Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:2
msgid "Transformations"
msgstr "Dönüşümler"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:5
msgid "Translation2d"
msgstr "Translation2d"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:7
msgid ""
"Operations on a ``Translation2d`` perform operations to the vector "
"represented by the ``Translation2d``."
msgstr ""
"Bir ``Translation2d`` üzerindeki işlemler, ``Translation2d`` ile temsil "
"edilen vektör üzerinde işlemler gerçekleştirir."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:9
msgid ""
"Addition: Addition between two ``Translation2d`` a and b can be performed "
"using ``plus`` in Java, or the ``+`` operator in C++. Addition adds the two "
"vectors."
msgstr ""
"Ekleme: İki ``Translation2d`` a ve b arasındaki ekleme, Java'da ``plus`` "
"veya C ++ 'da ``+`` 'operatörü kullanılarak gerçekleştirilebilir. Ekleme, "
"iki vektörü ekler."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:10
msgid ""
"Subtraction: Subtraction between two ``Translation2d`` can be performed "
"using ``minus`` in Java, or the binary ``-`` operator in C++. Subtraction "
"subtracts the two vectors."
msgstr ""
"Çıkarma: İki `` Translation2d '' arasındaki çıkarma, Java'da ``minus``veya C"
" ++ 'da ikili ``-`` operatörü kullanılarak gerçekleştirilebilir. Çıkarma, "
"iki vektörü çıkarır."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:11
msgid ""
"Multiplication: Multiplication of a ``Translation2d`` and a scalar can be "
"performed using ``times`` in Java, or the ``*`` operator in C++. This "
"multiplies the vector by the scalar."
msgstr ""
"Çarpma: Bir ``Translation2d`` ve bir sayısal çarpımı, Java'da ``times`` veya"
" C ++ 'da ``*`` operatörü kullanılarak gerçekleştirilebilir. Bu, vektörü "
"sayısal olarak çarpar."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:12
msgid ""
"Division: Division of a ``Translation2d`` and a scalar can be performed "
"using ``div`` in Java, or the ``/`` operator in C++. This divides the vector"
" by the scalar."
msgstr ""
"Bölüm: Bir ``Translation2d`` ve bir sayısal bölümü, Java'da ``div`` veya C "
"++ 'da ``/`` operatörü kullanılarak gerçekleştirilebilir. Bu, vektörü "
"sayısal olarak böler."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:13
msgid ""
"Rotation: Rotation of a ``Translation2d`` by a counter-clockwise rotation "
":math:`\\theta` about the origin can be performed by using ``rotateBy``. "
"This is equivalent to multiplying the vector by the matrix "
":math:`\\begin{bmatrix} cos\\theta & -sin\\theta \\\\ sin\\theta & "
"cos\\theta \\end{bmatrix}`"
msgstr ""
"Döndürme: Bir ``Translation2d`` nin saat yönünün tersine dönüşle "
"döndürülmesi :math:`\\theta`,  ``rotateBy`` kullanılarak orijin etrafında "
"yapılabilir. Bu, vektörün matrisle çarpılmasına eşdeğerdir "
":math:`\\begin{bmatrix} cos\\theta & -sin\\theta \\\\ sin\\theta & "
"cos\\theta \\end{bmatrix}`"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:14
msgid ""
"Additionally, you can rotate a ``Translation2d`` by 180 degrees by using "
"``unaryMinus`` in Java, or the unary ``-`` operator in C++."
msgstr ""
"Ek olarak, Java'da ``unaryMinus`` veya C ++ 'da tekli ``-`` operatörünü "
"kullanarak bir ``Translation2d`` 'yi 180 derece döndürebilirsiniz."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:17
msgid "Rotation2d"
msgstr "Rotation2d"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:19
msgid ""
"Transformations for ``Rotation2d`` are just arithmetic operations on the "
"angle measure represented by the ``Rotation2d``."
msgstr ""
"``Rotation2d`` için dönüşümler, ``Rotation2d`` ile temsil edilen açı "
"ölçüsündeki aritmetik işlemlerdir."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:21
msgid ""
"``plus`` (Java) or ``+`` (C++): Adds the rotation component of ``other`` to "
"this ``Rotation2d``'s rotation component"
msgstr ""
"``plus`` (Java) veya ``+`` (C ++): Bu ``Rotation2d`` nin rotasyon bileşenine"
" ``other`` rotasyon bileşenini ekler"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:22
msgid ""
"``minus`` (Java) or binary ``-`` (C++): Subtracts the rotation component of "
"``other`` to this ``Rotation2d``'s rotation component"
msgstr ""
"``minus`` (Java) veya ikili ``-`` (C ++): ``other`` ın rotasyon bileşenini "
"bu ``Rotation2d`` nin rotasyon bileşeninden çıkarır"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:23
msgid ""
"``unaryMinus`` (Java) or unary ``-`` (C++): Multiplies the rotation "
"component by a scalar of -1."
msgstr ""
"``unaryMinus`` (Java) veya tekil ``-`` (C ++): Döndürme bileşenini -1 "
"sayısalıyla çarpar."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:24
msgid ""
"``times`` (Java) or ``*`` (C++) : Multiplies the rotation component by a "
"scalar."
msgstr ""
"``times`` (Java) veya ``*`` (C ++): Döndürme bileşenini bir sayısal ile "
"çarpar."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:27
msgid "Transform2d and Twist2d"
msgstr "Transform2d ve Twist2d"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:31
msgid ""
"``Transform2d`` represents a **relative** transformation. It has an "
"translation and a rotation component. Transforming a ``Pose2d`` by a "
"``Transform2d`` rotates the translation component of the transform by the "
"rotation of the pose, and then adds the rotated translation component and "
"the rotation component to the pose. In other words, "
"``Pose2d.plus(Transform2d)`` returns :math:`\\begin{bmatrix} x_p \\\\ y_p "
"\\\\ \\theta_p \\end{bmatrix}+\\begin{bmatrix} cos\\theta_p & -sin\\theta_p "
"& 0 \\\\ sin\\theta_p & cos\\theta_p & 0 \\\\ 0 & 0 & 1 "
"\\end{bmatrix}\\begin{bmatrix}x_t \\\\ y_t \\\\ \\theta_t \\end{bmatrix}`"
msgstr ""
"``Transform2d``, **göreceli-relative** bir dönüşümü temsil eder. Bir öteleme"
" ve döndürme bileşenine sahiptir. Bir ``Pose2d`` nin bir ``Transform2d`` ile"
" dönüştürülmesi, dönüşümün çeviri bileşenini pozun dönüşüyle döndürür ve "
"ardından döndürülen çeviri bileşenini ve döndürme bileşenini poza ekler. "
"Başka bir deyişle, ``Pose2d.plus(Transform2d)`` şunu döndürür "
":math:`\\begin{bmatrix} x_p \\\\ y_p \\\\ \\theta_p "
"\\end{bmatrix}+\\begin{bmatrix} cos\\theta_p & -sin\\theta_p & 0 \\\\ "
"sin\\theta_p & cos\\theta_p & 0 \\\\ 0 & 0 & 1 "
"\\end{bmatrix}\\begin{bmatrix}x_t \\\\ y_t \\\\ \\theta_t \\end{bmatrix}`"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:33
msgid ""
"``Twist2d`` represents a change in distance along an arc. Usually, this "
"class is used to represent the movement of a drivetrain, where the x "
"component is the forward distance driven, the y component is the distance "
"driven to the side (left positive), and the :math:`\\theta` component is the"
" change in heading. The underlying math behind finding the pose exponential "
"(new pose after moving the pose forward along the curvature of the twist) "
"can be found `here <https://file.tavsys.net/control/controls-engineering-in-"
"frc.pdf>`_ in chapter 10."
msgstr ""
"``Twist2d``, bir yay boyunca mesafedeki bir değişikliği temsil eder. "
"Genellikle, bu sınıf, bir aktarma sisteminin hareketini temsil etmek için "
"kullanılır; burada x bileşeni, sürülen ileri mesafedir, y bileşeni, yana "
"sürülen mesafedir (sol pozitif) ve :math:`\\theta` bileşeni, başlıktaki "
"değişiklik. Poz üstelini bulmanın ardında yatan matematik (pozu bükülmenin "
"eğriliği boyunca ileriye doğru hareket ettirdikten sonra yeni poz) 10. "
"bölümde `burada <https://file.tavsys.net/control/controls-engineering-in-"
"frc.pdf>`_ _ bulunabilir."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:35
msgid ""
"For nonholonomic drivetrains, the y component of a ``Twist2d`` should always"
" be 0."
msgstr ""
"Holonomik olmayan aktarma organları için, bir ``Twist2d`` nin y bileşeni her"
" zaman 0 olmalıdır."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:37
msgid ""
"Both classes can be used to estimate robot location. Twist2d is used in "
"WPILib's odometry classes to update the robot's pose based on movement, "
"while Transform2d can be used to estimate the robot's global position from "
"vision data."
msgstr ""
"Her iki sınıf da robot konumunu tahmin etmek için kullanılabilir. Twist2d, "
"WPILib'in odometri sınıflarında, robotun hareketine dayalı duruşunu "
"güncellemek için kullanılırken, Transform2d, robotun küresel konumunu görme "
"verilerinden tahmin etmek için kullanılabilir."
