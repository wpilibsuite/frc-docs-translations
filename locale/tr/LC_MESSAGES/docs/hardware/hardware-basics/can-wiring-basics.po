# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Alisa Kurun, 2022
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-05 04:03+0000\n"
"PO-Revision-Date: 2021-02-15 16:21+0000\n"
"Last-Translator: Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2022\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/hardware/hardware-basics/can-wiring-basics.rst:2
msgid "CAN Wiring Basics"
msgstr "CAN Bağlantısının Temelleri"

#: ../../frc-docs/source/docs/hardware/hardware-basics/can-wiring-basics.rst:4
msgid ""
"CAN is a two wire network that is designed to facilitate communication "
"between multiple devices on your robot. It is recommended that CAN on your "
"robot follow a \"daisy-chain\" topology. This means that the CAN wiring "
"should usually start at your roboRIO and go into and out of each device "
"successively until finally ending at the PDP."
msgstr ""
"CAN, robotunuzdaki birden fazla cihaz arasında iletişimi kolaylaştırmak için"
" tasarlanmış iki kablolu bir ağdır. Robotunuzdaki CAN'ın bir \"papatya "
"zinciri\" topolojisini izlemesi önerilir. Bu, CAN bağlantısının genellikle "
"roboRIO'nuzda başlaması ve sonunda PDP'de bitene kadar her bir cihaza "
"ardarda girip çıkması gerektiği anlamına gelir."

#: ../../frc-docs/source/docs/hardware/hardware-basics/can-wiring-basics.rst:9
msgid "Standard Wiring"
msgstr "Standart Bağlantı"

#: ../../frc-docs/source/docs/hardware/hardware-basics/can-wiring-basics.rst:11
msgid ""
"CAN is generally wired with yellow and green wire with yellow acting as the "
"CAN-High and green as the CAN-Low signals.  Many devices show this yellow "
"and green color scheme to indicate how the wires should be plugged in."
msgstr ""
"CAN genellikle sarı ve yeşil kablolarla, sarı CAN-Yüksek ve yeşil CAN-Alçak "
"sinyalleri olacak şekilde bağlanır. Birçok cihaz, kabloların nasıl takılması"
" gerektiğini belirtmek için bu sarı ve yeşil renk şemasını gösterir."

#: ../../frc-docs/source/docs/hardware/hardware-basics/can-wiring-basics.rst:13
msgid "CAN wiring from the roboRIO to the PCM."
msgstr "roboRIO'dan PCM'e CAN Bağlantısı"

#: ../../frc-docs/source/docs/hardware/hardware-basics/can-wiring-basics.rst:17
msgid "CAN wiring from the PCM to the PDP."
msgstr "PCM'den PDP'ye CAN bağlantısı"

#: ../../frc-docs/source/docs/hardware/hardware-basics/can-wiring-basics.rst:22
msgid "Termination"
msgstr "Sonlandırma"

#: ../../frc-docs/source/docs/hardware/hardware-basics/can-wiring-basics.rst:24
msgid ""
"It is recommended that the wiring starts at the roboRIO and ends at the PDP "
"because the CAN network is required to be terminated by 120 :math:`\\Omega` "
"resistors and these are built into these two devices.  The PDP ships with "
"the CAN bus terminating resistor jumper in the \"ON\" position. It is "
"recommended to leave the jumper in this position and place any additional "
"CAN nodes between the roboRIO and the PDP (leaving the PDP as the end of the"
" bus). If you wish to place the PDP in the middle of the bus (utilizing both"
" pairs of PDP CAN terminals) move the jumper to the \"OFF\" position and "
"place your own 120 :math:`\\Omega` terminating resistor at the end of your "
"CAN bus chain."
msgstr ""
"CAN ağının 120 :math:`\\Omega` dirençleri ile sonlandırılması gerektiğinden "
"ve bunlar bu iki cihazda yerleşik olduğundan, kablolamanın roboRIO'da "
"başlayıp PDP'de bitmesi önerilir. PDP, \"ON\" konumunda CAN bus sonlandırma "
"direnci jumper'ı ile birlikte gönderilir. Jumper'ı bu konumda bırakmanız ve "
"ek CAN düğümlerini roboRIO ile PDP arasına yerleştirmeniz önerilir (PDP'yi "
"veriyolunun sonu olarak bırakarak). PDP'yi veri yolunun ortasına "
"yerleştirmek istiyorsanız (her iki PDP CAN terminali çiftini kullanarak) "
"jumper'ı \"KAPALI\" konuma getirin ve kendi 120 :math:`\\Omega` sonlandırma "
"direncinizi CAN veri yolu zinciri kablonuzun sonuna yerleştirin."
