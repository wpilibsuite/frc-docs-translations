# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# MUFIT ALKAYA <mufit.alkaya@tfo.k12.tr>, 2020
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-24 16:11+0000\n"
"PO-Revision-Date: 2020-04-25 01:59+0000\n"
"Last-Translator: Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:2
msgid "Creating your Benchtop Test Program (C++/Java)"
msgstr "Deneme Robotu Test Programınızı Oluşturma (C ++/Java)"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:4
msgid ""
"Once everything is installed, we're ready to create a robot program.  WPILib"
" comes with several templates for robot programs.  Use of these templates is"
" highly recommended for new users; however, advanced users are free to write"
" their own robot code from scratch. This article walks through creating a "
"project from one of the provided examples which has some code already "
"written to drive a basic robot."
msgstr ""
"Her şey kurulduktan sonra, bir robot programı oluşturmaya hazırız. WPILib, "
"robot programları için çeşitli şablonlarla birlikte gelir. Bu şablonların "
"kullanımı yeni kullanıcılar için şiddetle tavsiye edilir; ancak, ileri düzey"
" kullanıcılar kendi robot kodlarını sıfırdan yazmakta özgürdür. Bu makale, "
"temel bir robotu çalıştırmak için önceden yazılmış kodların bulunduğu "
"örneklerden yola çıkarak bir proje oluşturmayı anlatır."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:7
msgid "Creating a New WPILib Project"
msgstr "Yeni bir WPILib Projesi Oluşturma"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:9
msgid ""
"Bring up the Visual Studio Code command palette with :kbd:`Control+Shift+P`:"
msgstr ""
"Visual Studio Code komut paletini şu şekilde getirin :kbd:`Control+Shift+P`:"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:11
msgid "|Command Palette|"
msgstr "|Command Palet|"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:13
msgid ""
"Then, type \"WPILib\" into the prompt.  Since all WPILib commands start with"
" \"WPILib,\" this will bring up the list of WPILib-specific VS Code "
"commands:"
msgstr ""
"Ardından, komut istemi satırına \"WPILib\" yazın. Tüm WPILib komutları "
"\"WPILib\" ile başladığından, bu, WPILib'e özgü VS Code komutlarının "
"listesini getirecektir:"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:15
msgid "|WPILib Commands|"
msgstr "|WPILib Komutları|"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:17
msgid "Now, select the \"Create a new project\" command:"
msgstr "Şimdi, \"Create a new project\" komutunu seçin:"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:19
msgid "|Create New Project|"
msgstr "|Yeni Proje Oluşturmak|"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:21
msgid "This will bring up the \"New Project Creator Window:\""
msgstr "Bu, \"New Project Creator Window:\" getirecektir:"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:23
msgid "|New Project Creator|"
msgstr "|New Project Creator - Yeni Proje Oluşturucu|"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:25
msgid "The elements of the New Project Creator Window are explained below:"
msgstr "New Project Creator Penceresinin öğeleri aşağıda açıklanmıştır:"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:27
msgid ""
"**Project Type**: The kind of project we wish to create.  For this example, "
"select **Example**"
msgstr ""
"**Project Type**: Oluşturmak istediğimiz proje türü. Bu örnek için "
"**Example** seçin"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:28
msgid ""
"**Language**: This is the language (C++ or Java) that will be used for this "
"project."
msgstr "**Language**: Bu proje için kullanılacak dildir (C++ veya Java)."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:29
msgid ""
"**Project Base**: This box is used to select the base class or example to "
"generate the project from. For this example, select **Getting Started**"
msgstr ""
"**Project Base**: Bu kutu, projenin oluşturulacağı base class veya örneği "
"seçmek için kullanılır. Bu örnek için, **Getting Started** öğesini seçin."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:30
msgid ""
"**Project Location**: This determines the folder in which the robot project "
"will be located."
msgstr ""
"**Project Location**: Robot projesinin konumlandırılacağı klasörü belirler."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:31
msgid ""
"**Create New Folder**: If this is checked, a new folder will be created to "
"hold the project within the previously-specified folder.  If it is *not* "
"checked, the project will be located directly in the previously-specified "
"folder.  An error will be thrown if the folder is not empty and this is not "
"checked."
msgstr ""
"**Create New Folder**: Bu işaretlenirse, projeyi önceden belirtilen klasör "
"içinde tutmak için yeni bir klasör oluşturulur. *not* işaretli değilse, "
"proje doğrudan önceden belirtilen klasörde yer alacaktır. Klasör boş değilse"
" ve bu kontrol edilmezse bir hata atılacaktır."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:32
msgid ""
"**Project Name**: The name of the robot project.  This also specifies the "
"name that the project folder will be given if the Create New Folder box is "
"checked."
msgstr ""
"**Project Name**: Robot projesinin adı. Bu ayrıca Create New Folder kutusu "
"işaretlendiğinde proje klasörünün verileceği adı da belirtir."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:33
msgid ""
"**Team Number**: The team number for the project, which will be used for "
"package names within the project and to locate the robot when deploying "
"code."
msgstr ""
"**Team Number**: Proje içindeki paket isimleri için ve kodu dağıtırken "
"robotu bulmak için kullanılacak takım numarası."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:34
msgid ""
"**Desktop Support**: Enables unit test and simulation. While WPILib supports"
" this, third party software libraries may not. If libraries do not support "
"desktop, then your code may not compile or may crash. It should be left "
"unchecked unless unit testing or simulation is needed and all libraries "
"support it. For this example, do not check this box."
msgstr ""
"**Desktop Support**: Birim testi ve simülasyonu etkinleştirir. WPILib bunu "
"desteklerken, üçüncü parti yazılım kütüphaneleri desteklemeyebilir. "
"Kütüphaneler masaüstünü desteklemiyorsa, kodunuz derlenmeyebilir veya "
"çökebilir. Birim testi veya simülasyon gerekmedikçe ve tüm kütüphaneler bunu"
" desteklemedikçe, işaretlenmeden bırakılmalıdır. Bu örnek için bu kutuyu "
"işaretlemeyin."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:36
msgid ""
"Once all the above have been configured, click \"Generate Project\" and the "
"robot project will be created."
msgstr ""
"Yukarıdakilerin tümü yapılandırıldıktan sonra, \"Generate Project\" u "
"tıklayın ve robot projesi oluşturulacaktır."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:38
msgid ""
"Any errors in project generation will appear in the bottom right-hand corner"
" of the screen."
msgstr ""
"Proje oluşturmadaki herhangi bir hata, ekranın sağ alt köşesinde "
"görünecektir."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:41
msgid "Opening The New Project"
msgstr "Yeni Projeyi Açmak"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:43
msgid ""
"After successfully creating your project, VS Code will give the option of "
"opening the project as shown below. We can choose to do that now or later by"
" typing :kbd:`Ctrl-K` then :kbd:`Ctrl-O` (or just :kbd:`Command+O` on macOS)"
" and select the folder where we saved our project."
msgstr ""
"Projenizi başarıyla oluşturduktan sonra VS Code, aşağıda gösterildiği gibi "
"projeyi açma seçeneği sunacaktır. Bunu şimdi veya daha sonra şunu yazarak "
"yapmayı seçebiliriz: :kbd:`Ctrl-K` sonra :kbd:`Ctrl-O` (veya macOS'ta sadece"
"  :kbd:`Command+O`) ve projeyi kaydettiğimiz klasörü seçebiliriz."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:45
msgid ""
"Once opened we will see the project hierarchy on the left. Double clicking "
"on the file will open that file in the editor."
msgstr ""
"Açıldıktan sonra solda proje hiyerarşisini göreceğiz. Dosyaya çift tıklamak "
"o dosyayı düzenleyicide açacaktır."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:47
msgid "|Opened Robot Project|"
msgstr "|Açılmış Robot Projesi|"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:50
msgid "C++ Configurations (C++ Only)"
msgstr "C++ Yapılandırmaları (Yalnızca C++)"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:52
msgid ""
"For C++ projects, there is one more step to set up IntelliSense.  Whenever "
"we open a project, we should get a pop-up in the bottom right corner asking "
"to refresh C++ configurations.  Click \"Yes\" to set up IntelliSense."
msgstr ""
"C++ projeleri için IntelliSense'i kurmak için bir adım daha vardır. Ne zaman"
" bir proje açsak, sağ alt köşede C++ yapılandırmalarını yenilememizi isteyen"
" bir açılır pencere alırız. IntelliSense'i kurmak için \"Yes\" i tıklayın."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:54
msgid "|C++ Configurations|"
msgstr "|C++ Yapılandırmaları|"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:57
msgid "Imports/Includes"
msgstr "Imports/Includes"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:77
msgid ""
"Our code needs to reference the components of WPILib that are used. In C++ "
"this is accomplished using ``#include`` statements; in Java it is done with "
"``import`` statements. The program references classes for ``Joystick`` (for "
"driving), ``PWMVictorSPX`` (for controlling motors), ``TimedRobot`` (the "
"base class used for the example), ``Timer`` (used for autonomous), "
"``DifferentialDrive`` (for connecting the joystick control to the motors), "
"and ``LiveWindow`` (C++ only)."
msgstr ""
"Kodumuzun kullanılan WPILib öğelerine başvurması gerekir. C++ 'da bu,  "
"``#include`` 'ifadeleri kullanılarak gerçekleştirilir; Java'da bu, "
"``import`` ifadeleriyle yapılır. Program,  ``Joystick`` (sürüş için), "
"``PWMVictorSPX`` (motorları kontrol etmek için), ``TimedRobot`` (örnek için "
"kullanılan base class), ``Timer`` (otonom için kullanılır. ), "
"``DifferentialDrive`` (joystick kontrolünü motorlara bağlamak için) ve "
"``LiveWindow`` (yalnızca C ++) sınıflarını referans alır."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:80
msgid "Defining the variables for our sample robot"
msgstr "Örnek robotumuz için değişkenleri - variables tanımlama"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:111
msgid ""
"The sample robot in our examples will have a joystick on USB port 0 for "
"arcade drive and two motors on PWM ports 0 and 1. Here we create objects of "
"type DifferentialDrive (m_robotDrive), Joystick (m_stick) and time "
"(m_timer). This section of the code does three things:"
msgstr ""
"Örneklerimizdeki deneme robotu, arcade sürücüsü için USB port 0'da bir "
"joystick'e ve PWM portu 0 ve 1'de iki motora sahip olacaktır. Burada, "
"DifferentialDrive (m_robotDrive), Joystick (m_stick) ve time (m_timer) tipi "
"objeler oluşturuyoruz. Kodun bu bölümü üç şey yapar:"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:113
msgid "Defines the variables as members of our Robot class."
msgstr "Değişkenleri Robot class - sınıfı üyeleri olarak tanımlar."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:114
msgid "Initializes the variables."
msgstr "Değişkenleri başlatır."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:116
msgid ""
"The variable initializations for C++ are in the ``private`` section at the "
"bottom of the program. This means they are private to the class (``Robot``)."
" The C++ code also sets the Motor Safety expiration to 0.1 seconds (the "
"drive will shut off if we don't give it a command every .1 seconds) and "
"starts the ``Timer`` used for autonomous."
msgstr ""
"C++ için değişken başlatmalar, programın altındaki ``private`` bölümdedir. "
"Bu, class (``Robot``)'a özel oldukları anlamına gelir. C++ kodu ayrıca Motor"
" Güvenliği sona erme süresini 0,1 saniyeye ayarlar (her .1 saniyede bir "
"komut vermezsek sürücü kapanır) ve otonom için kullanılan ``Timer`` "
"başlatır."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:119
msgid "Robot Initialization"
msgstr "Robot Başlatma"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:133
msgid ""
"The ``RobotInit`` method is run when the robot program is starting up, but "
"after the constructor. The ``RobotInit`` for our sample program gets a "
"pointer to the ``LiveWindow`` instance (this is used in the test method "
"discussed below). This method is omitted from the code, meaning the default "
"version will be run (if we wanted to run something here we could provide the"
" code above to override the default)."
msgstr ""
"``RobotInit`` methodu, robot programı başlatıldığında, ancak constructor - "
"kurucu işlemi sonrası çalıştırılır. Örnek programımız için ``RobotInit``, "
"``LiveWindow`` örneğine bir işaretçi alır (bu, aşağıda tartışılan test "
"yönteminde kullanılır). Bu yöntem koddan çıkarılır, yani varsayılan sürüm "
"çalıştırılır (burada bir şey çalıştırmak istersek, varsayılanı geçersiz "
"kılmak için yukarıdaki kodu kullanabiliriz)."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:136
msgid "Simple Autonomous Example"
msgstr "Basit Autonomous - Otonom Örneği"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:176
msgid ""
"The ``AutonomousInit`` method is run once each time the robot transitions to"
" autonomous from another mode. In this program, we reset the ``Timer`` and "
"then start it in this method."
msgstr ""
"``AutonomousInit`` yöntemi, robot başka bir moddan otonom moda her geçişinde"
" bir kez çalıştırılır. Bu programda ``Timer``ı sıfırlıyor ve ardından bu "
"method ile başlatıyoruz."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:178
msgid ""
"``AutonomousPeriodic`` is run once every period while the robot is in "
"autonomous mode. In the ``TimedRobot`` class the period is a fixed time, "
"which defaults to 20ms. In this example, the periodic code checks if the "
"timer is less than 2 seconds and if so, drives forward at half speed using "
"the ``ArcadeDrive`` method of the ``DifferentialDrive`` class. If more than "
"2 seconds has elapsed, the code stops the robot drive."
msgstr ""
"Robot otonom moddayken ``AutonomousPeriodic`` her periyotta bir kez "
"çalıştırılır. ``TimedRobot`` sınıfında periyot, varsayılan olarak 20ms olan "
"sabit bir zamandır. Bu örnekte, periyodik kod, zamanlayıcının 2 saniyeden az"
" olup olmadığını kontrol eder ve öyleyse, ``DifferentialDrive`` sınıfının "
"``ArcadeDrive`` methodunu kullanarak yarı hızda ilerler. 2 saniyeden fazla "
"bir süre geçtiyse, kod robot sürücüsünü durdurur."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:181
msgid "Joystick Control for teleoperation"
msgstr "Teleop Mode için Joystick Kontrolü"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:205
msgid ""
"Like in Autonomous, the Teleop mode has a ``TeleopInit`` and "
"``TeleopPeriodic`` function. In this example we don't have anything to do in"
" ``TeleopInit``, it is provided for illustration purposes only. In "
"``TeleopPeriodic``, the code uses the ``ArcadeDrive`` method to map the "
"Y-axis of the ``Joystick`` to forward/back motion of the drive motors and "
"the X-axis to turning motion."
msgstr ""
"Autonomous modda olduğu gibi, Teleop modunda da bir ``TeleopInit`` ve "
"``TeleopPeriodic`` fonksiyonu vardır. Bu örnekte ``TeleopInit`` ile "
"yapabileceğimiz bir şey yok, bu sadece örnekleme amacıyla sağlanmıştır.  "
"``TeleopPeriodic`` de kod,  ``Joystick`` in Y eksenini tahrik motorlarının "
"ileri / geri hareketine ve X eksenini dönüş hareketine eşlemek için "
"``ArcadeDrive`` methodunu kullanır."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:208
msgid "Test Mode"
msgstr "Test Mode"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:221
msgid ""
"Test Mode is used for testing robot functionality. Similar to "
"``TeleopInit``, the ``TestPeriodic`` is provided here for example."
msgstr ""
"Test Mode, robot işlevselliğini test etmek için kullanılır. ``TeleopInit`` e"
" benzer şekilde, ``TestPeriodic`` burada örnek olarak sağlanmıştır."

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:232
msgid "Deploying the Project to a Robot"
msgstr "Projeyi bir Robota Göndermek"

#: ../../frc-docs/source/docs/getting-started/running-a-benchtop/creating-benchtop-test-program-cpp-java.rst:234
msgid ""
"Please see the instructions :ref:`here <docs/software/vscode-overview"
"/deploying-robot-code:Building and Deploying Robot Code>` for deploying the "
"program onto a robot."
msgstr ""
"Programı bir robota yüklemek için lütfen talimatlara bakın: ref: "
":ref:`burada<docs/software/vscode-overview/deploying-robot-code:Building and"
" Deploying Robot Code>`."
