# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Andre Theberge <atheberge2@videotron.ca>, 2020
# Regis Bekale <rbekale@robotiquefirstquebec.org>, 2020
# Andy Chang, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-30 04:05+0000\n"
"PO-Revision-Date: 2020-04-25 02:05+0000\n"
"Last-Translator: Andy Chang, 2020\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:2
msgid "Generating Code from GRIP"
msgstr "Génération de code à partir de GRIP"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:4
msgid "GRIP Code Generation"
msgstr "Génération de code GRIP"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:5
msgid ""
"When running your vision algorithm on a small processor such as a roboRIO or"
" Raspberry PI it is encouraged to run OpenCV directly on the processor "
"without the overhead of GRIP. To facilitate this, GRIP can generate code in "
"C++, Java, and Python for the pipeline that you have created. This generated"
" code can be added to your robot project and called directly from your "
"existing robot code."
msgstr ""
"Lorsque vous exécutez votre algorithme de vision sur un petit processeur tel"
" qu'un roboRIO ou Raspberry PI, il est encouragé d'exécuter OpenCV "
"directement sur le processeur sans la surcharge de GRIP. Pour faciliter "
"cela, GRIP peut générer du code en C++, Java et Python pour le pipeline que "
"vous avez créé. Ce code généré peut être ajouté à votre projet de robot et "
"appelé directement à partir de votre code de robot existant."

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:9
msgid ""
"Input sources such as cameras or image directories and output steps such as "
"NetworkTables are not generated. Your code must supply images as OpenCV "
"mats. On the roboRIO, the CameraServer class supplies images in that format."
" For getting results you can just use generated getter methods for "
"retrieving the resultant values such as contour x and y values."
msgstr ""
"Les sources d'entrée telles que les caméras ou les répertoires d'images et "
"les étapes de sortie telles que NetworkTables ne sont pas générées. Votre "
"code doit fournir des images sous forme compatible avec OpenCV. Sur le "
"roboRIO, la classe CameraServer fournit des images dans ce format. Pour "
"obtenir des résultats, vous pouvez simplement utiliser des méthodes pour "
"récupérer les valeurs résultantes telles que les valeurs de contour x et y."

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:14
msgid "Generating Code"
msgstr "Génération de code"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:15
msgid ""
"To generate code, go to ``Tools > Generate Code``. This will bring up a save"
" dialog that lets you create a C++, Java, or Python class that performs the "
"steps in the GRIP pipeline."
msgstr ""
"Pour générer du code, allez dans ``Tools > Generate Code``.  Cela fera "
"apparaître une boîte de dialogue d'enregistrement qui vous permet de créer "
"une classe C++, Java ou Python qui exécute les étapes du pipeline GRIP."

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:20
msgid ""
"If generating code to be used in a pre-existing project, choose a relevant "
"directory to save the pipeline to."
msgstr ""
"Si vous générez du code à utiliser dans un projet préexistant, choisissez un"
" répertoire approprié dans lequel enregistrer le pipeline."

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:22
msgid ""
"**C++ Users**: the pipeline class is split into a header and implementation "
"file"
msgstr ""
"**Utilisateurs C++**: la classe du pipeline est divisée en un fichier d'en-"
"tête et un fichier d'implémentation"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:23
msgid ""
"**Java Users**: the generated class lacks a package declaration, so a "
"declaration should be added to match the directory where the file was saved."
msgstr ""
"**Utilisateurs Java**: la classe générée n'a pas de déclaration de package, "
"donc une déclaration doit être ajoutée pour correspondre au répertoire où le"
" fichier a été enregistré."

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:25
msgid ""
"**Python Users**: the module name will be identical to the class, so the "
"import statement will be something like ``from Pipeline import Pipeline``"
msgstr ""
"**Utilisateurs Python**: le nom du module sera identique à la classe, donc "
"l'instruction import sera quelque chose comme ``from Pipeline import "
"Pipeline``"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:29
msgid "Structure of the Generated Code"
msgstr "Structure du code généré"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:43
msgid "Running the Pipeline"
msgstr "Exécution du pipeline"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:44
msgid ""
"To run the Pipeline, call the process method with the sources (webcams, IP "
"camera, image file, etc) as arguments. This will expose the outputs of every"
" operation in the pipeline with the ``getFooOutput`` methods."
msgstr ""
"Pour exécuter le Pipeline, appelez la méthode du processus avec les sources "
"(webcams, caméra IP, fichier image, etc.) comme arguments. Cela rendra "
"disponible les sorties de chaque opération dans le pipeline avec les "
"méthodes ``getFooOutput``."

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:48
msgid "Getting the Results"
msgstr "Obtenir les résultats"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:49
msgid ""
"Users are able to the outputs of every step in the pipeline. The outputs of "
"these operations would be accessible through their respective accessors.  "
"For example:"
msgstr ""
"Les utilisateurs peuvent accéder aux sorties de chaque étape du pipeline. "
"Les résultats de ces opérations seraient accessibles via leurs accesseurs "
"respectifs. Par exemple:"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:53
#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:65
msgid "Operation"
msgstr "Opération"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:53
msgid "Java/C++ getter"
msgstr "Java/C++ getter"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:53
msgid "Python variable"
msgstr "Variable Python"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:55
msgid "RGB Threshold"
msgstr "Seuil RGB"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:55
msgid "``getRgbThresholdOutput``"
msgstr "``getRgbThresholdOutput``"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:55
msgid "``rgb_threshold_output``"
msgstr "``rgb_threshold_output``"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:56
#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:67
#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:68
#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:69
msgid "Blur"
msgstr "Flou (Blur)"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:56
msgid "``getBlurOutput``"
msgstr "``getBlurOutput``"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:56
msgid "``blur_output``"
msgstr "``blur_output``"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:57
msgid "CV Erode"
msgstr "Érosion (CV Erode)"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:57
msgid "``getCvErodeOutput``"
msgstr "``getCvErodeOutput``"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:57
msgid "``mcv_erode_output``"
msgstr "``mcv_erode_output``"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:58
msgid "Find Contours"
msgstr "Identifer les contours"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:58
msgid "``getFindContoursOutput``"
msgstr "``getFindContoursOutput``"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:58
msgid "``find_contours_output``"
msgstr "``find_contours_output``"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:59
msgid "Filter Contours"
msgstr "Filtrer les contours"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:59
msgid "``getFilterContoursOutput``"
msgstr "``getFilterContoursOutput``"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:59
msgid "``filter_contours_output``"
msgstr "``filter_contours_output``"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:62
msgid ""
"If an operation appears multiple times in the pipeline, the accessors for "
"those operations have the number of that operation:"
msgstr ""
"Si une opération apparaît plus d'une fois dans le pipeline, les accesseurs "
"de ces opérations identiques seront numérotés, en commençant par le chiffre "
"0 pour le premier accesseur :"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:65
msgid "Which appearance"
msgstr "Ordre d'apparition"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:65
msgid "Accessor"
msgstr "Accesseur"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:67
msgid "First"
msgstr "Première"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:67
msgid "``getBlur0Output``"
msgstr "``getBlur0Output``"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:68
msgid "Second"
msgstr "Deuxième"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:68
msgid "``getBlur1Output``"
msgstr "``getBlur1Output``"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:69
msgid "Third"
msgstr "Troisième"

#: ../../frc-docs/source/docs/software/vision-processing/grip/generating-code-from-grip.rst:69
msgid "``getBlur2Output``"
msgstr "``getBlur2Output``"
