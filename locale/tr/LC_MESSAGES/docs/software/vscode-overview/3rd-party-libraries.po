# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Demet Tumkaya <dtumkaya19@ku.edu.tr>, 2020
# Esra ÖZEMRE <esra.ozemre@tfo.k12.tr>, 2020
# Müfit ALKAYA <mufit.alkaya@tfo.k12.tr>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-02 04:04+0000\n"
"PO-Revision-Date: 2020-08-20 04:15+0000\n"
"Last-Translator: Müfit ALKAYA <mufit.alkaya@tfo.k12.tr>, 2021\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:2
msgid "3rd Party Libraries"
msgstr "3. Taraf Kütüphaneleri"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:4
msgid ""
"Teams that are not using parts provided in the KoP will likely need to "
"install external dependencies. Please view the below section to see "
"information on adding an external library."
msgstr ""
"KoP'ta sağlanan parçaları kullanmayan ekiplerin büyük olasılıkla harici "
"bağımlılıklar kurması gerekecektir. Harici kitaplık eklemeyle ilgili "
"bilgileri görmek için lütfen aşağıdaki bölümü inceleyin."

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:7
msgid "The Mechanism"
msgstr "Mekanizma"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:9
msgid ""
"In support of this effort NI (for LabVIEW) and FIRST/WPI (for Java/C++) have"
" developed mechanisms that should make it easy for vendors to plug their "
"code into the WPILib software and for teams to use that code once it has "
"been installed. A brief description of how the system works for each "
"language can be found below."
msgstr ""
"Bu çabayı desteklemek için NI (LabVIEW için) ve FIRST/WPI (Java/C++ için), "
"satıcıların kodlarını WPILib yazılımına eklemesini ve ekiplerin bu kodu "
"yüklendikten sonra kullanmasını kolaylaştıracak mekanizmalar geliştirmiştir."
" . Sistemin her dil için nasıl çalıştığına dair kısa bir açıklama aşağıda "
"bulunabilir."

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:12
msgid "The Mechanism - Java/C++"
msgstr "Mekanizma - Java/C++"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:14
msgid ""
"For Java and C++ a JSON file describing the vendor library is installed on "
"your system to ``~/wpilib/YYYY/vendordeps`` (where YYYY is the year and ~ is"
" ``C:\\Users\\Public`` on Windows). This can either be done by an offline "
"installer or the file can be fetched from an online location using the menu "
"item in Visual Studio Code. This file is then used from VS Code to add to "
"the library to each individual project. Vendor library information is "
"managed on a per-project basis to make sure that a project is always "
"pointing to a consistent version of a given vendor library. The libraries "
"themselves are placed in the Maven cache at "
"``C:\\Users\\Public\\wpilib\\YYYY\\maven``. Vendors can place a local copy "
"here with an offline installer (recommended) or require users to be online "
"for an initial build to fetch the library from a remote Maven location."
msgstr ""
"Java ve C++ için, satıcı kitaplığını açıklayan bir JSON dosyası sisteminize "
"`` ~/wpilib/YYYY/vendordeps``  olarak yüklenir (burada YYYY yıl ve ~, "
"Windows'ta `` C:\\ Users\\Public`` şeklindedir) . Bu, çevrimdışı bir "
"yükleyici tarafından yapılabilir veya dosya, Visual Studio Code'daki menü "
"öğesi kullanılarak çevrimiçi bir konumdan getirilebilir. Bu dosya daha sonra"
" VS Code'dan her bir projeye kitaplığa eklemek için kullanılır. Satıcı "
"kitaplığı bilgileri, bir projenin her zaman belirli bir satıcı kitaplığının "
"tutarlı bir sürümüne işaret ettiğinden emin olmak için proje bazında "
"yönetilir. Kitaplıkların kendileri "
"``C:\\Users\\Public\\wpilib\\YYYY\\maven`` konumunda Maven önbelleğine "
"yerleştirilir. Satıcılar, çevrimdışı bir yükleyiciyle buraya yerel bir kopya"
" yerleştirebilir (önerilir) veya kitaplığı uzak bir Maven konumundan "
"getirmek için kullanıcıların ilk derlemede çevrimiçi olmalarını isteyebilir."

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:16
msgid ""
"The JSON file allows specification of complex libraries with multiple "
"components (Java, C++, JNI, etc.) and also helps handle some complexities "
"related to simulation. Vendors choosing to provide a remote URL in the JSON "
"also enable users to check for updates from within VS Code."
msgstr ""
"JSON dosyası, birden çok bileşenle (Java, C ++, JNI vb.) Karmaşık "
"kitaplıkların belirtilmesine izin verir ve ayrıca simülasyonla ilgili bazı "
"karmaşıklıkların üstesinden gelmeye yardımcı olur. JSON'da bir uzak URL "
"sağlamayı seçen satıcılar, kullanıcıların VS Code içinden güncellemeleri "
"kontrol etmesine de olanak tanır."

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:21
msgid "The Mechanism - LabVIEW"
msgstr "Mekanizma - LabVIEW"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:23
msgid ""
"For LabVIEW teams, you may notice a few new Third Party items on various "
"palettes (specifically, one in :guilabel:`Actuators`, one in "
":guilabel:`Actuators` -> :guilabel:`Motor Control` labeled :guilabel:`CAN "
"Motor`, and one in :guilabel:`Sensors`). These correspond to folders in "
"``C:\\Program Files\\National Instruments\\LabVIEW YYYY\\vi.lib\\Rock "
"Robotics\\WPI\\Third Party`` where ``YYYY`` is the current year - 1. If it’s"
" 2020, the directory would be ``LabVIEW 2019``."
msgstr ""
"LabVIEW ekipleri için, çeşitli paletlerde birkaç yeni Üçüncü Taraf öğesi "
"fark edebilirsiniz (özellikle biri::guilabel:`Actuators` biri "
":guilabel:`Actuators` -> :guilabel:`Motor Control` etiketli::guilabel:`CAN "
"Motor` ve biri:  :guilabel:`Sensors`). Bunlar, ``C:\\Program Files\\National"
" Instruments\\LabVIEW YYYY\\vi.lib\\Rock Robotics\\WPI\\Third Party`` "
"içindeki klasörlere karşılık gelir; burada ``YYYY`` mevcut yıl anlamına "
"gelir - 1. 2020 ise, dizin ``LabVIEW 2019`` olacaktır."

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:25
msgid ""
"To use installed \"Third Party\" libraries, simply locate the VIs in one of "
"these 3 locations and drag them into your project as you would with any "
"other VI."
msgstr ""
"Yüklü \"Üçüncü Taraf\" kitaplıklarını kullanmak için, VI'leri bu 3 konumdan "
"birinde bulun ve diğer VI'larda olduğu gibi bunları projenize sürükleyin."

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:28
msgid "Managing VS Code Libraries"
msgstr "VS Code Kütüphaneleri Yönetme"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:31
msgid "Adding Offline Libraries"
msgstr "Çevrimdışı Kütüphane Ekleme"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:34
msgid "VS Code"
msgstr "VS Kodu"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:39
msgid ""
"To add a vendor library that has been installed by an offline installer, "
"press :kbd:`Ctrl+Shift+P` and type WPILib or click on the WPILib icon in the"
" top right to open the WPILib Command Palette and begin typing "
":guilabel:`Manage Vendor Libraries`, then select it from the menu. Select "
"the option to :guilabel:`Install new libraries (offline)`."
msgstr ""
"Çevrimdışı bir sağlayıcı tarafından kurulan bir satıcı kütüphanesini eklemek"
" için, şu tuşa basın: kbd:`Ctrl +Shift+P` ve WPILib yazın veya WPILib Komut "
"Paletini açmak için sağ üstteki WPILib simgesine tıklayın ve yazmaya "
"başlayın: :guilabel:`Manage Vendor Libraries`, ardından menüden  "
":guilabel:`Install new libraries (offline)` seçeneğini seçin."

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:44
msgid ""
"Select the desired libraries to add to the project by checking the box next "
"to each, then click :guilabel:`OK`. The JSON file will be copied to the "
"``vendordeps`` folder in the project, adding the library as a dependency to "
"the project."
msgstr ""
"Her birinin yanındaki kutuyu işaretleyerek projeye eklemek için istenen "
"kitaplıkları seçin ve ardından tıklayın :guilabel:`OK`. JSON dosyası, "
"kütüphaneyi projeye bağımlılık olarak ekleyerek projedeki ``vendordeps`` "
"klasörüne kopyalanacaktır."

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:47
msgid "Command-line"
msgstr "Komut satırı"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:49
msgid ""
"Adding a vendor library dependency from the vendor URL can also be done "
"through the command-line via a gradle task. Open a command-line instance at "
"the project root, and enter ``gradlew vendordep --url=<url>`` where "
"``<url>`` is the vendor JSON URL. This will add the vendor library "
"dependency JSON file to the ``vendordeps`` folder of the project. Vendor "
"libraries can be updated the same way."
msgstr ""
"Satıcı URL'sinden bir satıcı kitaplığı bağımlılığı eklemek, bir gradle "
"görevi aracılığıyla komut satırı aracılığıyla da yapılabilir. Proje kökünde "
"bir komut satırı örneği açın ve ``radlew vendordep --url =``  yazın; burada "
"`` , satıcının JSON URL'sidir. Bu, satıcı kitaplığı bağımlılığı JSON "
"dosyasını projenin `` vendordeps``  klasörüne ekleyecektir. Satıcı "
"kitaplıkları da aynı şekilde güncellenebilir."

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:51
msgid ""
"The ``vendordep`` gradle task can also fetch vendordep JSONs from the user "
"``wpilib`` folder. To do so, pass ``FRCLOCAL/Filename.json`` as the file "
"URL. For example, ``gradlew vendordep "
"--url=FRCLOCAL/WPILibNewCommands.json`` will fetch the JSON for the new "
"command-based framework."
msgstr ""
"``Vendordep`` gradle görevi, vendordep JSON'larını kullanıcı `` wpilib`` "
"klasöründen de alabilir. Bunu yapmak için, dosya URL'si olarak "
"``FRCLOCAL/Filename.json`` yazın. Örneğin, ``gradlew vendordep --url = "
"FRCLOCAL / WPILibNewCommands.json``, yeni komut tabanlı çerçeve için JSON'u "
"getirecektir."

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:54
msgid "Checking for Updates (Offline)"
msgstr "Güncellemeleri Kontrol Etme (Çevrimdışı)"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:56
msgid ""
"Dependencies are now version managed and done on a per-project bases. Even "
"if you have installed an updated library using an offline installer, you "
"will need to :guilabel:`Manage Vendor Libraries` and select :guilabel:`Check"
" for updates (offline)` for each project you wish to update."
msgstr ""
"Bağımlılıklar artık sürüm yönetiliyor ve proje bazında yapılıyor. Çevrimdışı"
" bir yükleyici kullanarak güncellenmiş bir kitaplık kurmuş olsanız bile, "
"şunları yapmanız gerekir :guilabel:`Manage Vendor Libraries`  ve güncellemek"
" istediğiniz her proje için :guilabel:`Check for updates (offline)` , "
"seçeneğini belirleyin."

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:59
msgid "Checking for Updates (Online)"
msgstr "Güncellemeleri Kontrol Etme (Çevrimiçi)"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:61
msgid ""
"Part of the JSON file that vendors may optionally populate is an online "
"update location. If a library has an appropriate location specified, running"
" :guilabel:`Check for updates (online)` will check if a newer version of the"
" library is available from the remote location."
msgstr ""
"Satıcıların isteğe bağlı olarak doldurabileceği JSON dosyasının bir kısmı, "
"çevrimiçi bir güncelleme konumudur. Bir kitaplıkta uygun bir konum "
"belirtilmişse, çalıştırarak :guilabel:`Check for updates (online)` , "
"kitaplığın daha yeni bir sürümünün uzak konumdan mevcut olup olmadığını "
"kontrol eder."

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:64
msgid "Removing a Library Dependency"
msgstr "Bir Kütüphane Destek Dosyasını Kaldırma"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:66
msgid ""
"To remove a library dependency from a project, select :guilabel:`Manage "
"Current Libraries` from the :guilabel:`Manage Vendor Libraries` menu, check "
"the box for any libraries to uninstall and click :guilabel:`OK`. These "
"libraries will be removed as dependencies from the project."
msgstr ""
"Bir projeden kütüphane bağımlılığını kaldırmak için:guilabel:`Manage Current"
" Libraries`   menüsünden :guilabel:`Manage Vendor Libraries` seçeneğini "
"seçin, kaldırılacak kitaplıklar için kutuyu işaretleyin ve tıklayın "
":guilabel:`OK`.  Bu kitaplıklar projeden bağımlılıklar olarak "
"kaldırılacaktır."

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:69
msgid "Libraries"
msgstr "Kütüphaneler"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:76
msgid ""
"`Copperforge LibCu Software Library "
"<https://copperforge.cc/docs/software/libcu/>`__ - Library for all "
"Copperforge devices including the Lasershark"
msgstr ""
"`Copperforge LibCu Software Library "
"<https://copperforge.cc/docs/software/libcu/>`__ - Lasershark dahil tüm "
"Copperforge aygıtları için kütüphane "

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:82
msgid ""
"`Digilent <https://reference.digilentinc.com/dmc-60c/getting-started>`__ - "
"DMC-60C library"
msgstr ""
"`Digilent <https://reference.digilentinc.com/dmc-60c/getting-started>`__ - "
"DMC-60C kütüphanesi"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:85
msgid ""
"`Playing With Fusion Driver "
"<https://www.playingwithfusion.com/docview.php?docid=1205>`__ - Library for "
"all PWF devices including the Venom motor/controller"
msgstr ""
"`Fusion Driver ile oynamak "
"<https://www.playingwithfusion.com/docview.php?docid=1205>`__- Venom "
"motor/kontrol cihazı dahil tüm PWF cihazları için kütüphane"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:88
msgid ""
"`Kauai Labs <https://pdocs.kauailabs.com/navx-mxp/software/roborio-"
"libraries/>`__ - Libraries for NavX-MXP, NavX-Micro, and Sensor Fusion"
msgstr ""
"`Kauai Labs <https://pdocs.kauailabs.com/navx-mxp/software/roborio-"
"libraries/>`__ - NavX-MXP, NavX-Micro, ve Sensor Fusion kütüphaneleri"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:94
msgid "Community Libraries"
msgstr "Topluluk Kütüphaneleri"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:97
msgid ""
"`PhotonVision "
"<https://docs.photonvision.org/en/latest/docs/programming/photonlib/adding-"
"vendordep.html>`_ - Library for PhotonVision CV software"
msgstr ""
"`PhotonVision "
"<https://docs.photonvision.org/en/latest/docs/programming/photonlib/adding-"
"vendordep.html>`_ - PhotonVision CV yazılımı için Kütüphane"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:100
msgid "WPILib Command Libraries"
msgstr "WPILib Komut Kütüphaneleri"

#: ../../frc-docs/source/docs/software/vscode-overview/3rd-party-libraries.rst:110
msgid ""
"To remove a library dependency from a project, select **Manage Current "
"Libraries** from the **Manage Vendor Libraries** menu, check the box for any"
" libraries to uninstall and click OK. These libraries will be removed as "
"dependencies from the project."
msgstr ""
"Bir projeden kütüphane destek dosyalarını kaldırmak için, **Manage Vendor "
"Libraries -Üretici Kütüphaneleri Yönetin** menüsünden **Manage Current "
"Libraries -Mevcut Kütüphaneleri Yönetin** seçeneğini seçin, kaldırılacak "
"kitaplıkların kutusunu işaretleyin ve Tamam'a tıklayın. Bu kitaplıklar "
"projeden destek dosyaları olarak kaldırılacaktır."
