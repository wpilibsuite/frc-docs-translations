# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Gibrán Verástegui <Gibranbasket1526@gmail.com>, 2020
# Diana Ramos <dianaracasas@gmail.com>, 2020
# Fernanda Reveles <fernanda.reveles.b@gmail.com>, 2021
# Emiliano Vargas <joseemilianohernandezvargas04@gmail.com>, 2021
# Paulina Maynez <paump22@hotmail.com>, 2021
# Austin Shalit <austinshalit@gmail.com>, 2021
# Fernando Soltero <fersg806@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-02 04:06+0000\n"
"PO-Revision-Date: 2020-04-25 02:02+0000\n"
"Last-Translator: Fernando Soltero <fersg806@gmail.com>, 2021\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:2
msgid "Structuring a Command-Based Robot Project"
msgstr "Estructuración de un proyecto de robot basado en comandos"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:4
msgid ""
"While users are free to use the command-based libraries however they like "
"(and advanced users are encouraged to do so), new users may want some "
"guidance on how to structure a basic command-based robot project."
msgstr ""
"Si bien los usuarios son libres de usar las bibliotecas basadas en comandos "
"como lo deseen (y se recomienda a los usuarios avanzados que lo hagan), los "
"nuevos usuarios pueden necesitar orientación sobre cómo estructurar un "
"proyecto de robot básico basado en comandos."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:6
msgid ""
"A standard template for a command-based robot project is included in the "
"WPILib examples repository (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/templates/commandbased>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/templates/commandbased>`__)."
" This section will walk users through the structure of this template."
msgstr ""
"En el repositorio de ejemplos de WPILib se incluye una plantilla estándar "
"para un proyecto de robot basado en comandos (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/templates/commandbased>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/templates/commandbased>`__)."
" Esta sección guiará a los usuarios a través de la estructura de esta "
"plantilla."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:8
msgid "The root package/directory generally will contain four classes:"
msgstr "El directorio / paquete raíz generalmente contendrá cuatro clases:"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:10
msgid ""
"``Main``, which is the main robot application (Java only). New users *should"
" not* touch this class. ``Robot``, which is responsible for the main control"
" flow of the robot code. ``RobotContainer``, which holds robot subsystems "
"and commands, and is where most of the declarative robot setup (e.g. button "
"bindings) is performed. ``Constants``, which holds globally-accessible "
"constants to be used throughout the robot."
msgstr ""
"``Main``, que es la aplicación principal del robot (solo Java). Los nuevos "
"usuarios * no deben * tocar esta clase. ``Robot``, que es responsable del "
"flujo de control principal del código del robot. ``RobotContainer``, que "
"contiene los subsistemas y comandos del robot, y es donde se realiza la "
"mayor parte de la configuración declarativa del robot (por ejemplo, enlaces "
"de botones).  ``Constants``, que contiene constantes accesibles globalmente "
"para su uso en todo el robot."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:12
msgid ""
"The root directory will also contain two sub-packages/sub-directories: "
"``Subsystems`` contains all user-defined subsystem classes. ``Commands`` "
"contains all user-defined command classes."
msgstr ""
"El directorio raíz también contendrá dos subpaquetes / subdirectorios: "
"``Subsystems``  contiene todas las clases de subsistemas definidas por el "
"usuario.``Commands`` contiene todas las clases de comandos definidas por el "
"usuario."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:15
msgid "Robot"
msgstr "Robot"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:17
msgid ""
"As ``Robot`` (`Java "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/templates/commandbased/Robot.java>`__,"
" `C++ (Header) "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/templates/commandbased/include/Robot.h>`__,"
" `C++ (Source) "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/templates/commandbased/cpp/Robot.cpp>`__)"
" is responsible for the program’s control flow, and command-based is an "
"declarative paradigm designed to minimize the amount of attention the user "
"has to pay to explicit program control flow, the ``Robot`` class of a "
"command-based project should be mostly empty. However, there are a few "
"important things that must be included"
msgstr ""
"Como ``Robot`` (`Java "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/templates/commandbased/Robot.java>`__,"
" `C++ (Header) "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/templates/commandbased/include/Robot.h>`__,"
" `C++ (Source) "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/templates/commandbased/cpp/Robot.cpp>`__)"
" es responsable del flujo de control del programa, y basado en comandos es "
"un paradigma declarativo diseñado para minimizar La cantidad de atención que"
" el usuario debe prestar al flujo de control explícito del programa, la "
"clase  ``Robot``  de un proyecto basado en comandos debe estar prácticamente"
" vacía. Sin embargo, hay algunas cosas importantes que deben incluirse"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:21
#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:35
#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:55
#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:75
#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:102
#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:122
#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:142
#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:162
msgid "Java"
msgstr "Java"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:29
msgid ""
"In Java, an instance of ``RobotContainer`` should be constructed during the "
"``robotInit()`` method - this is important, as most of the declarative robot"
" setup will be called from the ``RobotContainer`` constructor."
msgstr ""
"En Java, se debe construir una instancia de ``RobotContainer`` durante el "
"método ``robotInit()`` ; esto es importante, ya que la mayor parte de la "
"configuración declarativa del robot se llamará desde el constructor "
"``RobotContainer``."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:31
msgid ""
"In C++, this is not needed as RobotContainer is a value member and will be "
"constructed during the construction of ``Robot``."
msgstr ""
"En C++, esto no es necesario ya que RobotContainer es un miembro de valor y "
"se construirá durante la construcción de ``Robot``."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:43
#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:63
#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:83
#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:130
#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:150
#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:170
msgid "C++ (Source)"
msgstr "C++ (Fuente)"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:51
msgid ""
"The inclusion of the ``CommandScheduler.getInstance().run()`` call in the "
"``robotPeriodic()`` method is essential; without this call, the scheduler "
"will not execute any scheduled commands. Since ``TimedRobot`` runs with a "
"default main loop frequency of 50Hz, this is the frequency with which "
"periodic command and subsystem methods will be called. It is not recommended"
" for new users to call this method from anywhere else in their code."
msgstr ""
"La inclusión de la llamada ``CommandScheduler.getInstance().run()`` en el "
"método ``robotPeriodic()`` es esencial; sin esta llamada, el programador no "
"ejecutará ningún comando programado. Dado que ``TimedRobot`` se ejecuta con "
"una frecuencia de bucle principal predeterminada de 50 Hz, esta es la "
"frecuencia con la que se llamarán los comandos periódicos y los métodos de "
"subsistema. No se recomienda que los nuevos usuarios llamen a este método "
"desde cualquier otro lugar de su código."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:71
msgid ""
"The ``autonomousInit()`` method schedules an autonomous command returned by "
"the ``RobotContainer`` instance. The logic for selecting which autonomous "
"command to run can be handled inside of ``RobotContainer``."
msgstr ""
"El método ``autonomousInit()`` programa un comando autónomo devuelto por la "
"instancia de ``RobotContainer``. La lógica para seleccionar qué comando "
"autónomo ejecutar se puede manejar dentro de ``RobotContainer``."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:91
msgid ""
"The ``teleopInit()`` method cancels any still-running autonomous commands. "
"This is generally good practice."
msgstr ""
"El método ``teleopInit()`` cancela cualquier comando autónomo que aún se "
"esté ejecutando. En general, esta es una buena práctica."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:93
msgid ""
"Advanced users are free to add additional code to the various init and "
"periodic methods as they see fit; however, it should be noted that including"
" large amounts of imperative robot code in ``Robot.java`` is contrary to the"
" declarative design philosophy of the command-based paradigm, and can result"
" in confusingly-structured/disorganized code."
msgstr ""
"Los usuarios avanzados tienen la libertad de agregar código adicional a los "
"diversos métodos de inicio y periódicos como mejor les parezca; sin embargo,"
" debe tenerse en cuenta que incluir grandes cantidades de código de robot "
"imperativo en  ``Robot.java`` es contrario a la filosofía de diseño "
"declarativo del paradigma basado en comandos y puede resultar en un código "
"desorganizado o estructurado de manera confusa."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:96
msgid "RobotContainer"
msgstr "RobotContainer"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:98
msgid ""
"This class (`Java "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/templates/commandbased/RobotContainer.java>`__,"
" `C++ (Header) "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/templates/commandbased/include/RobotContainer.h>`__,"
" `C++ (Source) "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/templates/commandbased/cpp/RobotContainer.cpp>`__)"
" is where most of the setup for your command-based robot will take place. In"
" this class, you will define your robot’s subsystems and commands, bind "
"those commands to triggering events (such as buttons), and specify which "
"command you will run in your autonomous routine. There are a few aspects of "
"this class new users may want explanations for:"
msgstr ""
"Esta clase (`Java "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/templates/commandbased/RobotContainer.java>`"
" __, `C ++ (Encabezado) "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/templates/commandbased/include/RobotContainer.h>`"
" __, `C ++ (Fuente) "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/templates/commandbased/cpp/RobotContainer.cpp>`"
" __) es donde se llevará a cabo la mayor parte de la configuración de su "
"robot basado en comandos. En esta clase, definirá los subsistemas y comandos"
" de su robot, vinculará esos comandos a eventos de activación (como botones)"
" y especificará qué comando ejecutará en su rutina autónoma. Hay algunos "
"aspectos de esta clase para los que los nuevos usuarios pueden querer "
"explicaciones:"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:110
msgid "C++ (Header)"
msgstr "C++ (Encabezado)"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:118
msgid ""
"Notice that subsystems are declared as private fields in ``RobotContainer``."
" This is in stark contrast to the previous incarnation of the command-based "
"framework, but is much more-aligned with agreed-upon object-oriented best-"
"practices. If subsystems are declared as global variables, it allows the "
"user to access them from anywhere in the code. While this can make certain "
"things easier (for example, there would be no need to pass subsystems to "
"commands in order for those commands to access them), it makes the control "
"flow of the program much harder to keep track of as it is not immediately "
"obvious which parts of the code can change or be changed by which other "
"parts of the code. This also circumvents the ability of the resource-"
"management system to do its job, as ease-of-access makes it easy for users "
"to accidentally make conflicting calls to subsystem methods outside of the "
"resource-managed commands."
msgstr ""
"Tenga en cuenta que los subsistemas se declaran como campos privados en "
"``RobotContainer``. Esto está en marcado contraste con la encarnación "
"anterior del marco basado en comandos, pero está mucho más alineado con las "
"mejores prácticas orientadas a objetos acordadas. Si los subsistemas se "
"declaran como variables globales, permite al usuario acceder a ellos desde "
"cualquier parte del código. Si bien esto puede facilitar ciertas cosas (por "
"ejemplo, no habría necesidad de pasar subsistemas a comandos para que esos "
"comandos accedan a ellos), hace que el flujo de control del programa sea "
"mucho más difícil de rastrear, ya que no es inmediato. obvio qué partes del "
"código pueden cambiar o cambiarse por qué otras partes del código. Esto "
"también evita la capacidad del sistema de administración de recursos para "
"hacer su trabajo, ya que la facilidad de acceso facilita que los usuarios "
"realicen accidentalmente llamadas conflictivas a métodos del subsistema "
"fuera de los comandos administrados por recursos."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:138
msgid ""
"Since subsystems are declared as private members, they must be explicitly "
"passed to commands (a pattern called \"dependency injection\") in order for "
"those commands to call methods on them.  This is done here with "
"``ExampleCommand``, which is passed a pointer to an ``ExampleSubsystem``."
msgstr ""
"Dado que los subsistemas se declaran como miembros privados, deben pasarse "
"explícitamente a los comandos (un patrón llamado \"inyección de "
"dependencia\") para que esos comandos llamen a sus métodos. Esto se hace "
"aquí con ``ExampleCommand``, que se pasa un puntero a un "
"``ExampleSubsystem``."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:158
msgid ""
"As mentioned before, the ``RobotContainer()`` constructor is where most of "
"the declarative setup for the robot should take place, including button "
"bindings, configuring autonomous selectors, etc. If the constructor gets too"
" \"busy,\" users are encouraged to migrate code into separate subroutines "
"(such as the ``configureButtonBindings()`` method included by default) which"
" are called from the constructor."
msgstr ""
"Como se mencionó anteriormente, el constructor ``RobotContainer()`` es donde"
" la mayor parte de la configuración declarativa para el robot debe tener "
"lugar, incluyendo los enlaces de los botones, la configuración de los "
"selectores autónomos, etc. Si el constructor está demasiado \"ocupado\", se "
"anima a los usuarios a migrar el código a subrutinas separadas (como el "
"método ``configureButtonBindings()`` incluido por defecto) que se llaman "
"desde el constructor."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:178
msgid ""
"Finally, the ``getAutonomousCommand()`` method provides a convenient way for"
" users to send their selected autonomous command to the main ``Robot`` class"
" (which needs access to it to schedule it when autonomous starts)."
msgstr ""
"Finalmente, el método ``getAutonomousCommand()`` proporciona una forma "
"conveniente para que los usuarios envíen su comando autónomo seleccionado a "
"la clase principal de ``Robot`` (que necesita acceso a él para programarlo "
"cuando se inicie autónomo)."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:181
msgid "Constants"
msgstr "Constants"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:183
msgid ""
"The ``Constants`` class (`Java "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/templates/commandbased/Constants.java>`__,"
" `C++ (Header) "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/templates/commandbased/include/Constants.h>`__)"
" (in C++ this is not a class, but simply a header file in which several "
"namespaces are defined) is where globally-accessible robot constants (such "
"as speeds, unit conversion factors, PID gains, and sensor/motor ports) can "
"be stored. It is recommended that users separate these constants into "
"individual inner classes corresponding to subsystems or robot modes, to keep"
" variable names shorter."
msgstr ""
"La clase ``Constants`` (`Java "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/templates/commandbased/Constants.java>`__,"
" `C++ (Header) "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/templates/commandbased/include/Constants.h>`__)"
" (en C++ no es una clase, sino simplemente un archivo de cabecera en el que "
"se definen varios espacios de nombres) es donde pueden almacenarse las "
"constantes del robot de acceso global (como las velocidades, los factores de"
" conversión de unidades, las ganancias PID y los puertos de "
"sensores/motores). Se recomienda que los usuarios separen estas constantes "
"en clases internas individuales correspondientes a los subsistemas o modos "
"del robot, para mantener los nombres de las variables más cortos."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:185
msgid ""
"In Java, all constants should be declared ``public static final`` so that "
"they are globally accessible and cannot be changed.  In C++, all constants "
"should be ``constexpr``."
msgstr ""
"En Java, todas las constantes deben declararse como ``public static final`` "
"para que sean accesibles globalmente y no se puedan cambiar. En C++, todas "
"las constantes deben ser ``constexpr``."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:187
msgid ""
"For more illustrative examples of what a ``constants`` class should look "
"like in practice, see those of the various command-based example projects:"
msgstr ""
"Para obtener más ejemplos ilustrativos de cómo debería verse una clase de "
"``constants`` en la práctica, consulte los de varios proyectos de ejemplo "
"basados en comandos:"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:189
msgid ""
"FrisbeeBot (`Java "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/frisbeebot/Constants.java>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/examples/Frisbeebot/include/Constants.h>`__)"
msgstr ""
"FrisbeeBot (`Java "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/frisbeebot/Constants.java>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/examples/Frisbeebot/include/Constants.h>`__)"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:190
msgid ""
"GyroDriveCommands (`Java "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/gyrodrivecommands/Constants.java>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/examples/GyroDriveCommands/include/Constants.h>`__)"
msgstr ""
"Comandos de accionamiento del giroscopio (`Java "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/gyrodrivecommands/Constants.java>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/examples/GyroDriveCommands/include/Constants.h>`__)"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:191
msgid ""
"Hatchbot (`Java "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/hatchbottraditional/Constants.java>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/examples/HatchbotTraditional/include/Constants.h>`__)"
msgstr ""
"Hatchbot (`Java "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/hatchbottraditional/Constants.java>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/blob/main/wpilibcExamples/src/main/cpp/examples/HatchbotTraditional/include/Constants.h>`__)"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:193
msgid ""
"In Java, it is recommended that the constants be used from other classes by "
"statically importing the necessary inner class. An ``import static`` "
"statement imports the static namespace of a class into the class in which "
"you are working, so that any ``static`` constants can be referenced directly"
" as if they had been defined in that class.  In C++, the same effect can be "
"attained with ``using namespace``:"
msgstr ""
"En Java, se recomienda que las constantes se utilicen de otras clases "
"importando estáticamente la clase interna necesaria. Una declaración de "
"``import static`` importa el espacio de nombres estático de una clase en la "
"clase en la que está trabajando, de modo que cualquier constante ``static`` "
"pueda ser referenciada directamente como si se hubiera definido en esa "
"clase. En C++, el mismo efecto se puede lograr con ``using namespace``:"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:206
msgid "Subsystems"
msgstr "Subsistemas"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:208
msgid "User-defined subsystems should go in this package/directory."
msgstr ""
"Los subsistemas definidos por el usuario deben ir en este paquete / "
"directorio."

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:211
msgid "Commands"
msgstr "Comandos"

#: ../../frc-docs/source/docs/software/commandbased/structuring-command-based-project.rst:213
msgid "User-defined commands should go in this package/directory."
msgstr ""
"Los comandos definidos por el usuario deben ir en este paquete / directorio."
