# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Esra özemre <esra.ozemre@tfo.k12.tr>, 2020
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-05 04:29+0000\n"
"PO-Revision-Date: 2020-12-16 04:21+0000\n"
"Last-Translator: Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2021\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/updating-drivetrain-model.rst:2
msgid "Step 3: Updating the Drivetrain Model"
msgstr "Adım 3: Drivetrain Modelini Güncelleme"

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/updating-drivetrain-model.rst:3
msgid ""
"Now that the drivetrain model has been made, it needs to be updated "
"periodically with the latest motor voltage commands. It is recommended to do"
" this step in a separate ``simulationPeriodic()`` / ``SimulationPeriodic()``"
" method inside your subsystem and only call this method in simulation."
msgstr ""
"Aktarma organı modeli yapıldığına göre, en son motor voltaj komutlarıyla "
"periyodik olarak güncellenmesi gerekiyor. Bu adımı alt sisteminizin içinde "
"ayrı bir ``simulationPeriodic()`` / ``SimulationPeriodic()`` yönteminde "
"yapmanız ve bu yöntemi yalnızca simülasyonda çağırmanız önerilir."

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/updating-drivetrain-model.rst:5
msgid ""
"If you are using the command-based framework, every subsystem that extends "
"``SubsystemBase`` has a ``simulationPeriodic()`` / ``SimulationPeriodic()`` "
"which can be overridden. This method is automatically run only during "
"simulation. If you are not using the command-based library, make sure you "
"call your simulation method inside the overridden ``simulationPeriodic()`` /"
" ``SimulationPeriodic()`` of the main ``Robot`` class. These periodic "
"methods are also automatically called only during simulation."
msgstr ""
"Komut tabanlı çerçeveyi kullanıyorsanız, ``SubsystemBase``  i genişleten her"
" alt sistemin geçersiz kılınabilen bir ``simulationPeriodic()`` / "
"``SimulationPeriodic()`` vardır. Bu yöntem otomatik olarak yalnızca "
"simülasyon sırasında çalıştırılır. Komut tabanlı kitaplığı kullanmıyorsanız,"
" simülasyon yönteminizi ana `` Robot '' sınıfının geçersiz kılınan "
"``simulationPeriodic()`` / ``SimulationPeriodic()`` içinde çağırdığınızdan "
"emin olun. Bu periyodik yöntemler ayrıca otomatik olarak yalnızca simülasyon"
" sırasında çağrılır."

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/updating-drivetrain-model.rst:7
msgid "There are three main steps to updating the model:"
msgstr "Modeli güncellemenin üç ana adımı vardır:"

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/updating-drivetrain-model.rst:9
msgid ""
"Set the :term:`input` of the drivetrain model. These are the motor voltages "
"from the two sides of the drivetrain."
msgstr ""
"Drivetrain sistemi modelinin :term:`input` değerini ayarlayın. Bunlar, "
"drivetrainin  iki tarafından gelen motor voltajlarıdır."

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/updating-drivetrain-model.rst:10
msgid ""
"Advance the model forward in time by the nominal periodic timestep (Usually "
"20 ms). This updates all of the drivetrain's states (i.e. pose, encoder "
"positions and velocities) as if 20 ms had passed."
msgstr ""
"Modeli, nominal periyodik zaman adımı (Genellikle 20 ms) ile zamanda ileri "
"doğru ilerletin. Bu, tüm drivestation durumlarını (yani poz, kodlayıcı "
"konumları ve hızları) 20 ms geçmiş gibi günceller."

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/updating-drivetrain-model.rst:11
msgid ""
"Update simulated sensors with new positions, velocities, and angles to use "
"in other places."
msgstr ""
"Simüle edilmiş sensörleri başka yerlerde kullanmak için yeni konumlar, "
"hızlar ve açılarla güncelleyin."

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/updating-drivetrain-model.rst:71
msgid ""
"If the right side of your drivetrain is inverted, you MUST negate the right "
"voltage in the ``SetInputs()`` call to ensure that positive voltages "
"correspond to forward movement."
msgstr ""
"Drivetrainınızın  sağ tarafı ters çevrilmişse, pozitif voltajların ileri "
"harekete karşılık geldiğinden emin olmak için ``SetInputs()`` çağrısında "
"doğru voltajı sıfırlamanız GEREKİR."

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/updating-drivetrain-model.rst:73
msgid ""
"Because the drivetrain simulator model returns positions and velocities in "
"meters and m/s respectively, these must be converted to encoder ticks and "
"ticks/s when calling ``SetDistance()`` and ``SetRate()``. Alternatively, you"
" can configure ``SetDistancePerPulse`` on the encoders to have the "
"``Encoder`` object take care of this automatically -- this is the approach "
"that is taken in the example above."
msgstr ""
"Drivetrain  simülatörü modeli sırasıyla metre ve m / s cinsinden konumları "
"ve hızları döndürdüğü için, bunlar  ``SetDistance()``  ve ``SetRate()`` "
"çağrılırken kodlayıcı işaretlerine ve işaretlere dönüştürülmelidir. "
"Alternatif olarak, ``Encoder`` nesnesinin bunu otomatik olarak halletmesi "
"için kodlayıcılarda ``SetDistancePerPulse`` yapılandırabilirsiniz - "
"yukarıdaki örnekte uygulanan yaklaşım budur."

#: ../../frc-docs/source/docs/software/examples-tutorials/drivesim-tutorial/updating-drivetrain-model.rst:75
msgid ""
"Now that the simulated encoder positions, velocities, and gyroscope angles "
"have been set, you can call ``m_leftEncoder.GetDistance()``, etc. in your "
"robot code as normal and it will behave exactly like it would on a real "
"robot. This involves performing odometry calculations, running velocity PID "
"feedback loops for trajectory tracking, etc."
msgstr ""
"Simüle edilmiş kodlayıcı konumları, hızları ve jiroskop açıları "
"ayarlandığına göre artık robot kodunuzda ``m_leftEncoder.GetDistance()``, "
"vb. Çağırabilirsiniz ve tam olarak gerçek bir robotta olduğu gibi "
"davranacaktır. Bu, odometri hesaplamaları yapmayı, yörünge izleme için hız "
"PID geri bildirim döngülerini çalıştırmayı, vb. İçerir."
