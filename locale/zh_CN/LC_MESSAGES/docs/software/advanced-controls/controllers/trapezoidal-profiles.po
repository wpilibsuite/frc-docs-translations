# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 楚涵 张 <zhangchuhan1210@126.com>, 2020
# Yitong Zhao <lucius300er@outlook.com>, 2021
# Team 5308 <team5308@163.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 04:04+0000\n"
"PO-Revision-Date: 2020-04-25 02:01+0000\n"
"Last-Translator: Team 5308 <team5308@163.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:2
msgid "Trapezoidal Motion Profiles in WPILib"
msgstr "WPILib中的梯形运动轮廓"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:4
msgid "Todo"
msgstr "待办事项"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:4
msgid "link to conceptual motion profiling article"
msgstr "链接到概念性运动分析文章"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:6
msgid ""
"This article covers the in-code generation of trapezoidal motion profiles.  "
"Documentation describing the involved concepts in more detail is "
"forthcoming."
msgstr "本文介绍了梯形运动剖面的代码生成。文档将更详细地描述所涉及的概念。"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:8
msgid ""
"For a guide on implementing the ``TrapezoidProfile`` class in the "
":ref:`command-based framework <docs/software/commandbased/what-is-command-"
"based:What Is \"Command-Based\" Programming?>` framework, see "
":ref:`docs/software/commandbased/profile-subsystems-commands:Motion "
"Profiling through TrapezoidProfileSubsystems and TrapezoidProfileCommands`."
msgstr ""
"有关在基于命令的框架:ref:`command-based framework <docs/software/commandbased/what-is-"
"command-based:What Is \"Command-Based\" Programming?>` , 请参阅 "
":ref:`docs/software/commandbased/profile-subsystems-commands:Motion "
"Profiling through TrapezoidProfileSubsystems and TrapezoidProfileCommands`."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:10
msgid ""
"The ``TrapezoidProfile`` class, used on its own, is most useful when "
"composed with a custom controller (such as a \"smart\" motor controller with"
" a built-in PID functionality).  To integrate it with a WPILib "
"``PIDController``, see :doc:`profiled-pidcontroller`."
msgstr ""
"单独使用的“ "
"TrapezoidProfile”类在与自定义控制器（例如具有内置PID功能的“智能”电机控制器）组合使用时最有用。要将其与WPILib的PIDController集成，请参阅"
" :doc:`profiled-pidcontroller`."

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:12
msgid ""
"While feedforward and feedback control offer convenient ways to achieve a "
"given setpoint, we are often still faced with the problem of generating "
"setpoints for our mechanisms.  While the naive approach of immediately "
"commanding a mechanism to its desired state may work, it is often "
"suboptimal.  To improve the handling of our mechanisms, we often wish to "
"command mechanisms to a *sequence* of setpoints that smoothly interpolate "
"between its current state, and its desired goal state."
msgstr ""
"尽管前馈和反馈控制提供了实现给定设定值的便捷方法，但我们仍然经常面临为我们的机构生成设定值的问题。尽管天真地立即将某种机制控制到所需状态的方法可能会起作用，但它通常不是最佳的。为了改善对机制的处理，我们通常希望命令机制达到一定的“设定值”序列，以便在其当前状态和所需目标状态之间平滑地内插。"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:17
msgid "Creating a TrapezoidProfile"
msgstr "创建梯形轮廓"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:19
msgid ""
"In C++, the ``TrapezoidProfile`` class is templated on the unit type used "
"for distance measurements, which may be angular or linear.  The passed-in "
"values *must* have units consistent with the distance units, or a compile-"
"time error will be thrown.  For more information on C++ units, see "
":ref:`docs/software/basic-programming/cpp-units:The C++ Units Library`."
msgstr ""
"在C ++中，“ "
"TrapezoidProfile”类在用于距离测量的单位类型（可能是角度的或线性的）上模板化。传入的值*必须*具有与距离单位一致的单位，否则将引发编译时错误。有关C"
" ++单元的更多信息，请参阅：docs / software / basic-programming / cpp-units：C ++单元库。"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:22
msgid "Constraints"
msgstr "约束条件"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:24
msgid ""
"The various :ref:`feedforward helper classes <docs/software/advanced-"
"controls/controllers/feedforward:Feedforward Control in WPILib>` provide "
"methods for calculating the maximum simultaneously-achievable velocity and "
"acceleration of a mechanism.  These can be very useful for calculating "
"appropriate motion constraints for your ``TrapezoidProfile``."
msgstr ""
"各种前馈帮助类 :ref:`feedforward helper classes <docs/software/advanced-"
"controls/controllers/feedforward:Feedforward Control in WPILib>` "
"提供了用于计算最大同时可达到的速度和机构加速度的方法。这些对于为您的``TrapezoidProfile''计算适当的运动约束非常有用。"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:45
msgid "Start and End States"
msgstr "起始和结束状态"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:64
msgid "Putting It All Together"
msgstr "汇总"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:66
msgid ""
"C++ is often able to infer the type of the inner classes, and thus a simple "
"initializer list (without the class name) can be sent as a parameter.  The "
"full class names are included in the example below for clarity."
msgstr "C ++通常能够推断内部类的类型，因此可以将简单的初始化列表（没有类名）作为参数发送。为了清楚起见，完整的类名包含在下面的示例中。"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:68
msgid ""
"Now that we know how to create a set of constraints and the desired "
"start/end states, we are ready to create our motion profile.  The "
"``TrapezoidProfile`` constructor takes 3 parameters, in order: the "
"constraints, the goal state, and the initial state."
msgstr ""
"既然我们知道如何创建一组约束和所需的开始/结束状态，我们就可以创建运动轮廓了。 "
"TrapezoidProfile构造函数按顺序接受3个参数：约束，目标状态和初始状态。"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:96
msgid "Using a ``TrapezoidProfile``"
msgstr "使用``TrapezoidProfile``"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:99
msgid "Sampling the Profile"
msgstr "采样配置文件"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:101
msgid ""
"Once we've created a ``TrapezoidProfile``, using it is very simple: to get "
"the profile state at the given time after the profile has started, call the "
"``calculate()`` method:"
msgstr ""
"创建了“ TrapezoidProfile”后，使用起来非常简单：要在配置文件启动后的给定时间获取配置文件状态，请调用calculate（）方法："

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:116
msgid "Using the State"
msgstr "使用状态"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:118
msgid ""
"The ``calculate`` method returns a ``TrapezoidProfile.State`` class (the "
"same one that was used to specify the initial/end states when constructing "
"the profile).  To use this for actual control, simply pass the contained "
"position and velocity values to whatever controller you wish (for example, a"
" PIDController):"
msgstr ""
"calculate方法返回一个TrapezoidProfile.State类（在构造配置文件时用于指定初始/结束状态的类）。要将其用于实际控制，只需将包含的位置和速度值传递到所需的任何控制器（例如PIDController）："

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:133
msgid "Complete Usage Example"
msgstr "完整用法示例"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:135
msgid ""
"In this example, the profile is re-computed every timestep.  This is a "
"somewhat different usage technique than is detailed above, but works "
"according to the same principles - the profile is sampled at at a time "
"corresponding to the loop period to get the setpoint for the next loop "
"iteration."
msgstr ""
"在此示例中，概要文件在每个时间步都被重新计算。这是一种与上面详细介绍的用法有所不同的使用技术，但是根据相同的原理工作-"
"在对应于循环周期的时间对配置文件进行采样，以获取下一次循环迭代的设定值。"

#: ../../frc-docs/source/docs/software/advanced-controls/controllers/trapezoidal-profiles.rst:137
msgid ""
"A more complete example of ``TrapezoidProfile`` usage is provided in the "
"ElevatorTrapezoidProfile example project (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/elevatortrapezoidprofile>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/ElevatorTrapezoidProfile/cpp>`__):"
msgstr ""
"在ElevatorTrapezoidProfile示例项目中提供了更完整的``TrapezoidProfile''用法示例（`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/elevatortrapezoidprofile>`__，`C"
" ++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/ElevatorTrapezoidProfile/cpp>`__）："
