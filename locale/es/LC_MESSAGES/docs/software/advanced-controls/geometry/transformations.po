# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Luis Martinez <lamartinezr@miners.utep.edu>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 04:04+0000\n"
"PO-Revision-Date: 2020-06-26 02:40+0000\n"
"Last-Translator: Luis Martinez <lamartinezr@miners.utep.edu>, 2020\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:2
msgid "Transformations"
msgstr "Transformaciones"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:5
msgid "Translation2d"
msgstr "Translation2d"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:7
msgid ""
"Operations on a ``Translation2d`` perform operations to the vector "
"represented by the ``Translation2d``."
msgstr ""
"Las operaciones en un ``Translation2d`` llevan a cabo operaciones en el "
"vector representado por ``Translation2d``."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:9
msgid ""
"Addition: Addition between two ``Translation2d`` a and b can be performed "
"using ``plus`` in Java, or the ``+`` operator in C++. Addition adds the two "
"vectors."
msgstr ""
"Adición: La adición ente 2 ``Translation2d`` a y b se puede lograr usando "
"``plus`` en Java, o el operador ``+`` en C++. Adición suma los 2 vectores."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:10
msgid ""
"Subtraction: Subtraction between two ``Translation2d`` can be performed "
"using ``minus`` in Java, or the binary ``-`` operator in C++. Subtraction "
"subtracts the two vectors."
msgstr ""
"Substracción: Substracción entre dos ``Translation2d`` puede lograrse usando"
" ``minus`` en Java, o el operador binario ``-`` en C++. Substracción resta "
"los dos vectores."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:11
msgid ""
"Multiplication: Multiplication of a ``Translation2d`` and a scalar can be "
"performed using ``times`` in Java, or the ``*`` operator in C++. This "
"multiplies the vector by the scalar."
msgstr ""
"Multiplicación: La multiplicación de un ``Translation2d`` y un escalar puede"
" lograrse usando ``times`` en Java el operador ``*`` en C++. Esto multiplica"
" el vector por el escalar."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:12
msgid ""
"Division: Division of a ``Translation2d`` and a scalar can be performed "
"using ``div`` in Java, or the ``/`` operator in C++. This divides the vector"
" by the scalar."
msgstr ""
"División: La división de un ``Translation2d`` y un escalar puede lograrse "
"usando ``div`` en Java, o el operador ``/`` en C++. Esto divide el vector "
"entre el escalar."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:13
msgid ""
"Rotation: Rotation of a ``Translation2d`` by a counter-clockwise rotation "
":math:`\\theta` about the origin can be performed by using ``rotateBy``. "
"This is equivalent to multiplying the vector by the matrix "
":math:`\\begin{bmatrix} cos\\theta & -sin\\theta \\\\ sin\\theta & "
"cos\\theta \\end{bmatrix}`"
msgstr ""
"Rotación: La rotación de un ``Translation2d`` por una rotación  contraria a "
"las manecillas del reloj :math:`\\theta` sobre el origen puede ser logrado "
"al usar ``rotateBy``. Esto es equivalente a multiplicar el vector por la "
"matriz :math:`\\begin{bmatrix} cos\\theta & -sin\\theta \\\\ sin\\theta & "
"cos\\theta \\end{bmatrix}`"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:14
msgid ""
"Additionally, you can rotate a ``Translation2d`` by 180 degrees by using "
"``unaryMinus`` in Java, or the unary ``-`` operator in C++."
msgstr ""
"Adicionalmente, usted puede rotar un ``Translation2d`` 180 grados al usar "
"``unaryMinus`` en Java, o el operador unario ``-`` en C++."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:17
msgid "Rotation2d"
msgstr "Rotation2d"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:19
msgid ""
"Transformations for ``Rotation2d`` are just arithmetic operations on the "
"angle measure represented by the ``Rotation2d``."
msgstr ""
"Las transformaciones para ``Rotation2d`` son solo operaciones aritméticas en"
" la medida del ángulo representadas por ``Rotation2d``."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:21
msgid ""
"``plus`` (Java) or ``+`` (C++): Adds the rotation component of ``other`` to "
"this ``Rotation2d``'s rotation component"
msgstr ""
"``plus`` (Java) o ``+`` (C++): suma el componente de rotación de ``other`` "
"al componente de rotación de éste``Rotation2d``."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:22
msgid ""
"``minus`` (Java) or binary ``-`` (C++): Subtracts the rotation component of "
"``other`` to this ``Rotation2d``'s rotation component"
msgstr ""
"``minus`` (Java) o el binario ``-`` (C++): Sustrae el componente de rotación"
" de ``other`` al componente de rotación de éste ``Rotation2d``."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:23
msgid ""
"``unaryMinus`` (Java) or unary ``-`` (C++): Multiplies the rotation "
"component by a scalar of -1."
msgstr ""
"``unaryMinus`` (Java) o el unario ``-`` (C++): Multiplica el componente de "
"rotación por un escalar de -1."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:24
msgid ""
"``times`` (Java) or ``*`` (C++) : Multiplies the rotation component by a "
"scalar."
msgstr ""
"``times`` (Java) o ``*`` (C++) : Multiplica el componente de rotación por un"
" escalar."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:27
msgid "Transform2d and Twist2d"
msgstr "Transform2d y Twist2d"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:31
msgid ""
"``Transform2d`` represents a **relative** transformation. It has an "
"translation and a rotation component. Transforming a ``Pose2d`` by a "
"``Transform2d`` rotates the translation component of the transform by the "
"rotation of the pose, and then adds the rotated translation component and "
"the rotation component to the pose. In other words, "
"``Pose2d.plus(Transform2d)`` returns :math:`\\begin{bmatrix} x_p \\\\ y_p "
"\\\\ \\theta_p \\end{bmatrix}+\\begin{bmatrix} cos\\theta_p & -sin\\theta_p "
"& 0 \\\\ sin\\theta_p & cos\\theta_p & 0 \\\\ 0 & 0 & 1 "
"\\end{bmatrix}\\begin{bmatrix}x_t \\\\ y_t \\\\ \\theta_t \\end{bmatrix}`"
msgstr ""
"``Transform2d`` representa una transformación **relativa**. Tiene un "
"componente de rotación y traslación. Transformar un ``Pose2d`` por un "
"``Transform2d`` rota el componente de traslación de la transformación por la"
" rotación de la pose, y entonces suma el componente de traslación y el "
"componente de rotación de la pose. En otras palabras, "
"``Pose2d.plus(Transform2d)`` regresa  :math:`\\begin{bmatrix} x_p \\\\ y_p "
"\\\\ \\theta_p \\end{bmatrix}+\\begin{bmatrix} cos\\theta_p & -sin\\theta_p "
"& 0 \\\\ sin\\theta_p & cos\\theta_p & 0 \\\\ 0 & 0 & 1 "
"\\end{bmatrix}\\begin{bmatrix}x_t \\\\ y_t \\\\ \\theta_t \\end{bmatrix}`"

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:33
msgid ""
"``Twist2d`` represents a change in distance along an arc. Usually, this "
"class is used to represent the movement of a drivetrain, where the x "
"component is the forward distance driven, the y component is the distance "
"driven to the side (left positive), and the :math:`\\theta` component is the"
" change in heading. The underlying math behind finding the pose exponential "
"(new pose after moving the pose forward along the curvature of the twist) "
"can be found `here <https://file.tavsys.net/control/controls-engineering-in-"
"frc.pdf>`_ in chapter 10."
msgstr ""
"``Twist2d`` representa un cambio en distancia a través de un arco, "
"Usualmente, esta clase es usada para representar el movimiento de un tren "
"motriz, donde el componente x es la distancia frontal manejada, el "
"componente y es la distancia manejada hacia un lado (Izquierda positiva), y "
"el componente :math:`\\theta` es el cambio de rumbo, La matemática "
"subyacente detrás de encontrar la pose exponencial (Posición nueva tras "
"moverse de frente a traves de la curvatura del giro) puede ser encontrada "
"`aquí <https://file.tavsys.net/control/controls-engineering-in-frc.pdf>`_ en"
" el capítulo 10."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:35
msgid ""
"For nonholonomic drivetrains, the y component of a ``Twist2d`` should always"
" be 0."
msgstr ""
"Para trenes motrices no holonómicos, el componente y de ``Twist2d`` debe "
"siempre ser 0."

#: ../../frc-docs/source/docs/software/advanced-controls/geometry/transformations.rst:37
msgid ""
"Both classes can be used to estimate robot location. Twist2d is used in "
"WPILib's odometry classes to update the robot's pose based on movement, "
"while Transform2d can be used to estimate the robot's global position from "
"vision data."
msgstr ""
"Ambas clases pueden ser usadas para estimar la posición del robot. Twist2d "
"es usado en las clases odométicas de WPILib para actualizar la pose del "
"robot basado en movimiento, mientras que Transform2d puede ser usado para "
"estimar la posición global del robot por los datos de visión."
