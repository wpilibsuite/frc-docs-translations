# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Arhan Ünay <arhanyo@gmail.com>, 2020
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020
# Müfit ALKAYA_3390 <mufit.alkaya@tfo.k12.tr>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-02-28 16:18+0000\n"
"PO-Revision-Date: 2020-04-25 02:03+0000\n"
"Last-Translator: Müfit ALKAYA_3390 <mufit.alkaya@tfo.k12.tr>, 2021\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:2
msgid "Mecanum Drive Odometry"
msgstr "Mecanum Sürüş Odometrisi"

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:3
msgid ""
"A user can use the mecanum drive kinematics classes in order to perform "
":ref:`odometry <docs/software/kinematics-and-odometry/intro-and-chassis-"
"speeds:What is odometry?>`. WPILib contains a ``MecanumDriveOdometry`` class"
" that can be used to track the position of a mecanum drive robot on the "
"field."
msgstr ""
"Bir kullanıcı, aşağıdakileri gerçekleştirmek için mecanum drive kinematics -"
" mecanum sürücü kinematik sınıflarını kullanabilir :ref:`odometry "
"<docs/software/kinematics-and-odometry/intro-and-chassis-speeds:What is "
"odometry?>`. WPILib, sahada bir mecanum tahrik robotunun konumunu izlemek "
"için kullanılabilecek bir ``MecanumDriveOdometry`` sınıfı içerir."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:5
msgid ""
"Because this method only uses encoders and a gyro, the estimate of the "
"robot's position on the field will drift over time, especially as your robot"
" comes into contact with other robots during gameplay. However, odometry is "
"usually very accurate during the autonomous period."
msgstr ""
"Bu yöntemde yalnızca kodlayıcılar ve bir jiroskop kullanıldığı için, robotun"
" sahadaki konumunun tahmini, özellikle oyun sırasında diğer robotlarla temas"
" kurduğunda zamanla kayacaktır. Bununla birlikte, odometri genellikle "
"bağımsız dönemde çok doğrudur."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:8
msgid "Creating the odometry object"
msgstr "Odometri nesnesini oluşturma"

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:9
msgid ""
"The ``MecanumDriveOdometry`` class requires two mandatory arguments and one "
"optional argument. The mandatory arguments are the kinematics object that "
"represents your mecanum drive (in the form of a ``MecanumDriveKinematics`` "
"class) and the angle reported by your gyroscope (as a Rotation2d). The third"
" optional argument is the starting pose of your robot on the field (as a "
"``Pose2d``). By default, the robot will start at ``x = 0, y = 0, theta = "
"0``."
msgstr ""
"``MecanumDriveOdometry`` sınıfı, iki zorunlu bağımsız değişken ve bir isteğe"
" bağlı bağımsız değişken gerektirir. Zorunlu argümanlar, mecanum sürücünüzü "
"(bir ``MecanumDriveKinematics``  sınıfı biçiminde) ve jiroskopunuz "
"tarafından bildirilen açı (Rotation2d olarak) temsil eden kinematik "
"nesnesidir. Üçüncü isteğe bağlı argüman, robotunuzun sahadaki başlangıç "
"pozudur (``Pose2d`` olarak). Varsayılan olarak, robot ` x = 0, y = 0, theta "
"= 0`` ile başlayacaktır."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:11
msgid ""
"0 degrees / radians represents the robot angle when the robot is facing "
"directly toward your opponent's alliance station. As your robot turns to the"
" left, your gyroscope angle should increase. By default, WPILib gyros "
"exhibit the opposite behavior, so you should negate the gyro angle."
msgstr ""
"0 derece / radyan, robot doğrudan rakibinizin ittifak istasyonuna bakarken "
"robot açısını temsil eder. Robotunuz sola döndükçe jiroskop açınız "
"artmalıdır. Varsayılan olarak, WPILib jiroskopları zıt davranış sergiler, bu"
" nedenle jiroskop açısını geçersiz kılmalısınız."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:55
msgid "Updating the robot pose"
msgstr "Robot duruşunu güncelleme"

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:56
msgid ""
"The ``update`` method of the odometry class updates the robot position on "
"the field. The update method takes in the gyro angle of the robot, along "
"with a ``MecanumDriveWheelSpeeds`` object representing the speed of each of "
"the 4 wheels on the robot. This ``update`` method must be called "
"periodically, preferably in the ``periodic()`` method of a :ref:`Subsystem "
"<docs/software/commandbased/subsystems:Subsystems>`. The ``update`` method "
"returns the new updated pose of the robot."
msgstr ""
"Odometri sınıfının ``güncelleme`` yöntemi, robotun sahadaki konumunu "
"günceller. Güncelleme yöntemi, robot üzerindeki 4 tekerleğin her birinin "
"hızını temsil eden bir ``MecanumDriveWheelSpeeds`` nesnesi ile birlikte "
"robotun cayro açısını alır. Bu ``update`` yöntemi periyodik olarak, tercihen"
" ``periodic()`` yönteminde :ref:`Subsystem "
"<docs/software/commandbased/subsystems:Subsystems>`  ile çağrılmalıdır. "
"``Güncelleme`` yöntemi, robotun yeni güncellenmiş pozunu döndürür."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:58
msgid ""
"The ``MecanumDriveWheelSpeeds`` class in Java must be constructed with each "
"wheel speed in meters per second. In C++, the units library must be used to "
"represent your wheel speeds."
msgstr ""
"Java'daki ``MecanumDriveWheelSpeeds`` sınıfı, saniyede metre cinsinden her "
"tekerlek hızından oluşturulmalıdır. C++ 'da, unit-birim kitaplığı tekerlek "
"hızlarınızı temsil etmek için kullanılmalıdır."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:100
msgid "Resetting the Robot Pose"
msgstr "Robot Duruşunu Sıfırlama"

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:101
msgid ""
"The robot pose can be reset via the ``resetPose`` method. This method "
"accepts two arguments -- the new field-relative pose and the current gyro "
"angle."
msgstr ""
"Robot duruşu, ``resetPose`` yöntemiyle sıfırlanabilir. Bu yöntem iki "
"argümanı kabul eder - yeni sahaya bağlı poz ve mevcut jiroskop açısı."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:103
msgid ""
"If at any time, you decide to reset your gyroscope, the ``resetPose`` method"
" MUST be called with the new gyro angle."
msgstr ""
"Herhangi bir zamanda jiroskopunuzu sıfırlamaya karar verirseniz, yeni "
"jiroskop açısı ile ``resetPose`` yöntemi ÇAĞIRILMALIDIR."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:105
msgid ""
"A full example of a mecanum drive robot with odometry is available here: "
"`C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/MecanumBot>`_"
" / `Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/mecanumbot>`_."
msgstr ""
"Odometriye sahip bir mecanum sürücü robotunun tam bir örneğini burada "
"bulabilirsiniz: `C ++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/MecanumBot>`"
" _ / `Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/mecanumbot>`"
" _."

#: ../../frc-docs/source/docs/software/kinematics-and-odometry/mecanum-drive-odometry.rst:107
msgid ""
"In addition, the ``GetPose`` (C++) / ``getPoseMeters`` (Java) methods can be"
" used to retrieve the current robot pose without an update."
msgstr ""
"Ek olarak, mevcut robot pozunu güncelleme olmadan almak için ``GetPose`` "
"(C++) / ``getPoseMeters`` (Java) yöntemleri kullanılabilir."
