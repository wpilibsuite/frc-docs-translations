# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rodrigo Acosta <raar7366@gmail.com>, 2020
# Diana Ramos <dianaracasas@gmail.com>, 2020
# Daniel Núñez <daniel1_nunez@hotmail.com>, 2021
# Paulina Maynez <paump22@hotmail.com>, 2021
# Austin Shalit <austinshalit@gmail.com>, 2021
# Fernando Soltero <fersg806@gmail.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 04:04+0000\n"
"PO-Revision-Date: 2020-04-25 02:02+0000\n"
"Last-Translator: Fernando Soltero <fersg806@gmail.com>, 2021\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:2
msgid "Subsystems"
msgstr "Subsistemas"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:4
msgid ""
"Subsystems are the basic unit of robot organization in the command-based "
"paradigm. A subsystem is an abstraction for a collection of robot hardware "
"that *operates together as a unit*. Subsystems `encapsulate "
"<https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)>`__ this"
" hardware, \"hiding\" it from the rest of the robot code (e.g. commands) and"
" restricting access to it except through the subsystem’s public methods. "
"Restricting the access in this way provides a single convenient place for "
"code that might otherwise be duplicated in multiple places (such as scaling "
"motor outputs or checking limit switches) if the subsystem internals were "
"exposed. It also allows changes to the specific details of how the subsystem"
" works (the \"implementation\") to be isolated from the rest of robot code, "
"making it far easier to make substantial changes if/when the design "
"constraints change."
msgstr ""
"Los subsistemas son la unidad básica de organización de los robots en el "
"paradigma basado en comandos. Un subsistema es una abstracción de un "
"conjunto de hardware del robot que *funciona como una unidad*. Los "
"subsistemas `encapsulan "
"<https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)>`__ este"
" hardware, \"escondiéndolo\" del resto del código del robot (por ejemplo, "
"los comandos) y restringiendo el acceso a él excepto a través de los métodos"
" públicos del subsistema. Restringir el acceso de esta manera proporciona un"
" único lugar conveniente para el código que de otro modo podría estar "
"duplicado en varios lugares (como el escalado de las salidas del motor o la "
"comprobación de los interruptores de límite) si los internos del subsistema "
"estuvieran expuestos. También permite que los cambios en los detalles "
"específicos de cómo funciona el subsistema (la \"implementación\") se aíslen"
" del resto del código del robot, lo que facilita enormemente la realización "
"de cambios sustanciales si/cuando cambian las restricciones de diseño."

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:6
msgid ""
"Subsystems also serve as the backbone of the ``CommandScheduler``\\ ’s "
"resource management system. Commands may declare resource requirements by "
"specifying which subsystems they interact with; the scheduler will never "
"concurrently schedule more than one command that requires a given subsystem."
" An attempt to schedule a command that requires a subsystem that is already-"
"in-use will either interrupt the currently-running command (if the command "
"has been scheduled as interruptible), or else be ignored."
msgstr ""
"Los subsistemas también sirven como columna vertebral del sistema de gestión"
" de recursos de ``CommandScheduler``\\. Los comandos pueden declarar los "
"requisitos de recursos especificando con qué subsistemas interactúan; el "
"programador nunca programará simultáneamente más de un comando que requiera "
"un subsistema determinado. Un intento de programar un comando que requiera "
"un subsistema que ya está en uso interrumpirá el comando que se está "
"ejecutando actualmente (si el comando se programó como interrumpible) o se "
"ignorará."

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:11
msgid "Creating a Subsystem"
msgstr "Creando un subsistema"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:17
#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:44
msgid "Java"
msgstr "Java"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:25
msgid "C++"
msgstr "C++"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:33
msgid ""
"This class contains a few convenience features on top of the basic "
"``Subsystem`` interface: it automatically calls the ``register()`` method in"
" its constructor to register the subsystem with the scheduler (this is "
"necessary for the ``periodic()`` method to be called when the scheduler "
"runs), and also implements the ``Sendable`` interface so that it can be sent"
" to the dashboard to display/log relevant status information."
msgstr ""
"Esta clase contiene algunas características de conveniencia además de la "
"interfaz básica del ``Subsistema``: llama automáticamente al método "
"``register()`` en su constructor para registrar el subsistema con el "
"planificador (esto es necesario para el método ``periodic()`` que se llamará"
" cuando se ejecute el planificador), y también implementa la interfaz "
"``Sendable`` para que pueda enviarse al dashboard para mostrar/registrar "
"información de estado relevante."

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:35
msgid ""
"Advanced users seeking more flexibility may simply create a class that "
"implements the ``Subsystem`` interface."
msgstr ""
"Los usuarios avanzados que buscan más flexibilidad pueden simplemente crear "
"una clase que implemente la interfaz del ``Subsistema``."

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:38
msgid "Simple Subsystem Example"
msgstr "Ejemplo de un subsistema simple"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:40
msgid ""
"What might a functional subsystem look like in practice? Below is a simple "
"pneumatically-actuated hatch mechanism from the HatchBot example project "
"(`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/hatchbottraditional>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/HatchbotTraditional>`__):"
msgstr ""
"¿Cómo sería un subsistema funcional en la práctica? A continuación se "
"muestra un mecanismo de trama simple accionado neumáticamente del proyecto "
"de ejemplo HatchBot (`Java "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/hatchbottraditional>`__,"
" `C++ "
"<https://github.com/wpilibsuite/allwpilib/tree/main/wpilibcExamples/src/main/cpp/examples/HatchbotTraditional>`__):"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:52
msgid "C++ (Header)"
msgstr "C++ (Encabezado)"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:60
msgid "C++ (Source)"
msgstr "C++ (Fuente)"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:68
msgid ""
"Notice that the subsystem hides the presence of the DoubleSolenoid from "
"outside code (it is declared ``private``), and instead publicly exposes two "
"higher-level, descriptive robot actions: ``grabHatch()`` and "
"``releaseHatch()``. It is extremely important that \"implementation "
"details\" such as the double solenoid be \"hidden\" in this manner; this "
"ensures that code outside the subsystem will never cause the solenoid to be "
"in an unexpected state. It also allows the user to change the implementation"
" (for instance, a motor could be used instead of a pneumatic) without any of"
" the code outside of the subsystem having to change with it."
msgstr ""
"Fíjese en que el subsistema oculta la presencia del DoubleSolenoid al código"
" exterior (está declarado como ``privado``), y en su lugar expone "
"públicamente dos acciones de robot de nivel superior y descriptivo: "
"``grabHatch()`` y ``releaseHatch()``. Es extremadamente importante que los "
"\"detalles de implementación\" como el solenoide doble se \"oculten\" de "
"esta manera; esto asegura que el código fuera del subsistema nunca causará "
"que el solenoide esté en un estado inesperado. También permite al usuario "
"cambiar la implementación (por ejemplo, se podría utilizar un motor en lugar"
" de un neumático) sin que el código fuera del subsistema tenga que cambiar "
"con él."

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:71
msgid "Setting Default Commands"
msgstr "Configuración de comandos predeterminados"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:73
msgid ""
"In the C++ command-based library, the CommandScheduler `owns` the default "
"command objects - accordingly, the object passed to the "
"``SetDefaultCommand()`` method will be either moved or copied, depending on "
"whether it is an rvalue or an lvalue (`rvalue/lvalue explanation "
"<http://thbecker.net/articles/rvalue_references/section_01.html>`__).  The "
"examples here ensure that move semantics are used by casting to an rvalue "
"with ``std::move()``."
msgstr ""
"En la biblioteca basada en comandos de C ++, CommandScheduler `tiene` los "
"objetos de comando predeterminados; en consecuencia, el objeto pasado al "
"método ``SetDefaultCommand()`` se moverá o copiará, dependiendo de si es un "
"rvalue o un lvalue  (` explicación de rvalue/lvalue "
"<http://thbecker.net/articles/rvalue_references/section_01.html>`__). Los "
"ejemplos aquí aseguran que la semántica de movimiento se use al convertir a "
"un rvalue con ``std::move()``."

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:75
msgid ""
"\"Default commands\" are commands that run automatically whenever a "
"subsystem is not being used by another command."
msgstr ""
"Los \"comandos predeterminados\" son comandos que se ejecutan "
"automáticamente siempre que un subsistema no está siendo utilizado por otro "
"comando."

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:77
msgid ""
"Setting a default command for a subsystem is very easy; one simply calls "
"``CommandScheduler.getInstance().setDefaultCommand()``, or, more simply, the"
" ``setDefaultCommand()`` method of the ``Subsystem`` interface:"
msgstr ""
"Establecer un comando predeterminado para un subsistema es muy fácil; uno "
"simplemente llama ``CommandScheduler.getInstance().setDefaultCommand()``, o,"
" más simplemente, el método ``setDefaultCommand()`` de la interfaz "
"``Subsystem``:"
