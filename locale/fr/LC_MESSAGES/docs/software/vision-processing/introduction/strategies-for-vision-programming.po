# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Andre Theberge <atheberge2@videotron.ca>, 2020
# Regis Bekale <rbekale@robotiquefirstquebec.org>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-23 16:03+0000\n"
"PO-Revision-Date: 2020-04-25 02:05+0000\n"
"Last-Translator: Regis Bekale <rbekale@robotiquefirstquebec.org>, 2021\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:4
msgid "Strategies for Vision Programming"
msgstr "Stratégies pour la programmation de la vision"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:6
msgid ""
"Using computer vision is a great way of making your robot be responsive to "
"the elements on the field and make it much more autonomous. Often in FRC\\ "
"|reg| games there are bonus points for autonomously shooting balls or other "
"game pieces into goals or navigating to locations on the field. Computer "
"vision is a great way of solving many of these problems. And if you have "
"autonomous code that can do the challenge, then it can be used during the "
"teleop period as well to help the human drivers."
msgstr ""
"L’utilisation de la vision par ordinateur est un excellent moyen de rendre "
"votre robot sensible aux éléments sur le terrain et de le rendre beaucoup "
"plus autonome. Souvent dans les jeux FRC\\ |reg|, il ya des points bonus "
"pour les balles tirées en mode autonome ou d’autres pièces de jeu dans les "
"buts ou la navigation vers des endroits précis sur le terrain. La vision par"
" ordinateur est un excellent moyen de résoudre bon nombre de ces problèmes. "
"Et si vous avez du code autonome qui peut relever le défi, alors il peut "
"être utilisé pendant la période de téléopéré et ainsi assister les "
"conducteurs humains lors du pilotage."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:8
msgid ""
"There are many options for choosing the components for vision processing and"
" where the vision program should run. WPILib and associated tools support a "
"number of options and give teams a lot of flexibility to decide what to do. "
"This article will attempt to give you some insight into many of the choices "
"and tradeoffs that are available."
msgstr ""
"Il existe de nombreuses options pour choisir les composants pour le "
"traitement de la vision et où le programme de vision va s'exécuter. WPILib "
"et les outils associés prennent en charge un certain nombre d'options et "
"offrent aux équipes une grande flexibilité pour décider quoi faire. Cet "
"article va tenter de vous donner un aperçu de la plupart des choix et des "
"compromis disponibles."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rstNone
msgid "Different vision workflows in FRC."
msgstr "Différents flux de travail de vision en FRC."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:14
msgid "OpenCV Computer Vision Library"
msgstr "Librairie de vision par ordinateur OpenCV"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:16
msgid ""
"**OpenCV** is an open source computer vision library that is widely used "
"throughout academia and industry. It has support from hardware manufactures "
"providing GPU accelerated processing, it has bindings for a number of "
"languages including C++, Java, and Python. It is also well documented with "
"many web sites, books, videos, and training courses so there are lots of "
"resources available to help learn how to use it. The C++ and Java versions "
"of WPILib include the OpenCV libraries, there is support in the library for "
"capturing, processing and viewing video, and tools to help you create your "
"vision algorithms. For more information about OpenCV see https://opencv.org."
msgstr ""
"**OpenCV** est une librairie de vision par ordinateur de type open-source "
"largement utilisée dans le monde universitaire et l'industrie. Elle est "
"supportée par les fabricants de matériel fournissant un traitement accéléré "
"par GPU, et dispose de liens pour un certain nombre de langages, notamment "
"C++, Java et Python. Elle est également bien documentée avec de nombreux "
"sites Web, livres, vidéos et cours de formation  Il existe donc de "
"nombreuses ressources disponibles pour vous aider à apprendre à l'utiliser. "
"Les versions C++ et Java de WPILib incluent les librairies OpenCV, celle-ci "
"se charge de la capture, du traitement et de la visualisation de vidéos et "
"comprend des outils pour vous aider à créer vos algorithmes de vision. Pour "
"plus d'informations sur OpenCV, consultez https://opencv.org."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:19
msgid "Vision Code on roboRIO"
msgstr "Vision Code sur roboRIO"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rstNone
msgid ""
"The chain from a USB Webcam to roboRIO to Ethernet Switch over a video "
"stream to the driver station computer."
msgstr ""
"La chaîne partant d’une webcam USB puis au roboRIO et à un commutateur "
"Ethernet sur un flux vidéo à l’ordinateur contenant l'application driver "
"station."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:24
msgid ""
"Vision code can be embedded into the main robot program on the roboRIO. "
"Building and running the vision code is straightforward because it is built "
"and deployed along with the robot program. The vision code can be written by"
" hand or generated by GRIP in either C++ or Java. The disadvantage of this "
"approach is that having vision code running on the same processor as the "
"robot program can cause performance issues. This is something you will have "
"to evaluate depending on the requirements for your robot and vision program."
msgstr ""
"Le code de vision peut être intégré au programme principal du robot sur le "
"roboRIO. Construire et exécuter le code de vision est simple car il est "
"construit et déployé avec le programme du robot. Le code de vision peut être"
" écrit à la main ou généré par GRIP en C++ ou Java. L'inconvénient de cette "
"approche est que le fait d'avoir un code de vision s'exécutant sur le même "
"processeur que le programme du robot peut entraîner des problèmes de "
"performances. C'est quelque chose que vous devrez évaluer en fonction des "
"exigences de votre programme de robot et de vision."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:26
msgid ""
"In this approach, the vision code simply produces results that the robot "
"code directly uses. Be careful about synchronization issues when writing "
"robot code that is getting values from a vision thread. The GRIP generated "
"code and the VisionRunner class in WPILib make this easier."
msgstr ""
"Dans cette approche, le code de vision produit simplement des résultats que "
"le code du robot utilise directement. Cependant, faites attention aux "
"problèmes de synchronisation lorsque vous écrivez du code pour votre robot "
"qui obtient des valeurs à partir d'un thread de vision. Le code généré par "
"GRIP et la classe VisionRunner dans WPILib facilitent cela."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:28
msgid ""
"Using functions provided by the CameraServer class, the video stream can be "
"sent to dashboards such as Shuffleboard so operators can see what the camera"
" sees. In addition, annotations can be added to the images using OpenCV "
"commands so targets or other interesting objects can be identified in the "
"dashboard view."
msgstr ""
"En utilisant les fonctions fournies par la classe CameraServer, le flux "
"vidéo peut être envoyé à des tableaux de bord tels que Shuffleboard afin que"
" les opérateurs puissent voir ce que la caméra voit. De plus, des "
"annotations peuvent être ajoutées aux images à l'aide des commandes OpenCV "
"afin que les cibles ou autres objets intéressants puissent être identifiés "
"dans la disposition du tableau de bord."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:31
msgid "Vision Code on DS Computer"
msgstr "Code de vision sur ordinateur DS"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rstNone
msgid ""
"Same as the above diagram but the Driver Station computer must process that "
"video and send NetworkTables updates back to the roboRIO."
msgstr ""
"Identique au diagramme ci-dessus, mais l’ordinateur contenant l'application "
"Driver station doit traiter cette vidéo et renvoyer les mises à jour "
"NetworkTables au roboRIO."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:36
msgid ""
"When vision code is running on the DS computer, the video is streamed back "
"to the Driver Station laptop for processing. Even the older Classmate "
"laptops are substantially faster at vision processing than the roboRIO. GRIP"
" can be run on the Driver Station laptop directly with the results sent back"
" to the robot using NetworkTables. Alternatively you can write your own "
"vision program using a language of your choosing. Python makes a good choice"
" since there is a native NetworkTables implementation and the OpenCV "
"bindings are very good."
msgstr ""
"Lorsque le code de vision est exécuté sur l'ordinateur principal (Driver "
"Station), la vidéo est retransmise vers cet ordinateur portable pour "
"traitement. Même les vieux ordinateurs portables de type Classmate sont "
"sensiblement plus rapides pour traiter le flux de vision que le roboRIO. "
"GRIP peut être exécuté directement sur l'ordinateur portable, et les "
"résultats renvoyés au robot à l'aide de NetworkTables. Alternativement, vous"
" pouvez écrire votre propre programme de vision en utilisant le langage de "
"programmation de votre choix. Python est un bon candidat, car il supporte "
"une implémentation native de NetworkTables et les liens OpenCV sont très "
"bons."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:38
msgid ""
"After the images are processed, the key values such as the target position, "
"distance or anything else you need can be sent back to the robot with "
"NetworkTables. This approach generally has higher latency, as delay is added"
" due to the images needing to be sent to the laptop. Bandwidth limitations "
"also limit the maximum resolution and FPS of the images used for processing."
msgstr ""
"Une fois les images traitées, les valeurs clés telles que la position cible,"
" la distance ou tout autre élément dont vous avez besoin peuvent être "
"renvoyées au robot avec NetworkTables. Cette approche a généralement une "
"latence plus élevée, car un délai est ajouté en raison des images devant "
"être envoyées à l'ordinateur portable. Les limitations de bande passante "
"limitent également la résolution maximale et le FPS des images utilisées "
"pour le traitement."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:40
msgid "The video stream can be displayed on Shuffleboard or in GRIP."
msgstr "Le flux vidéo peut être affiché sur Shuffleboard ou dans GRIP."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:43
msgid "Vision Code on Coprocessor"
msgstr "Code de vision sur coprocesseur"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rstNone
msgid ""
"Coprocessor is on same network as the roboRIO so it off loads the compute "
"without having the latency of going to the Driver Station and back."
msgstr ""
"Le coprocesseur est sur le même réseau que le roboRIO, il charge donc le "
"calcul sans avoir la latence d’aller à l'application Driver Station station "
"et en revenir. "

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:48
msgid ""
"Coprocessors such as the Raspberry Pi are ideal for supporting vision code "
"(see :ref:`docs/software/vision-processing/wpilibpi/using-the-raspberry-pi-"
"for-frc:Using the Raspberry Pi for FRC`). The advantage is that they can run"
" full speed and not interfere with the robot program. In this case, the "
"camera is probably connected to the coprocessor or (in the case of Ethernet "
"cameras) an Ethernet switch on the robot. The program can be written in any "
"language; Python is a good choice because of its simple bindings to OpenCV "
"and NetworkTables. Some teams have used high performance vision coprocessors"
" such as the Nvidia Jetson for fastest speed and highest resolution, "
"although this approach generally requires advanced Linux and programming "
"knowledge."
msgstr ""
"Les coprocesseurs tels que le Raspberry Pi sont idéaux pour prendre en "
"charge le code de vision (voir :ref:`docs/software/vision-"
"processing/wpilibpi/using-the-raspberry-pi-for-frc:Using the Raspberry Pi "
"for FRC`). L’avantage est qu’ils peuvent fonctionner à pleine vitesse et ne "
"pas interférer avec le programme du robot. Dans ce cas, la caméra est "
"probablement connectée au coprocesseur ou (dans le cas des caméras Ethernet)"
" à un interrupteur Ethernet sur le robot. Le programme peut être écrit dans "
"n’importe quelle langage; Python est un bon choix en raison de ses liaisons "
"simples à OpenCV et NetworkTables. Certaines équipes ont utilisé des "
"coprocesseurs de vision haute performance tels que le Nvidia Jetson pour sa "
"vitesse très rapide et sa plus haute résolution, bien que cette approche "
"nécessite généralement des connaissances avancées sur Linux et en "
"programmation."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:50
msgid ""
"This approach takes a bit more programming expertise as well as a small "
"amount of additional weight, but otherwise it brings the best of both worlds"
" compared to the other two approaches, as coprocessors are much faster than "
"the roboRIO and the image processing can be performed with minimal latency "
"or bandwidth use."
msgstr ""
"Cette approche nécessite un peu plus d'expertise en programmation et ajoute "
"un léger poids supplémentaire au robot, cependant, c'est le meilleur des "
"deux mondes par rapport aux deux autres approches.  Les coprocesseurs sont "
"beaucoup plus rapides que le roboRIO et le traitement d'image peut être "
"effectué avec latence minimale ou utilisation de la bande passante."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:52
msgid ""
"Data can be sent from the vision program on the coprocessor to the robot "
"using NetworkTables or a private protocol over a network or serial "
"connection."
msgstr ""
"Les données peuvent être envoyées du programme de vision vers le "
"coprocesseur via les NetworkTables ou par un protocole privé sur un réseau "
"ou une connexion série."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:55
msgid "Camera Options"
msgstr "Options de caméra"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:57
msgid ""
"There are a number of camera options supported by WPILib. Cameras have a "
"number of parameters that affect operation; for example, frame rate and "
"image resolution affect the quality of the received images, but when set too"
" high impact processing time and, if sent to the driver station, may exceed "
"the available bandwidth on the field."
msgstr ""
"WPILib prend en charge un certain nombre d'options de caméra. Les caméras "
"ont plusieurs paramètres qui influencent le fonctionnement; par exemple, la "
"fréquence d'images et la résolution d'image influencent la qualité des "
"images reçues, mais lorsqu'elles sont réglés trop hautes, elles contribuent "
"à un temps de traitement très élevé et, si elles sont envoyées à "
"l'ordinateur portable Driver Station pour traitement, elles peuvent causer "
"un dépassement de la bande passante disponible sur le terrain."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:59
msgid ""
"The CameraServer class in C++ and Java is used to interface with cameras "
"connected to the robot. It retrieve frames for local processing through a "
"Source object and sends the stream to your driver station for viewing or "
"processing there."
msgstr ""
"La classe CameraServer en C++ et Java est utilisée pour interfacer avec les "
"caméras connectées au robot. Elle récupère les trames pour le traitement "
"local via un objet Source et ensuite envoie le flux au poste de pilotage "
"pour visualisation ou traitement."
