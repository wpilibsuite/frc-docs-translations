# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Sofia Fernandez <sofiafdz.val@gmail.com>, 2020
# Diana Ramos <dianaracasas@gmail.com>, 2020
# Fernanda Reveles <fernanda.reveles.b@gmail.com>, 2021
# Paulina Maynez <paump22@hotmail.com>, 2021
# Heber Sepúlveda <heber.sepulveda.m@gmail.com>, 2021
# Rodrigo Acosta <raar7366@gmail.com>, 2021
# Ángel Michel Medina López, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-09 04:10+0000\n"
"PO-Revision-Date: 2020-04-25 02:02+0000\n"
"Last-Translator: Ángel Michel Medina López, 2021\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:2
msgid "What Is \"Command-Based\" Programming?"
msgstr "¿Qué es la programación \"basada en comandos\"?"

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:4
msgid ""
"WPILib supports a robot programming methodology called \"command-based\" "
"programming. In general, \"command-based\" can refer both the general "
"programming paradigm, and to the set of WPILib library resources included to"
" facilitate it."
msgstr ""
"WPILib admite una metodología de programación de robots llamada programación"
" \"basada en comandos\". En general, \"basado en comandos\" puede referirse "
"tanto al paradigma de programación general como al conjunto de recursos de "
"la biblioteca WPILib incluidos para facilitarlo."

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:6
msgid ""
"\"Command-based\" programming is an example of what is known as a `design "
"pattern. <https://en.wikipedia.org/wiki/Design_pattern>`__ It is a general "
"way of organizing one’s robot code that is well-suited to a particular "
"problem-space. It is not the only way to write a robot program, but it is a "
"very effective one; command-based robot code tends to be clean, extensible, "
"and (with some tricks) easy to re-use from year to year."
msgstr ""
"La programación \"basada en comandos\" es un ejemplo de lo que se conoce "
"como `design pattern. <https://en.wikipedia.org/wiki/Design_pattern>`__ Es "
"una forma general de organizar el código de un robot que se adapta bien a un"
" problema-espacio en particular. No es la única forma de escribir un "
"programa de robot, pero es muy eficaz; el código de robot basado en comandos"
" tiende a ser limpio, extensible y (con algunos trucos) fácil de reutilizar "
"año tras año."

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:8
msgid ""
"The command-based paradigm is also an example of what is known as "
"`declarative <https://en.wikipedia.org/wiki/Declarative_programming>`__ "
"programming. In declarative programming, the emphasis is placed on *what* "
"the program ought to do, rather than *how* the program ought to do it. Thus,"
" the command-based libraries allow users to define desired robot behaviors "
"while minimizing the amount of iteration-by-iteration robot logic that they "
"must write. For example, in a command-based program, a user can specify that"
" \"the robot should perform an action when a button is pressed\" (note the "
"use of a :ref:`lambda <docs/software/commandbased/convenience-"
"features:Lambda Expressions (Java)>`):"
msgstr ""
"El paradigma basado en comandos también es un ejemplo de lo que se conoce "
"como programación `declarative "
"<https://en.wikipedia.org/wiki/Declarative_programming>`__. En la "
"programación declarativa, el énfasis se pone en *qué* debería hacer el "
"programa, en lugar de *cómo* debería hacerlo. Por lo tanto, las bibliotecas "
"basadas en comandos permiten a los usuarios definir los comportamientos "
"deseados del robot al tiempo que minimizan la cantidad de lógica de robot "
"iteración por iteración que deben escribir. Por ejemplo, en un programa "
"basado en comandos, un usuario puede especificar que \"el robot debe "
"realizar una acción cuando se presiona un botón\" (tenga en cuenta el uso de"
" :ref:`lambda <docs/software/commandbased/convenience-features:Lambda "
"Expressions (Java)>`):"

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:20
msgid ""
"In contrast, in an ordinary `imperative "
"<https://en.wikipedia.org/wiki/Imperative_programming>`__ program, the user "
"would need to check the button state every iteration, and perform the "
"appropriate action based on the state of the button."
msgstr ""
"Por el contrario, en un programa ordinario `imperative "
"<https://en.wikipedia.org/wiki/Imperative_programming>`__, el usuario "
"tendría que comprobar el estado del botón en cada iteración y realizar la "
"acción adecuada en función del estado del botón."

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:47
msgid "Subsystems and Commands"
msgstr "Subsistemas y comandos"

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:52
msgid ""
"The command-based pattern is based around two core abstractions: "
"**commands**, and **subsystems.**"
msgstr ""
"El patrón basado en comandos se basa en dos abstracciones centrales: "
"**comandos** y **subsistemas.**"

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:54
msgid ""
"**Subsystems** are the basic unit of robot organization in the design-based "
"paradigm. Subsystems `encapsulate "
"<https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)>`__ "
"lower-level robot hardware (such as motor controllers, sensors, and/or "
"pneumatic actuators), and define the interfaces through which that hardware "
"can be accessed by the rest of the robot code. Subsystems allow users to "
"\"hide\" the internal complexity of their actual hardware from the rest of "
"their code - this both simplifies the rest of the robot code, and allows "
"changes to the internal details of a subsystem without also changing the "
"rest of the robot code. Subsystems implement the ``Subsystem`` interface."
msgstr ""
"*Los subsistemas* son la unidad básica de la organización del robot en el "
"paradigma basado en el diseño. Los subsistemas `encapsulan "
"<https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)>`__ "
"hardware de robot de nivel inferior (como controladores de motor, sensores "
"y/o actuadores neumáticos), y definen las interfaces a través de las cuales "
"el resto del código del robot puede acceder a ese hardware. Los subsistemas "
"permiten a los usuarios \"ocultar\" la complejidad interna de su hardware "
"real del resto de su código - esto simplifica el resto del código del robot,"
" y permite cambios en los detalles internos de un subsistema sin cambiar "
"también el resto del código del robot. Los subsistemas implementan la "
"interfaz ``Subsystem``."

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:56
msgid ""
"**Commands** define high-level robot actions or behaviors that utilize the "
"methods defined by the subsystems. A command is a simple `state machine "
"<https://en.wikipedia.org/wiki/Finite-state_machine>`__ that is either "
"initializing, executing, ending, or idle. Users write code specifying which "
"action should be taken in each state. Simple commands can be composed into "
"\"command groups\" to accomplish more-complicated tasks. Commands, including"
" command groups, implement the ``Command`` interface."
msgstr ""
"Los **comandos** definen acciones o comportamientos de robots de alto nivel "
"que utilizan los métodos definidos por los subsistemas. Un comando es una "
"simple `máquina de estado  <https://en.wikipedia.org/wiki/Finite-"
"state_machine>`__ que se está inicializando, ejecutándose, finalizando o "
"inactiva. Los usuarios escriben un código que especifica qué acción se debe "
"tomar en cada estado. Los comandos simples se pueden componer en \"grupos de"
" comandos\" para realizar tareas más complicadas. Los comandos, incluidos "
"los grupos de comandos, implementan la interfaz de ``Comando``."

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:59
msgid "How Commands Are Run"
msgstr "Cómo se ejecutan los comandos"

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:61
msgid "For a more detailed explanation, see :doc:`command-scheduler`."
msgstr ""
"Para obtener una explicación más detallada, consulte: doc: `command-"
"scheduler`."

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:65
msgid ""
"Multiple commands can run concurrently, as long as they do not require the "
"same resources on the robot. Resource management is handled on a per-"
"subsystem basis: commands may specify which subsystems they interact with, "
"and the scheduler will never schedule more than one command requiring a "
"given subsystem at a time. This ensures that, for example, users will not "
"end up with two different pieces of code attempting to set the same motor "
"controller to different output values. If a new command is scheduled that "
"requires a subsystem that is already in use, it will either interrupt the "
"currently-running command that requires that subsystem (if the command has "
"been scheduled as interruptible), or else it will not be scheduled."
msgstr ""
"Se pueden ejecutar varios comandos al mismo tiempo, siempre que no requieran"
" los mismos recursos en el robot. La administración de recursos se maneja "
"por subsistema: los comandos pueden especificar con qué subsistemas "
"interactúan, y el programador nunca programará más de un comando que "
"requiera un subsistema determinado a la vez. Esto asegura que, por ejemplo, "
"los usuarios no terminarán con dos piezas de código diferentes que intenten "
"configurar el mismo controlador de motor a diferentes valores de salida. Si "
"se programa un nuevo comando que requiere un subsistema que ya está en uso, "
"interrumpirá el comando actualmente en ejecución que requiere ese subsistema"
" (si el comando se programó como interrumpible), o de lo contrario no se "
"programará."

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:67
msgid ""
"Subsystems also can be associated with \"default commands\" that will be "
"automatically scheduled when no other command is currently using the "
"subsystem. This is useful for continuous \"background\" actions such as "
"controlling the robot drive, or keeping an arm held at a setpoint."
msgstr ""
"Los subsistemas también se pueden asociar con \"comandos predeterminados\" "
"que se programarán automáticamente cuando ningún otro comando esté "
"utilizando el subsistema. Esto es útil para acciones continuas \"en segundo "
"plano\", como controlar el accionamiento del robot o mantener un brazo "
"sujeto en un punto de ajuste."

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:69
msgid ""
"When a command is scheduled, its ``initialize()`` method is called once. Its"
" ``execute()`` method is then called once per call to "
"``CommandScheduler.getInstance().run()``. A command is un-scheduled and has "
"its ``end(boolean interrupted)`` method called when either its "
"``isFinished()`` method returns true, or else it is interrupted (either by "
"another command with which it shares a required subsystem, or by being "
"canceled)."
msgstr ""
"Cuando se programa un comando, su método ``initialize()`` se llama una vez. "
"Su método ``execute()`` se llama una vez por llamada a "
"``CommandScheduler.getInstance().run()``. Un comando no está programado y "
"tiene su método ``end(boolean interrumpted)`` llamado cuando su método "
"``isFinished()`` devuelve verdadero, o es interrumpido (ya sea por otro "
"comando con el que comparte un subsistema, o por ser cancelado)."

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:72
msgid "Command Groups"
msgstr "Grupos de comandos"

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:74
msgid ""
"It is often desirable to build complex commands from simple pieces. This is "
"achievable by `composing "
"<https://en.wikipedia.org/wiki/Object_composition>`__ commands into "
"\"command groups.\" A :doc:`command group <command-groups>` is a command "
"that contains multiple commands within it, which run either in parallel or "
"in sequence. The command-based library provides several types of command "
"groups for teams to use, and users are encouraged to write their own, if "
"desired. As command groups themselves implement the ``Command`` interface, "
"they are `recursively composable "
"<https://en.wikipedia.org/wiki/Object_composition#Recursive_composition>`__ "
"- one can include command groups *within* other command groups. This "
"provides an extremely powerful way of building complex robot actions with a "
"simple library."
msgstr ""
"A menudo es deseable construir comandos complejos a partir de piezas "
"simples. Esto se puede lograr `componiendo comandos "
"<https://en.wikipedia.org/wiki/Object_composition>`__ en \"grupos de "
"comandos.\" Un :doc:`command group <command-groups>` es un comando que "
"contiene varios comandos dentro de él, que se ejecutan en paralelo o en "
"secuencia. La biblioteca basada en comandos proporciona varios tipos de "
"grupos de comandos para que los usen los equipos, y se anima a los usuarios "
"a que escriban los suyos propios, si lo desean. Como los propios grupos de "
"comandos implementan la interfaz de ``Comando``, son  `componibles "
"recursivamente "
"<https://en.wikipedia.org/wiki/Object_composition#Recursive_composition>`__ "
"se pueden incluir grupos de comandos *dentro* de otros grupos de comandos. "
"Esto proporciona una forma extremadamente poderosa de crear acciones de "
"robot complejas con una biblioteca simple."

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:77
msgid "Creating a Robot Project"
msgstr "Crear un proyecto de robot"

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:79
msgid ""
"Creating a project is detailed in :ref:`docs/software/vscode-"
"overview/creating-robot-program:Creating a Robot Program`. Select "
"\"Template\" then your programming language then \"New Command Robot\" to "
"create a basic Command-Based Robot program."
msgstr ""
"La creación de un proyecto se detalla en :ref:`docs/software/vscode-"
"overview/creating-robot-program:Creating a Robot Program`. Seleccione "
"\"Template\", luego su lenguaje de programación y luego \"New Command "
"Robot\" para crear un programa básico de robot a base de comandos."
