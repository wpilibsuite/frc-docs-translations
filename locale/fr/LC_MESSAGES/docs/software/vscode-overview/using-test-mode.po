# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Austin Shalit <austinshalit@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-21 04:12+0000\n"
"PO-Revision-Date: 2020-08-20 04:15+0000\n"
"Last-Translator: Austin Shalit <austinshalit@gmail.com>, 2020\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:2
msgid "Using Test Mode"
msgstr "Utilisation du Mode Test"

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:4
msgid ""
"Test mode is designed to enable programmers to have a place to put code to "
"verify that all systems on the robot are functioning. In each of the robot "
"program templates there is a place to add test code to the robot. If you use"
" the TimedRobot template, or use command-based programming you can easily "
"see the operation of all the motors and sensors through the LiveWindow."
msgstr ""
"Le mode test est conçu pour permettre aux programmeurs d’avoir un endroit où"
" mettre du code en vue vérifier que tous les systèmes du robot fonctionnent."
" Dans chacun des modèles de programme robot, il y a un endroit où ajouter du"
" code de test au robot. Si vous utilisez le modèle TimedRobot ou utilisez "
"une programmation orientée commande, vous pouvez facilement visualiser le "
"fonctionnement de tous les moteurs et capteurs à travers le LiveWindow."

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:7
msgid "Enabling Test Mode"
msgstr "Activation du Mode Test"

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:9
msgid ""
"Test mode on the robot can be enabled from the Driver Station just like "
"autonomous or teleop. When in test mode, the ``testInit`` method is run "
"once, and the testPeriodic method is run once per tick, in addition to "
"``robotPeriodic``, the same as teleop and autonomous control modes. To "
"enable test mode in the Driver Station, select the \"Test\" button and "
"enable the robot. The test mode code will then run."
msgstr ""
"Le Mode Test sur le robot peut être activé à partir de la Driver Station "
"tout comme lrs Modes  Autonome ou Teleop. En Mode Test, la méthode "
"``testInit`` est exécuté une fois, et la méthode ``testPeriodic`` est "
"exécutée une fois par itération, en plus de ``robotPeriodic``, de même que "
"les Modes de Téléop et Autonome. Pour activer le Mode Test dans la Driver "
"Station, sélectionnez le bouton \"Test\" et activez le robot. Le code du "
"Mode de Test s’exécute alors."

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:12
msgid "Adding Test mode code to your robot code"
msgstr "Ajout du code du Mode Test à votre code robot"

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:14
msgid ""
"Adding test mode can be as painless as calling your already written Teleop "
"methods from Test. This will allow you to use the LiveWindow tuning features"
" for classes such as PIDBase and PIDController, as well as PIDSubsystems and"
" PIDCommands, to change PID constants and setpoints. Make sure to add your "
"subsystems to SmartDashboard with the ``putData(subsystem)`` or "
"``PutData(subsystem)`` method."
msgstr ""
"L’ajout du Mode de Test peut être aussi simple que d’appeler vos méthodes "
"Teleop déjà écrites à partir de Test. Ce qui vous permettra d’utiliser les "
"fonctionnalités de réglage LiveWindow pour des classes telles que PIDBase et"
" PIDController, ainsi que PIDSubsystems et PIDCommands, dans le but de "
"modifier les constantes et les points de consigne PID. Assurez-vous "
"d’ajouter vos sous-systèmes à SmartDashboard avec la méthode "
"``putData(subsystem)``  ou ``PutData(subsystem)``."

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:53
msgid "Test Mode in SmartDashboard"
msgstr "Mode Test dans le SmartDashboard"

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:55
msgid ""
"The above sample code produces the following output when the Driver Station "
"is put into Test mode then enabled. You can operate the motors by moving the"
" sliders and read the values of sensors such as the wrist potentiometer."
msgstr ""
"L’exemple de code ci-dessus produit la sortie suivante lorsque la Driver "
"Station est configurée en Mode Test puis activée. Vous pouvez actionner les "
"moteurs en déplaçant les curseurs et lire les valeurs des capteurs tels que "
"le potentiomètre du poignet."

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:57
msgid ""
"Notice that the values are grouped by the subsystem names to group related "
"actuators and sensors for easy testing. The subsystem names are specified by"
" supplying a name to the ``putData()`` method, or by calling "
"``SendableRegistry.setName()``. This grouping, while not required, makes it "
"much easier to test one subsystem at a time and have all the values next to "
"each other on the screen."
msgstr ""
"Notez que les valeurs sont regroupées par les noms des sous-systèmes pour "
"rassembler les actionneurs et capteurs associés pour des tests faciles. Les "
"noms des sous-systèmes sont spécifiés en fournissant un nom à la méthode "
"``putData()`` ou en appelant ``SendableRegistry.setName()``. Ce "
"regroupement, bien qu’il ne soit pas nécessaire, rend beaucoup plus facile "
"de tester un sous-système à la fois et d’avoir toutes les valeurs cote à "
"cote sur l’écran."

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:60
msgid "Using Test Mode with the TimedRobot Template"
msgstr "Utilisation du Mode Test avec le modèle TimedRobot"

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:62
msgid ""
"The TimedRobot template lends itself quite nicely to testing since it will "
"periodically call the testPeriodic() method (or TestPeriodic() in C++) in "
"your robot program. The testPeriodic() method will be called every 20ms and "
"it is a good place to test commands or have LiveWindow update. The "
"LiveWindow updating is built into the TimedRobot template so there is very "
"little work to use LiveWindow."
msgstr ""
"Le modèle TimedRobot se prête assez bien aux tests puisqu’il appellera "
"périodiquement la méthode ``testPeriodic()`` (ou ``TestPeriodic()`` en C++) "
"dans votre programme robot. La méthode ``testPeriodic()`` sera appelée "
"toutes les 20ms et c’est un bon endroit pour tester des commandes ou avoir "
"la mise à jour LiveWindow. La mise à jour LiveWindow est intégrée dans le "
"modèle TimedRobot, il y a donc très peu de travail additionnel à faire pour "
"pouvoir utiliser LiveWindow."

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:64
msgid ""
"This works even if you are using the TimedRobot template and not doing "
"Command-based programming."
msgstr ""
"Cela fonctionne même si vous utilisez le modèle TimedRobot et ne faites pas "
"de programmation orientée commande."

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:66
msgid ""
"In this example the sensors are registered with the LiveWindow and during "
"the testPeriodic method, simply update all the values by calling the "
"LiveWindow ``run()`` method. If your program is causing too much network "
"traffic you can call the run method less frequently by, for example, only "
"calling it every 5 updates for a 100ms update rate."
msgstr ""
"Dans cet exemple, les capteurs sont enregistrés avec la méthode LiveWindow "
"et pendant la méthode ``testPeriodic``, il suffit de mettre à jour toutes "
"les valeurs en appelant la méthode LiveWindow ``run()``. Si votre programme "
"cause trop de trafic réseau, vous pouvez appeler la méthode  ``run()`` moins"
" fréquemment en l’appelant, par exemple, uniquement toutes les 5 mises à "
"jour pour un taux de mise à jour de 100 ms."

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:69
msgid "PID Tuning in Test Mode"
msgstr "Réglage du PID en Mode Test"

#: ../../frc-docs/source/docs/software/vscode-overview/using-test-mode.rst:71
msgid ""
"Tuning PID loops is often a challenging prospect with frequent recompiles of"
" the program to get the correct values. When using the command based "
"programming model, subclassing PIDSubsystem or PIDCommand in your PID "
"commands allows the adjustment of PID constants with immediate feedback of "
"the results."
msgstr ""
"Le réglage des boucles PID est souvent une perspective difficile avec des "
"compilations fréquentes du programme pour obtenir les valeurs correctes. "
"Lorsque vous utilisez le modèle de programmation orientée commande, la sous-"
"classification de PIDSubsystem ou PIDCommand dans vos commandes PID permet "
"l’ajustement des constantes PID avec une rétroaction immédiate des "
"résultats."
