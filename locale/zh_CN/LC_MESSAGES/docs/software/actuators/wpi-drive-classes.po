# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Tianrui Wu <tw2789@columbia.edu>, 2021
# 怡静 陆 <2238710874@qq.com>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-15 16:06+0000\n"
"PO-Revision-Date: 2020-04-25 02:01+0000\n"
"Last-Translator: 怡静 陆 <2238710874@qq.com>, 2021\n"
"Language-Team: Chinese (China) (https://www.transifex.com/wpilib/teams/109324/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:4
msgid "Using the WPILib Classes to Drive your Robot"
msgstr "使用 WPILib 类驱动机器人"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:6
msgid ""
"WPILib includes many classes to help make your robot get driving faster."
msgstr "WPILib 包含了一些使控制机器人更方便的类。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:9
msgid "Standard drivetrains"
msgstr "标准动力底盘"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:12
msgid "Differential Drive Robots"
msgstr "差速驱动机器人"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:17
msgid ""
"These drive bases typically have two or more in-line traction or omni  "
"wheels per side (e.g., 6WD or 8WD) and may also be known as  \"skid-steer\","
" \"tank drive\", or \"West Coast Drive\". The Kit of Parts  drivetrain is an"
" example of a differential drive. These drivetrains are capable of driving "
"forward/backward and can turn by driving the two sides in opposite "
"directions causing the wheels to skid sideways. These drivetrains are not "
"capable of sideways translational movement."
msgstr ""
"这些底盘每侧通常具有两个或多个串联牵引轮或全向轮 (例如6WD或8WD)。KoP "
"的底盘便是差速驱动底盘的一个样例。这些底盘能够向前或向后行驶，并且可以通过向相反方向驱动底盘轮转动，从而实现转向。这些底盘无法横向平移运动。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:20
msgid "Mecanum Drive"
msgstr "麦克纳姆驱动"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:25
msgid ""
"Mecanum drive is a method of driving using specially designed wheels that "
"allow the robot to drive in any direction without changing the orientation "
"of the robot. A robot with a conventional drivetrain (all wheels pointing in"
" the same direction) must turn in the direction it needs to drive. A mecanum"
" robot can move in any direction without first turning and is called a "
"holonomic drive. The wheels (shown on this robot) have rollers that cause "
"the forces from driving to be applied at a 45 degree angle rather than "
"straight forward as in the case of a conventional drive."
msgstr ""
"麦克纳姆驱动是一种使用特殊设计的轮子进行驱动的方法，该轮子使机器人可以在不改变朝向的情况下向任何方向驱动。具有传统动力底盘 (所有车轮指向相同方向) "
"的机器人必须朝着驱动的方向转动，而使用被称为完全驱动器的麦克纳姆驱动底盘的机器人无需先转弯就可以向任何方向移动。上图机器人的车轮上具有滚轮，而这些滚轮使驱动力以45度角施加，而不是像传统驱动那样笔直向前。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:27
msgid ""
"When viewed from the top, the rollers on a mecanum drivetrain should form an"
" 'X' pattern. This results in the force vectors (when driving the wheel "
"forward) on the front two wheels pointing forward and inward and the rear "
"two wheels pointing forward and outward. By spinning the wheels in different"
" directions, various components of the force vectors cancel out, resulting "
"in the desired robot movement. A quick chart of different movements has been"
" provided below, drawing out the force vectors for each of these motions may"
" help in understanding how these drivetrains work. By varying the speeds of "
"the wheels in addition to the direction, movements can be combined resulting"
" in translation in any direction and rotation, simultaneously."
msgstr ""
"从顶部看，麦克纳姆底盘上的滚轮应形成 \"X\" 型。这导致 (在向前驱动车轮时) "
"前两个车轮的力矢量指向前和内，而后两个车轮的力矢量指向前和外。通过沿不同方向旋转车轮，力矢量的一些分量会抵消，从而使机器人实现所需的运动。下面提供了不同运动的快速图表，其中有这些运动中的力矢量。这可能有助于理解这些底盘的工作方式。通过改变方向以外的车轮速度，机器人可以向任何方向平移并旋转。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:30
msgid "Drive Class Conventions"
msgstr "驱动类惯例"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:33
msgid "Motor Inversion"
msgstr "电机反转"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:35
msgid ""
"By default, the class inverts the motor outputs for the right side of the "
"drivetrain. Generally this will mean that no inversion needs to be done on "
"the individual SpeedController objects. To disable this behavior, use the "
"`setRightSideInverted()` method."
msgstr ""
"默认情况下，该类使底盘右侧的电动机输出反转。通常，这意味着不需要对单个SpeedController对象进行反转。要禁用此行为，请使用`setRightSideInverted()`方法。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:38
msgid "Squaring Inputs"
msgstr "平方输入"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:40
msgid ""
"When driving robots, it is often desirable to manipulate the joystick inputs"
" such that the robot has finer control at low speeds while still using the "
"full output range. One way to accomplish this is by squaring the joystick "
"input, then reapplying the sign. By default the Differential Drive class "
"will square the inputs. If this is not desired (e.g. if passing values in "
"from a PIDController), use one of the drive methods with the squaredInputs "
"parameter and set it to false."
msgstr ""
"在驱动机器人时，通常需要使用手柄输入，使机器人在仍然能使用全部输出范围的情况下在低速时具有更好的控制。实现此目的的一种方法是对操纵杆输入进行平方运算，然后重新应用信号。默认情况下，Differential"
" Drive 类将对输入进行平方运算。如果不希望这样做 (例如从PID控制器传递值)，那么需要使用一个带有 squaredInputs "
"参数的驱动方法并将这个参数的值设置为 false 。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:43
msgid "Input Deadband"
msgstr "输入死区"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:45
msgid ""
"By default, the Differential Drive class applies an input deadband of 0.02. "
"This means that input values with a magnitude below 0.02 (after any squaring"
" as described above) will be set to 0. In most cases these small inputs "
"result from imperfect joystick centering and are not sufficient to cause "
"drivetrain movement, the deadband helps reduce unnecessary motor heating "
"that may result from applying these small values to the drivetrain. To "
"change the deadband, use the `setDeadband()` method."
msgstr ""
"默认情况下，“Differential "
"Drive”类将输入死区设为0.02。这意味着低于0.02（经过上述平方运算后）的输入值将设置为0。在大多数情况下，这些较小的输入是由于操纵杆对中不正确而导致的，不足以导致底盘运动，死区有助于减少不必要的运动，将这些较小的值应用于底盘可能会导致电动机发热。要更改死区，请使用`setDeadband()`方法。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:48
msgid "Maximum Output"
msgstr "最大输出"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:50
msgid ""
"Sometimes drivers feel that their drivetrain is driving too fast and want to"
" limit the output.  This can be accomplished with the `setMaxOutput()` "
"method.  This maximum output is multiplied by result of the previous drive "
"functions like deadband and squared inputs."
msgstr ""
"有时，驾驶员觉得他们的底盘移动得太快，并希望限制输出功率。这可以通过`setMaxOutput()`方法来完成。该最大输出乘以先前驱动函数（如死区和平方输入）的结果。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:53
msgid "Motor Safety"
msgstr "电机安全"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:55
msgid ""
"Motor Safety is a mechanism in WPILib that takes the concept of a watchdog "
"and breaks it out into one watchdog (Motor Safety timer) for each individual"
" actuator. Note that this protection mechanism is in addition to the System "
"Watchdog which is controlled by the Network Communications code and the FPGA"
" and will disable all actuator outputs if it does not receive a valid data "
"packet for 125ms."
msgstr ""
"Motor Safety 是 WPILib 中的一种机制，它使用\"看门狗\"的概念并将其分解为给每个单独的执行器分配一个\"看门狗\" "
"(电机安全计时器) 。请注意，此保护机制是系统监视程序的补充。系统监视程序由网络通信代码和 FPGA "
"控制。如果在125毫秒内未收到有效数据包，它将禁用所有执行器输出。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:57
msgid ""
"The purpose of the Motor Safety mechanism is the same as the purpose of a "
"watchdog timer, to disable mechanisms which may cause harm to themselves, "
"people or property if the code locks up and does not properly update the "
"actuator output. Motor Safety breaks this concept out on a per actuator "
"basis so that you can appropriately determine where it is necessary and "
"where it is not. Examples of mechanisms that should have motor safety "
"enabled are systems like drive trains and arms. If these systems get latched"
" on a particular value they could cause damage to their environment or "
"themselves. An example of a mechanism that may not need motor safety is a "
"spinning flywheel for a shooter. If this mechanism gets latched on a "
"particular value it will simply continue spinning until the robot is "
"disabled. By default Motor Safety is enabled for RobotDrive, "
"DifferentialDrive, KilloughDrive, and MecanumDrive objects and disabled for "
"all other motor controllers and servos."
msgstr ""
"Motor Safety 机制的目的与监视定时器的目的相同，即在代码锁定或未正确更新执行器输出时，禁用可能会对自身、人员或财产造成伤害的机制。Motor"
" Safety 在每个执行器上部署突破了这一概念，因此您可以适当地确定在哪些地方有必要使用，哪些没有必要。例如，像底盘和机械臂这样的系统应该启用 "
"Motor Safety 来保证安全。如果这些系统锁定在特定值上，则可能会对周围或自身造成破坏。而射球装置的飞轮就不需要 Motor Safety "
"。如果此飞轮锁定在特定值上，它将继续旋转直到机器人被禁用。默认情况下，RobotDrive 对象的 Motor Safety "
"是启用的，而所有其他速度控制器和伺服是禁用的。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:59
msgid ""
"The Motor Safety feature operates by maintaining a timer that tracks how "
"long it has been since the feed() method has been called for that actuator. "
"Code in the Driver Station class initiates a comparison of these timers to "
"the timeout values for any actuator with safety enabled every 5 received "
"packets (100ms nominal). The set() methods of each motor controller class "
"and the set() and setAngle() methods of the servo class call feed() to "
"indicate that the output of the actuator has been updated."
msgstr ""
"Motor Safety功 能通过维持计时器来运行，该计时器跟踪自从对该执行器调用feed() 方法以来已有多长时间。Driver Station "
"类中的代码每收到5个包 (名义上 100ms)，就会对这些计时器超时值进行比较。每个速度控制器类的set() 方法以及伺服类的 set() 和 "
"setAngle() 方法调用 feed() 来指示执行器的输出已被更新。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:61
msgid ""
"The Motor Safety interface of motor controllers can be interacted with by "
"the user using the following methods:"
msgstr "用户可以使用以下方法与速度控制器的 \"Motor Safety\" 界面进行交互："

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:79
msgid ""
"By default all RobotDrive objects enable Motor Safety. Depending on the "
"mechanism and the structure of your program, you may wish to configure the "
"timeout length of the motor safety (in seconds). The timeout length is "
"configured on a per actuator basis and is not a global setting. The default "
"(and minimum useful) value is 100ms."
msgstr ""
"默认情况下，所有 RobotDrive 对象都启用 \"Motor Safety\" 。根据程序的机制和结构，您可能希望配置电动机安全的超时时间 "
"(以秒为单位)。超时长度是基于每个执行器配置的，不是全局设置。默认值 (最小可用值) 为100ms。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:82
msgid "Axis Conventions"
msgstr "操纵轴惯例"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:87
msgid ""
"This library uses the NED axes convention (North-East-Down as external "
"reference in the world frame). The positive X axis points ahead, the "
"positive Y axis points right, and the positive Z axis points down. Rotations"
" follow the right-hand rule, so clockwise rotation around the Z axis is "
"positive."
msgstr ""
"WPILib 使用 NED 操纵轴惯例 (在世界座标系中将North-East-Down作为外部参考)。正 X 轴指向前方，正 Y 轴指向右侧，正 Z "
"轴指向下方。旋转遵循右手定则，因此绕 Z 轴的顺时针旋转为正。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:89
msgid ""
"This convention is different than the convention for joysticks which "
"typically have -Y as Up (commonly mapped to throttle) and +X as Right. Pay "
"close attention to the examples below if you want help with typical "
"Joystick->Drive mapping."
msgstr ""
"此约定不同于操纵杆的约定，操纵杆通常将 -Y 表示为 Up (通常映射为节流阀) ，将 +X 表示为 Right "
"。如果您需要典型操纵杆至驱动器映射的帮助，请参考以下示例。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:92
msgid "Using the DifferentialDrive class to control Differential Drive robots"
msgstr "使用DifferentialDrive类控制差分驱动机器人"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:94
msgid ""
"WPILib provides separate Robot Drive classes for the most common drive train"
" configurations (differential, mecanum, and Killough).  The "
"DifferentialDrive class handles the differential drivetrain configuration. "
"These drive bases typically have two or more in-line traction or omni wheels"
" per side (e.g., 6WD or 8WD) and may also be known as \"skid-steer\", \"tank"
" drive\", or \"West Coast Drive\" (WCD). The Kit of Parts drivetrain is an "
"example of a differential drive. There are methods to control the drive with"
" 3 different styles (\"Tank\", \"Arcade\", or \"Curvature\"), explained in "
"the article below."
msgstr ""
"WPILib为最常见的传动系统配置（差分驱动，麦克纳姆和基洛）提供了单独的机器人驱动器类。 "
"DifferentialDrive类处理差分驱动底盘配置。这些底盘通常每侧具有两个或多个串联牵引力或全向轮（例如6WD或8WD），也可以称为“滑行转向”，“油箱驱动器”或“西海岸驱动器”（WCD）"
" 。Kit of "
"Parts底盘是差速器驱动的一个示例。有几种方法可以用三种不同的样式（“坦克”，“街机”或“曲率”）控制驱动器，下面的文章对此进行了说明。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:96
msgid ""
"DifferentialDrive is a method provided for the control of \"skid-steer\" or "
"\"West Coast\" drivetrains, such as the Kit of Parts chassis. Instantiating "
"a DifferentialDrive is as simple as so:"
msgstr ""
"DifferentialDrive 是一种用于控制 \"skid-steer\" 或 \"West Coast\" 类型的底盘 (例如 KoP 底盘) "
"的方法。实例化 DifferentialDrive 就是如下那么简单："

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:134
msgid "Multi-Motor DifferentialDrive with SpeedControllerGroups"
msgstr "使用 SpeedControllerGroups 实现多电机差速器"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:136
msgid ""
"Many FRC\\ |reg| drivetrains have more than 1 motor on each side. In order "
"to use these with DifferentialDrive, the motors on each side have to be "
"collected into a single SpeedController, using the SpeedControllerGroup "
"class. The examples below show a 4 motor (2 per side) drivetrain. To extend "
"to more motors, simply create the additional controllers and pass them all "
"into the SpeedController group constructor (it takes an arbitrary number of "
"inputs)."
msgstr ""
"许多 FRC\\ |reg| 底盘的每一侧都至少有2个电机。为了将它们与 DifferentialDrive 一起使用，必须使用 "
"SpeedControllerGroup 类将每一侧的电动机收集到单个 SpeedController 中。以下示例显示了4电机 (每侧2个) "
"的底盘。要扩展到更多电机，只需创建其他控制器，然后将它们全部传递给 SpeedController 组构造函数 (需要任意数量的输入)。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:186
msgid "Drive Modes"
msgstr "驱动模式"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:188
msgid ""
"The DifferentialDrive class contains three different default modes of "
"driving your robot's motors."
msgstr "DifferentialDrive 类包含三种不同的驱动机器人电机的默认模式"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:190
msgid "Tank Drive, which controls the left and right side independently"
msgstr "Tank Drive，可以独立控制底盘的左右侧"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:191
msgid "Arcade Drive, which controls a forward and turn speed"
msgstr "Arcade Drive，控制前进和转弯速度"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:192
msgid ""
"Curvature Drive, a subset of Arcade Drive, which makes your robot handle "
"like a car with constant-curvature turns."
msgstr "Curvature Drive, 该模式是街机模式的子模式，可以使机器人转恒定曲率的弯。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:194
msgid ""
"The DifferentialDrive class contains three default methods for controlling "
"skid-steer or WCD robots. Note that you can create your own methods of "
"controlling the robot's driving and have them call tankDrive() with the "
"derived inputs for left and right motors."
msgstr ""
"如上所述，DifferentialDrive 类包含了三种默认方法，用于控制 skid-steer 或 WCD "
"类型的机器人。请注意，你可以创建自己的方法来控制机器人移动，并使他们使用左右马达的派生参数调用 tankDrive() 方法。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:196
msgid ""
"The Tank Drive mode is used to control each side of the drivetrain "
"independently (usually with an individual joystick axis controlling each). "
"This example shows how to use the Y-axis of two separate joysticks to run "
"the drivetrain in Tank mode. Construction of the objects has been omitted, "
"for above for drivetrain construction and here for Joystick construction."
msgstr ""
"Tank Drive用于独立控制左侧和右侧 (通常是通过单独的操纵杆来控制每一侧)。 此示例显示了如何使用两个单独的操纵杆的 Y 轴以 Tank "
"模式运行底盘。在上面的构造动力传动系统和此处的构造操纵杆中，对象的构造已被省略。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:198
msgid ""
"The Arcade Drive mode is used to control the drivetrain using speed/throttle"
" and rotation rate. This is typically used either with two axes from a "
"single joystick, or split across joysticks (often on a single gamepad) with "
"the throttle coming from one stick and the rotation from another. This "
"example shows how to use a single joystick with the Arcade mode. "
"Construction of the objects has been omitted, for above for drivetrain "
"construction and here for Joystick construction."
msgstr ""
"Arcade Drive 用于通过加减速和转速来控制底盘。通常用一个摇杆的两个操纵轴，或使用两个摇杆 (通常使用一个手柄) "
"其中一个摇杆控制加速，另一个控制旋转。此示例显示了如何在 Arcade "
"模式下使用单个摇杆。在上面示例的中的构造动力系统对象和此处的构造摇杆对象已被省略。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:200
msgid ""
"Like Arcade Drive, the Curvature Drive mode is used to control the "
"drivetrain using speed/throttle and rotation rate. The difference is that "
"the rotation control input controls the radius of curvature instead of rate "
"of heading change, much like the steering wheel of a car. This mode also "
"supports turning in place, which is enabled when the third :code:`boolean` "
"parameter is true."
msgstr ""
"与 Arcade Drive 一样，Curvature Drive 模式用于通过速度/油门和旋转来控制传动系统 "
"。不同之处在于，旋转参数输入的是曲率半径而不是转速。此模式还支持原地旋转，只需将第三个 :code:`boolean` 参数的值调整为 true "
"即可启用 。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:231
msgid "Using the MecanumDrive class to control Mecanum Drive robots"
msgstr "使用 MecanumDrive 类控制麦克纳姆驱动机器人"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:233
msgid ""
"MecanumDrive is a method provided for the control of holonomic drivetrains "
"with Mecanum wheels, such as the Kit of Parts chassis with the mecanum drive"
" upgrade kit, as shown above. Instantiating a MecanumDrive is as simple as "
"so:"
msgstr ""
"MecanumDrive 是一种用于控制带有麦克纳姆轮的底盘的方法，例如上面的带有麦克纳姆驱动器升级套件的 Kit of Parts 底盘。实例化 "
"MecanumDrive 简单如下："

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:254
msgid "Mecanum Drive Modes"
msgstr "Mecanum 驱动模式"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:256
msgid ""
"The drive axis conventions are different from common joystick axis "
"conventions. See the `Axis Conventions`_ above for more information."
msgstr "驱动操纵轴的配置不同于常规的摇杆操纵轴。有关更多信息，请参见上面的操纵轴惯例。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:258
msgid ""
"The MecanumDrive class contains two different default modes of driving your "
"robot's motors."
msgstr "MecanumDrive 类包含两种不同的驱动机器人电机的默认模式。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:260
msgid ""
"driveCartesian: Angles are measured clockwise from the positive X axis. The "
"robot's speed is independent from its angle or rotation rate."
msgstr "driveCartesian：角度从X轴正方向顺时针测量。机器人的速度与其角度或旋转速度无关。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:262
msgid ""
"drivePolar: Angles are measured counter-clockwise from straight ahead. The "
"speed at which the robot drives (translation) is independent from its angle "
"or rotation rate."
msgstr "drivePolar: 角度从正前方逆时针测量。机器人 (平移) 的速度与其角度或旋转速度无关。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:281
msgid "Field-Oriented Driving"
msgstr "场地坐标系驾驶"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:283
msgid ""
"A 4th parameter can be supplied to the ``driveCartesian(double ySpeed, "
"double xSpeed, double zRotation, double gyroAngle)`` method, the angle "
"returned from a Gyro sensor. This will adjust the rotation value supplied. "
"This is particularly useful with mecanum drive since, for the purposes of "
"steering, the robot really has no front, back or sides. It can go in any "
"direction. Adding the angle in degrees from a gyro object will cause the "
"robot to move away from the drivers when the joystick is pushed forwards, "
"and towards the drivers when it is pulled towards them, regardless of what "
"direction the robot is facing."
msgstr ""
"可以向 driveCartesian(double ySpeed, double xSpeed, double zRotation, double "
"gyroAngle) 方法提供第4个参数，这将调整提供的旋转值。这对于Mecanum "
"驱动特别有用，因为为了转向，机器人实际上没有前，后或侧面。它可以朝任何方向前进。不管机器人面向哪个方向，与陀螺仪度数的角度相加会使在向前推动操纵杆时机器人远离操作手，而在将操纵杆向他们拉时会使其朝驱动器移动。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:285
msgid ""
"The use of field-oriented driving makes often makes the robot much easier to"
" drive, especially compared to a \"robot-oriented\" drive system where the "
"controls are reversed when the robot is facing the drivers."
msgstr ""
"使用场地座标系通常使机器人更容易操纵，特别是与 \"robot-oriented\" "
"的驱动系统相比，在场地坐标系统中，当机器人面对驾驶员时，控制命令不会被反转。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:287
msgid ""
"Just remember to get the gyro angle each time ``driveCartesian()`` is "
"called."
msgstr "记住，每次调用 driveCartesia() 都需要读取并输入一次陀螺仪角度。"

#: ../../frc-docs/source/docs/software/actuators/wpi-drive-classes.rst:289
msgid ""
"Many teams also like to ramp the joysticks inputs over time to promote a "
"smooth acceleration and reduce jerk.  This can be accomplished with a "
":ref:`Slew Rate Limiter <docs/software/advanced-controls/filters/slew-rate-"
"limiter:Slew Rate Limiter>`."
msgstr ""
"许多团队还喜欢随着时间的推移逐渐增加操纵杆的输入量，以促进平稳的加速并减少颠簸。这可以通过:ref:`转换速率限制器 <docs/software"
"/advanced-controls/filters/slew-rate-limiter:Slew Rate Limiter>`来实现。"
