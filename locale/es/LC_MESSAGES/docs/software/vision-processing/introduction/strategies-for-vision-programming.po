# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, FIRST and other WPILib Contributors. This work is licensed under a Creative Commons Attribution 4.0 International License
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Fernando Soltero <fersg806@gmail.com>, 2020
# Diana Ramos <dianaracasas@gmail.com>, 2020
# Heber Sepúlveda <heber.sepulveda.m@gmail.com>, 2020
# Pierre Cote <persini24@outlook.com>, 2020
# Diego Lozano Rangel, 2022
# Román Hernandez sosa, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2025\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-21 04:06+0000\n"
"PO-Revision-Date: 2020-04-25 02:05+0000\n"
"Last-Translator: Román Hernandez sosa, 2023\n"
"Language-Team: Spanish (Mexico) (https://app.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:4
msgid "Strategies for Vision Programming"
msgstr "Estrategias para la programación de la visión "

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:6
msgid ""
"Using computer vision is a great way of making your robot be responsive to "
"the elements on the field and make it much more autonomous. Often in FRC\\ "
"|reg| games there are bonus points for autonomously shooting balls or other "
"game pieces into goals or navigating to locations on the field. Computer "
"vision is a great way of solving many of these problems. And if you have "
"autonomous code that can do the challenge, then it can be used during the "
"teleop period as well to help the human drivers."
msgstr ""
"Usar la visión por computadora es una gran manera de hacer que tu robot "
"responda a los elementos en el campo y hacerlo mucho más autónomo. A menudo "
"en los juegos de FRC\\ |reg|  hay puntos de bonificación por disparar de "
"forma autónoma pelotas u otras piezas de juego a las metas o navegar a "
"lugares en el campo. La visión por computador es una gran manera de resolver"
" muchos de estos problemas. Y si tienes código autónomo que puede hacer el "
"desafío, entonces puede ser usado durante el período de teleoperado para "
"ayudar a los conductores."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:8
msgid ""
"There are many options for choosing the components for vision processing and"
" where the vision program should run. WPILib and associated tools support a "
"number of options and give teams a lot of flexibility to decide what to do. "
"This article will attempt to give you some insight into many of the choices "
"and tradeoffs that are available."
msgstr ""
"Hay muchas opciones para elegir los componentes para el procesamiento de la "
"visión y donde el programa de visión debería funcionar. WPILib y las "
"herramientas asociadas apoyan un número de opciones y dan a los equipos "
"mucha flexibilidad para decidir qué hacer. Este artículo tratará de darte un"
" poco de de muchas de las opciones y compensaciones que están disponibles."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:14
msgid "OpenCV Computer Vision Library"
msgstr "Biblioteca de Visión por Computadora OpenCV"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:19
msgid "Vision Code on roboRIO"
msgstr "Código de visión en roboRIO"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:28
msgid ""
"Using functions provided by the CameraServer class, the video stream can be "
"sent to dashboards such as Shuffleboard so operators can see what the camera"
" sees. In addition, annotations can be added to the images using OpenCV "
"commands so targets or other interesting objects can be identified in the "
"dashboard view."
msgstr ""
"Utilizando las funciones proporcionadas por la clase CameraServer, el flujo "
"de vídeo puede ser enviado a tableros como el Shuffleboard para que los "
"operadores puedan ver lo que la cámara ve. Además, se pueden agregar "
"anotaciones a las imágenes usando comandos OpenCV para que los objetivos u "
"otros interesantes, los objetos pueden ser identificados en la vista del "
"tablero."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:31
msgid "Vision Code on DS Computer"
msgstr "Código de visión en computadora DS"

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:43
msgid "Vision Code on Coprocessor"
msgstr "Código de video en coprocesador "

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:48
msgid ""
"Coprocessors such as the Raspberry Pi are ideal for supporting vision code "
"(see :ref:`docs/software/vision-processing/wpilibpi/using-the-raspberry-pi-"
"for-frc:Using the Raspberry Pi for FRC`). The advantage is that they can run"
" full speed and not interfere with the robot program. In this case, the "
"camera is probably connected to the coprocessor or (in the case of Ethernet "
"cameras) an Ethernet switch on the robot. The program can be written in any "
"language; Python is a good choice because of its simple bindings to OpenCV "
"and NetworkTables. Some teams have used high performance vision coprocessors"
" such as the Nvidia Jetson for fastest speed and highest resolution, "
"although this approach generally requires advanced Linux and programming "
"knowledge."
msgstr ""
"Los coprocesadores como el Pi de Raspberry son ideales para apoyar el código"
" de visión (ver :ref:`docs/software/vision-processing/frcvision/using-the-"
"raspberry-pi-for-frc:Using the Raspberry Pi for FRC`). La ventaja es que "
"pueden correr a toda velocidad y no interferir con el programa de robots. En"
" este caso, la cámara está probablemente conectada al coprocesador o (en el "
"caso de las cámaras Ethernet) un interruptor Ethernet en el robot. El "
"programa puede ser escrito en cualquier idioma; Python es una buena elección"
" por su simple unión a OpenCV y NetworkTables. Algunos equipos han utilizado"
" coprocesadores de visión de alto rendimiento como el Nvidia Jetson para una"
" mayor velocidad y resolución, aunque este enfoque generalmente requiere "
"conocimientos avanzados de Linux y de programación."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:50
msgid ""
"This approach takes a bit more programming expertise as well as a small "
"amount of additional weight, but otherwise it brings the best of both worlds"
" compared to the other two approaches, as coprocessors are much faster than "
"the roboRIO and the image processing can be performed with minimal latency "
"or bandwidth use."
msgstr ""
"Este enfoque requiere un poco más de experiencia en programación así como "
"una pequeña cantidad adicional de espacio pero, por lo demás, aporta lo "
"mejor de ambos mundos en comparación con los otros dos enfoques, ya que los "
"coprocesadores son mucho más rápidos que el roboRIO y el procesamiento de la"
" imagen se puede realizar con un mínimo de latencia o uso de ancho de banda."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:52
msgid ""
"Data can be sent from the vision program on the coprocessor to the robot "
"using NetworkTables or a private protocol over a network or serial "
"connection."
msgstr ""
"Los datos pueden ser enviados desde el programa de visión en el coprocesador"
" al robot usando NetworkTables o un protocolo privado a través de una red o "
"una conexión en serie."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:55
msgid "Camera Options"
msgstr "Opciones de cámara "

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:57
msgid ""
"There are a number of camera options supported by WPILib. Cameras have a "
"number of parameters that affect operation; for example, frame rate and "
"image resolution affect the quality of the received images, but when set too"
" high impact processing time and, if sent to the driver station, may exceed "
"the available bandwidth on the field."
msgstr ""
"Hay un número de opciones de cámara soportadas por WPILib. Las cámaras "
"tienen un número de parámetros que afectan al funcionamiento; por ejemplo, "
"la velocidad de fotogramas y la resolución de la imagen afectan a la calidad"
" de las imágenes recibidas, pero cuando se establece un tiempo de "
"procesamiento de impacto demasiado alto y, si se envía a la estación del "
"conductor, puede exceder el ancho de banda disponible en el campo."

#: ../../frc-docs/source/docs/software/vision-processing/introduction/strategies-for-vision-programming.rst:59
msgid ""
"The CameraServer class in C++ and Java is used to interface with cameras "
"connected to the robot. It retrieve frames for local processing through a "
"Source object and sends the stream to your driver station for viewing or "
"processing there."
msgstr ""
"La clase CameraServer en C++ y Java se utiliza para interactuar con las "
"cámaras conectadas al robot. Recupera cuadros para el procesamiento local a "
"través de un objeto fuente y envía el flujo a su puesto de conductor para "
"ser visto o procesado allí."
