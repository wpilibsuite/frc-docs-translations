# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Fernando Soltero <fersg806@gmail.com>, 2020
# Diana Ramos <dianaracasas@gmail.com>, 2021
# Heber Sepúlveda <heber.sepulveda.m@gmail.com>, 2021
# Paulina Maynez <paump22@hotmail.com>, 2021
# Austin Shalit <austinshalit@gmail.com>, 2021
# Luis_Hernández, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2022\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-01 04:07+0000\n"
"PO-Revision-Date: 2020-10-04 04:16+0000\n"
"Last-Translator: Luis_Hernández, 2021\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:2
msgid "Introduction to State-Space Control"
msgstr "Introducción al Control del Estado-Espacio"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:4
msgid ""
"This article is from `Controls Engineering in FRC "
"<https://file.tavsys.net/control/controls-engineering-in-frc.pdf>`__ by "
"Tyler Veness with permission."
msgstr ""
"Este artículo es de `Ingeniería de Controles en FRC "
"<https://file.tavsys.net/control/controls-engineering-in-frc.pdf>`__ por "
"Tyler Veness con permiso."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:7
msgid "From PID to Model-Based Control"
msgstr "De PID a Control Basado en Modelo"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:9
msgid ""
"When tuning PID controllers, we focus on fiddling with controller parameters"
" relating to the current, past, and future :term:`error` (P, I and D terms) "
"rather than the underlying system states. While this approach works in a lot"
" of situations, it is an incomplete view of the world."
msgstr ""
"Al ajustar los controladores PID, nos centramos en jugar con los parámetros "
"del controlador relacionados con el presente, el pasado y el futuro "
":term:`error` (términos P, I y D) en lugar de los estados subyacentes del "
"sistema. Si bien este enfoque funciona en muchas situaciones, es una visión "
"incompleta del mundo."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:11
msgid ""
"Model-based control focuses on developing an accurate model of the "
":term:`system` (mechanism) we are trying to control. These models help "
"inform :term:`gains <gain>` picked for feedback controllers based on the "
"physical responses of the system, rather than an arbitrary proportional "
":term:`gain` derived through testing. This allows us not only to predict "
"ahead of time how a system will react, but also test our controllers without"
" a physical robot and save time debugging simple bugs."
msgstr ""
"El control basado en modelos se enfoca en desarrollar un modelo preciso de "
"el :term:`system` (mecanismo) que estamos tratando de controlar. Estos "
"modelos ayudan a informar :term:`gains <gain>` tomadas de controladores "
"basados en respuestas físicas del sistema, en vez de un arbitrario "
":term:`gain` proporcional derivado mediante pruebas. Esto nos permite no "
"solo predecir a futuro como reaccionará el sistema, y también probará "
"nuestros controladores sin un robot que esté físicamente y ahorrar tiempo "
"depurando errores simples."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:13
msgid ""
"State-space control makes extensive use of linear algebra. More on linear "
"algebra in modern control theory, including an introduction to linear "
"algebra and resources, can be found in Chapter 4 of `Controls Engineering in"
" FRC <https://file.tavsys.net/control/controls-engineering-in-frc.pdf>`__."
msgstr ""
"El control de estado-espacio hace un uso extensivo de algebra lineal. Más en"
" algebra lineal en teoría del control moderna, incluyendo una introducción a"
" algebra lineal y recursos, puede ser encontrada en el Capítulo 4 de "
"`Ingeniería de Controles en FRC <https://file.tavsys.net/control/controls-"
"engineering-in-frc.pdf>`__."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:18
msgid "Vocabulary"
msgstr "Vocabulario"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:20
msgid ""
"For the background vocabulary that will be used throughout this article, see"
" the :ref:`Glossary <docs/software/advanced-controls/controls-"
"glossary:Controls Glossary>`."
msgstr ""
"Para el vocabulario de fondo que se utilizará a lo largo de este artículo, "
"consulte el :ref:`Glosario <docs/software/advanced-controls/controls-"
"glossary:Controls Glossary>`."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:23
msgid "Introduction to Linear Algebra"
msgstr "Introducción a Algebra Lineal"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:25
msgid ""
"For a short and intuitive introduction to the core concepts of Linear "
"Algebra, we recommend chapters 1 through 4 of `3Blue1Brown's Essence of "
"linear algebra series "
"<https://www.youtube.com/watch?v=fNk_zzaMoSs&list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab>`__"
" (Vectors, what even are they?, Linear combinations, span, and basis "
"vectors, Linear transformations and matrices, and Matrix multiplication as "
"composition)."
msgstr ""
"Para una introducción corta e intuitiva a los conceptos básicos de Álgebra "
"Lineal, recomendamos los capítulos 1 al 4 de `Series 3Blue1Brown Esencia del"
" algebra lineal "
"<https://www.youtube.com/watch?v=fNk_zzaMoSs&list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab>`__"
" (Vectores, ¿qué son esos?, Combinaciones lineales, lapso, y vectores base, "
"Transformaciones lineales y matrices, y Multiplicación de matrices como "
"composición). "

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:28
msgid "What is State-Space?"
msgstr "¿Qué es Estado-Espacio?"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:30
msgid ""
"Recall that 2D space has two axes: x and y. We represent locations within "
"this space as a pair of numbers packaged in a vector, and each coordinate is"
" a measure of how far to move along the corresponding axis. State-space is a"
" `Cartesian coordinate system "
"<https://en.wikipedia.org/wiki/Cartesian_coordinate_system>`__ with an axis "
"for each state variable, and we represent locations within it the same way "
"we do for 2D space: with a list of numbers in a vector. Each element in the "
"vector corresponds to a state of the system. This example shows two example "
"state vectors in the state-space of an elevator model with the states "
":math:`[\\text{position}, \\text{velocity}]`:"
msgstr ""
"Recuerde que el espacio 2D tiene dos ejes: x y y. Nosotros representamos las"
" localidades en éste espacio como un par de números empacados en un vector, "
"y cada coordenada es una medida de que tan lejos moverse por su eje "
"correspondiente. El estado--espacio es un `Sistema cartesiano coordinado "
"<https://en.wikipedia.org/wiki/Cartesian_coordinate_system>`__ con un eje "
"por cada estado de variable, y representamos localidades con el mismo modo "
"que el espacio 2D: con una lista de números en el vector. Cada elemento en "
"el vector corresponde a un estado del sistema. Este ejemplo nos muestra dos "
"ejemplos de vectores de estado en el estado-espacio de un modelo de elevador"
" con los estados :math:`[\\text{position}, \\text{velocity}]`:"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:35
msgid ""
"In this image, the vectors representing states in state-space are arrows. "
"From now on these vectors will be represented simply by a point at the "
"vector's tip, but remember that the rest of the vector is still there."
msgstr ""
"En ésta imagen, los vectores representando estados en estado-espacio son "
"flechas. Desde ahora en éstos vectores serán representados simplemente por "
"un punto en la punta del vector, pero recuerde que el resto del vector "
"seguirá ahi."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:37
msgid ""
"In addition to the :term:`state`, :term:`inputs <input>` and :term:`outputs "
"<output>` are represented as vectors. Since the mapping from the current "
"states and inputs to the change in state is a system of equations, it’s "
"natural to write it in matrix form. This matrix equation can be written in "
"state-space notation."
msgstr ""
"Añadiendo al :term:`estado`, :term:`entradas <input>` y :term:`salidas "
"<output>` son representados como vectores. Dado que el mapeo de los estados "
"actuales y las entradas al cambio de estado es un sistema de ecuaciones, es "
"natural escribirlo en forma de matriz. Esta ecuación matricial se puede "
"escribir en notación de estado-espacio."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:40
msgid "What is State-Space Notation?"
msgstr "¿Qué es la Notación de Estado-Espacio?"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:42
msgid ""
"State-space notation is a set of matrix equations which describe how a "
"system will evolve over time. These equations relate the change in state "
":math:`\\dot{\\mathbf{x}}`, and the :term:`output` :math:`\\mathbf{y}`, to "
"linear combinations of the current state vector :math:`\\mathbf{x}` and "
":term:`input` vector :math:`\\mathbf{u}`."
msgstr ""
"La notación de estado-espacio es un conjunto de ecuaciones matriciales que "
"describen como el sistema evoluciona en el tiempo. Estas ecuaciones muestran"
" el cambio en el estado :math:`\\dot{\\mathbf{x}}`, y el :term:`output` "
":math:`\\mathbf{y}`, para combinaciones lineales del estado actual del "
"vector :math:`\\mathbf{x}` y :term:`input` vector :math:`\\mathbf{u}`."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:44
msgid ""
"State-space control can deal with continuous-time and discrete-time systems."
" In the continuous-time case, the rate of change of the system's state "
":math:`\\mathbf{\\dot{x}}` is expressed as a linear combination of the "
"current state :math:`\\mathbf{x}` and input :math:`\\mathbf{u}`."
msgstr ""
"El control del estado-espacio puede soportar sistemas de tiempo continuo y "
"discreto. En el caso de tiempo continuo, la tasa de cambio del estado del "
"sistema :math:`\\mathbf{\\dot{x}}` es expresado como una combinación lineal "
"el estado actual :math:`\\mathbf{x}` y entrada :math:`\\mathbf{u}`."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:46
msgid ""
"In contrast, discrete-time systems expresses the state of the system at our "
"next timestep :math:`\\mathbf{x}_{k+1}` based on the current state "
":math:`\\mathbf{x}_k` and input :math:`\\mathbf{u}_k`, where :math:`k` is "
"the current timestep and :math:`k+1` is the next timestep."
msgstr ""
"En contraste, los sistemas de tiempo discreto expresan el estado del sistema"
" en nuestro siguiente paso del tiempo :math:`\\mathbf{x}_{k+1}` basado en el"
" estado actual :math:`\\mathbf{x}_k` y la entrada :math:`\\mathbf{u}_k`, "
"donde :math:`k` es el paso de tiempo actual y :math:`k+1` es el siguiente "
"paso de tiempo."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:48
msgid ""
"In both the continuous- and discrete-time forms, the :term:`output` vector "
":math:`\\mathbf{y}` is expressed as a linear combination of the current "
":term:`state` and :term:`input`. In many cases, the output is a subset of "
"the system's state, and has no contribution from the current input."
msgstr ""
"Tanto en la forma de tiempo continuo como en la discreta, el vector "
":term:`salida` :math:`\\mathbf{y}` se expresa como una combinación lineal "
"del :term:`estado` y :term:`entrada` actual. En muchos casos, la salida es "
"un subconjunto de estados del sistema, y no tiene contribución de la entrada"
" actual."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:50
msgid ""
"When modeling systems, we first derive the continuous-time representation "
"because the equations of motion are naturally written as the rate of change "
"of a system's state as a linear combination of its current state and inputs."
" We convert this representation to discrete-time on the robot because we "
"update the system in discrete timesteps there instead of continuously."
msgstr ""
"Cuando modelamos el sistema, primero derivamos la representación del tiempo "
"continuo poruqe las ecuaciones de movimiento son naturalmente escritas como "
"la tasa de cambio de un estado del sistema como una combinación lineal del "
"actual estado y las entradas. Convertimos la representación a tiempo "
"discreto en el robot porque actualizamos el sistema en pasos de tiempo "
"discretos ahí en vez de continuamente."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:52
msgid ""
"The following two sets of equations are the standard form of continuous-time"
" and discrete-time state-space notation:"
msgstr ""
"Los siguientes dos conjuntos de ecuaciones son la forma estándar de la "
"notación estado-espacio del tiempo continuo y tiempo discreto:"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:54
msgid ""
"\\text{Continuous: }\n"
"\\dot{\\mathbf{x}} &= \\mathbf{A}\\mathbf{x} + \\mathbf{B}\\mathbf{u} \\\\\n"
"\\mathbf{y} &= \\mathbf{C}\\mathbf{x} + \\mathbf{D}\\mathbf{u} \\\\\n"
"\\nonumber \\\\\n"
"\\text{Discrete: }\n"
"\\mathbf{x}_{k+1} &= \\mathbf{A}\\mathbf{x}_k + \\mathbf{B}\\mathbf{u}_k \\\\\n"
"\\mathbf{y}_k &= \\mathbf{C}\\mathbf{x}_k + \\mathbf{D}\\mathbf{u}_k\n"
"\n"
msgstr ""
"\\text{Continuous: }\n"
"\\dot{\\mathbf{x}} &= \\mathbf{A}\\mathbf{x} + \\mathbf{B}\\mathbf{u} \\\\\n"
"\\mathbf{y} &= \\mathbf{C}\\mathbf{x} + \\mathbf{D}\\mathbf{u} \\\\\n"
"\\nonumber \\\\\n"
"\\text{Discrete: }\n"
"\\mathbf{x}_{k+1} &= \\mathbf{A}\\mathbf{x}_k + \\mathbf{B}\\mathbf{u}_k \\\\\n"
"\\mathbf{y}_k &= \\mathbf{C}\\mathbf{x}_k + \\mathbf{D}\\mathbf{u}_k\n"
"\n"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:63
msgid ""
"\\begin{array}{llll}\n"
"  \\mathbf{A} & \\text{system matrix}      & \\mathbf{x} & \\text{state vector} \\\\\n"
"  \\mathbf{B} & \\text{input matrix}       & \\mathbf{u} & \\text{input vector} \\\\\n"
"  \\mathbf{C} & \\text{output matrix}      & \\mathbf{y} & \\text{output vector} \\\\\n"
"  \\mathbf{D} & \\text{feedthrough matrix} &  &  \\\\\n"
"\\end{array}\n"
"\n"
msgstr ""
"\\begin{array}{llll}\n"
"\\mathbf{A} & \\text{system matrix} & \\mathbf{x} & \\text{state vector} \\\\\n"
"\\mathbf{B} & \\text{input matrix} & \\mathbf{u} & \\text{input vector} \\\\\n"
"\\mathbf{C} & \\text{output matrix} & \\mathbf{y} & \\text{output vector} \\\\\n"
"\\mathbf{D} & \\text{feedthrough matrix} & & \\\\\n"
"\\end{array}\n"
"\n"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:71
msgid ""
"A continuous-time state-space system can be converted into a discrete-time "
"system through a process called discretization."
msgstr ""
"Un sistema de estado-espacio con tiempo continuo puede ser convertido en un "
"sistema de tiempo discreto mediante un proceso llamado discretización."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:73
msgid ""
"In the discrete-time form, the system's state is held constant between "
"updates. This means that we can only react to disturbances as quickly as our"
" state estimate is updated. Updating our estimate more quickly can help "
"improve performance, up to a point. WPILib's ``Notifier`` class can be used "
"if updates faster than the main robot loop are desired."
msgstr ""
"En la forma de tiempo discreto, el estado del sistema es mantenido "
"constantemente mediante actualizaciones. Esto significa que solo podemos "
"reaccionar a los disturbios tan rápido como nuestra estimación de estado sea"
" actualizada. Actualizando nuestra estimación más rápido puede ayudar a "
"mejorar la actuación, hasta un punto. La clase ``Notifier`` de WPILib se "
"puede utilizar si se desean actualizaciones más rápidas que el bucle "
"principal del robot."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:75
msgid ""
"While a system's continuous-time and discrete-time matrices A, B, C, and D "
"have the same names, they are not equivalent. The continuous-time matrices "
"describes the rate of change of the state, :math:`\\mathbf{x}`, while the "
"discrete-time matrices describe the system's state at the next timestep as a"
" function of the current state and input."
msgstr ""
"Mientras que las matrices A, B, C y D de tiempo continuo y discreto de un "
"sistema tengan los mismos nombres, no son equivalentes. Las matrices de "
"tiempo continuo describen la tasa de cambio del estado, :math:`\\mathbf{x}`,"
" mientras que las matrices de tiempo discreto describen el estado del "
"sistema en el siguiente paso de tiempo como una función del estado actual y "
"la entrada."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:77
msgid ""
"WPILib's LinearSystem takes continuous-time system matrices, and converts "
"them internally to the discrete-time form where necessary."
msgstr ""
"El Sistema lineal de WPILib toma las matrices del sistema de tiempo "
"continuo, y las convierte internamente al tiempo discreto donde sea "
"necesario."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:80
msgid "State-space Notation Example: Flywheel from kV and kA"
msgstr "Ejemplo de notación de estado-espacio: Volante desde kV y kA"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:82
msgid ""
":ref:`Recall <docs/software/advanced-"
"controls/controllers/feedforward:SimpleMotorFeedforward>` that we can model "
"the motion of a flywheel connected to a brushed DC motor with the equation "
":math:`V = kV \\cdot v + kA \\cdot a`, where V is voltage output, v is the "
"flywheel's angular velocity and a is its angular acceleration. This equation"
" can be rewritten as :math:`a = \\frac{V - kV \\cdot v}{kA}`, or :math:`a = "
"\\frac{-kV}{kA} \\cdot v + \\frac{1}{kA} \\cdot V`. Notice anything "
"familiar? This equation relates the angular acceleration of the flywheel to "
"its angular velocity and the voltage applied."
msgstr ""
":ref:`Recuerde <docs/software/advanced-"
"controls/controllers/feedforward:SimpleMotorFeedforward>` que podemos "
"modelar el movimiento de un volante conectado a un motor de corriente "
"continua con la ecuación :math:`V = kV \\cdot v + kA \\cdot a`, donde V es "
"la salida del voltaje, v es la velocidad angular del volate y a es la "
"aceleración angular. Esta ecuación puede reescribirse como:math:`a = "
"\\frac{V - kV \\cdot v}{kA}`, o :math:`a = \\frac{-kV}{kA} \\cdot v + "
"\\frac{1}{kA} \\cdot V`. ¿Ve algo familiar? Esta ecuación relata la "
"aceleración angular del volante a su velocidad angular y el voltaje "
"aplicado."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:84
msgid ""
"We can convert this equation to state-space notation. We can create a system"
" with one state (velocity), one :term:`input` (voltage), and one "
":term:`output` (velocity). Recalling that the first derivative of velocity "
"is acceleration, we can write our equation as follows, replacing velocity "
"with :math:`\\mathbf{x}`, acceleration with :math:`\\mathbf{\\dot{x}}`, and "
"voltage :math:`\\mathbf{V}` with :math:`\\mathbf{u}`:"
msgstr ""
"Podemos convertir esta ecuación a notación estado-espacio. Podemos crear un "
"sistema con un estado (velocidad), una :term:`entrada` (voltaje), y una "
":term:`salida` (velocidad). Recuerde que la primera derivada de la velocidad"
" es la aceleración, podemos escribir nuestra ecuación como sigue, "
"reemplazando velocidad con :math:`\\mathbf{x}`, aceleración con "
":math:`\\mathbf{\\dot{x}}`, y voltaje :math:`\\mathbf{V}` con "
":math:`\\mathbf{u}`:"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:86
msgid ""
"\\mathbf{\\dot{x}} = \\begin{bmatrix}\\frac{-kV}{kA}\\end{bmatrix} \\mathbf{x} + \\begin{bmatrix}\\frac{1}{kA}\\end{bmatrix} \\mathbf{u}\n"
"\n"
msgstr ""
"\\mathbf{\\dot{x}} = \\begin{bmatrix}\\frac{-kV}{kA}\\end{bmatrix} \\mathbf{x} + \\begin{bmatrix}\\frac{1}{kA}\\end{bmatrix} \\mathbf{u}\n"
"\n"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:92
msgid "Visualizing State-Space Responses: Phase Portrait"
msgstr "Visualizando las Respuestas del Estado-Espacio: Retrato de Fase"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:94
msgid ""
"A `phase portrait <https://en.wikipedia.org/wiki/Phase_portrait>`__ can help"
" give a visual intuition for the response of a system in state-space. The "
"vectors on the graph have their roots at some point :math:`\\mathbf{x}` in "
"state-space, and point in the direction of :math:`\\mathbf{\\dot{x}}`, the "
"direction that the system will evolve over time. This example shows a model "
"of a pendulum with the states of angle and angular velocity."
msgstr ""
"Un `retrato de fase <https://en.wikipedia.org/wiki/Phase_portrait>`__ puede "
"ayudar a dar intuición visual para la respuesta de un sistema en estado-"
"espacio. Estos vectores en el gráfico tienen sus raíces en algún punto "
":math:`\\mathbf{x}` en el estado-espacio, y apunta en la dirección de "
":math:`\\mathbf{\\dot{x}}`, la dirección que el sistema evolucionará pasando"
" el tiempo. Este ejemplo muestra un modelo de un péndulo con los estados del"
" ángulo y velocidad angular."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:96
msgid ""
"To trace a potential trajectory that a system could take through state-"
"space, choose a point to start at and follow the arrows around. In this "
"example, we might start at :math:`[-2, 0]`. From there, the velocity "
"increases as we swing through vertical and starts to decrease until we reach"
" the opposite extreme of the swing. This cycle of spinning about the origin "
"repeats indefinitely."
msgstr ""
"Para trazar una trayectoria potencial que un sistema puede tomar por el "
"estado-espacio, escoja un punto para empezar y siga las flechas alrededor. "
"En éste ejemplo, empezaremos en :math:`[-2, 0]`. Desde aquí, la velocidad "
"aumenta como se balancea verticalmente y empieza a reducir hasta que alcanza"
" el extremo opuesto del columpio. Este ciclo de giro sobre el origen se "
"repite indefinidamente."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:101
msgid ""
"Note that near the edges of the phase portrait, the X axis wraps around as a"
" rotation of :math:`\\pi` radians counter clockwise and a rotation of "
":math:`\\pi` radians clockwise will end at the same point."
msgstr ""
"Note que cerca de los bordes del retrato de fase, el eje X se envuelve como "
"una rotación de  :math:`\\pi` radianes en sentido de las manecillas del "
"reloj y una rotación de :math:`\\pi` radianes en sentido de las manecillas "
"del reloj terminará con el mismo punto."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:103
msgid ""
"For more on differential equations and phase portraits, see `3Blue1Brown's "
"Differential Equations video "
"<https://www.youtube.com/watch?v=p_di4Zn4wz4>`__ -- they do a great job of "
"animating the pendulum phase space at around 15:30."
msgstr ""
"Para más en ecuaciones diferenciales y retratos de fase, vea `el video de "
"3Blue1Brown Ecuaciones Diferenciales "
"<https://www.youtube.com/watch?v=p_di4Zn4wz4>`__ -- hacen un gran trabajo de"
" animación de la fase del péndulo alrededor del 15:30."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:106
msgid "Visualizing Feedforward"
msgstr "Visualizando Feedfoward"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:108
msgid ""
"This phase portrait shows the \"open loop\" responses of the system -- that "
"is, how it will react if we were to let the state evolve naturally. If we "
"want to, say, balance the pendulum horizontal (at :math:`(\\frac{\\pi}{2}, "
"0)` in state space), we would need to somehow apply a control :term:`input` "
"to counteract the open loop tendency of the pendulum to swing downward. This"
" is what feedforward is trying to do -- make it so that our phase portrait "
"will have an equilibrium at the :term:`reference` position (or setpoint) in "
"state-space."
msgstr ""
"Este retrato de fase muestra las respuestas de \"bucle abierto\" del "
"sistema, es decir, cómo reaccionará si dejamos que el estado evolucione "
"naturalmente. Si queremos, digamos, equilibrar el péndulo horizontal (en "
":math:`(\\frac{\\pi}{2}, 0)` en el espacio de estados), necesitaríamos "
"aplicar de alguna manera un control :term:`input` para contrarrestar la "
"tendencia de bucle abierto del péndulo a oscilar hacia abajo. Esto es lo que"
" el feedforward está tratando de hacer: hacerlo de manera que nuestro "
"retrato de fase tenga un equilibrio en la posición de :term:`reference` (o "
"punto de ajuste) en el espacio de estado."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:110
msgid ""
"Looking at our phase portrait from before, we can see that at "
":math:`(\\frac{\\pi}{2}, 0)` in state space, gravity is pulling the pendulum"
" down with some torque T, and producing some downward angular acceleration "
"with magnitude :math:`\\frac{\\tau}{I}`, where I is angular :term:`moment of"
" inertia` of the pendulum. If we want to create an equilibrium at our "
":term:`reference` of :math:`(\\frac{\\pi}{2}, 0)`, we would need to apply an"
" :term:`input` can counteract the system's natural tendency to swing "
"downward. The goal here is to solve the equation :math:`\\mathbf{0 = Ax + "
"Bu}` for :math:`\\mathbf{u}`. Below is shown a phase portrait where we apply"
" a constant :term:`input` that opposes the force of gravity at "
":math:`(\\frac{\\pi}{2}, 0)`:"
msgstr ""
"Observando nuestro retrato de fase de antes, podemos ver que en "
":math:`(\\frac{\\pi}{2}, 0)` en el estado espacio, la gravedad está "
"empujando el péndulo abajo con torque T, y produciendo aceleración angular "
"hacia abajo con magnitud :math:`\\frac{\\tau}{I}`, donde I es el  "
":term:`momento de inercia` angular del péndulo. Si queremos crear un "
"equilibrio en nuestra :term:`referencia` de :math:`(\\frac{\\pi}{2}, 0)`, "
"necesitaremos aplicar una :term:`salida` que pueda contrarrestar la "
"tendencia natural el sistema a balancear hacia abajo. La meta aquí es "
"resolver la ecuación :math:`\\mathbf{0 = Ax + Bu}` para :math:`\\mathbf{u}`."
" Abajo se muestra un retrato de fase donde aplicamos una constante "
":term:`salida` que se opone a la fuerza de gravedad en "
":math:`(\\frac{\\pi}{2}, 0)`:"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:116
msgid "Feedback Control"
msgstr "Control de Retroalimentación"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:118
msgid ""
"In the case of a DC motor, with just a mathematical model and knowledge of "
"all current states of the system (i.e., angular velocity), we can predict "
"all future states given the future voltage inputs. But if the system is "
"disturbed in any way that isn’t modeled by our equations, like a load or "
"unexpected friction, the angular velocity of the motor will deviate from the"
" model over time. To combat this, we can give the motor corrective commands "
"using a feedback controller."
msgstr ""
"En el caso de los motores de control directo, con solo un modelo matemático "
"y conocimiento de todos los estados actuales del sistema (ej. velocidad "
"angular), podemos predecir todos los futuros estados dados en las entradas "
"de futuros voltajes. Pero si el sistema es cambiado en alguna manera que no "
"esté modelada por nuestras ecuaciones, como una carga o fricción inesperada,"
" la velocidad angular del motor va a derivar del modelo por el tiempo. Para "
"combatir esto, podemos dar al motor comandos correctivos usando el "
"controlador de retroalimentación."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:120
msgid ""
"A PID controller is a form of feedback control. State-space control often "
"uses the following :term:`control law`, where :math:`\\mathbf{K}` is some "
"controller :term:`gain` matrix, :math:`\\mathbf{r}` is the :term:`reference`"
" state, and :math:`\\mathbf{x}` is the current state in state-space. The "
"difference between these two vectors, :math:`\\mathbf{r-x}`, is the "
":term:`error`."
msgstr ""
"Un controlador de PID es una forma de control de retroalimentación. El "
"control del estado-espacio usa la siguiente :term:`ley de control`, donde "
":math:`\\mathbf{K}` es algún controlador de matriz de :term:`ganancia`, "
":math:`\\mathbf{r}` es un estado de :term:`referencia`, y "
":math:`\\mathbf{x}` es el estado actual en estado-espacio. La diferencia "
"entre estos dos vectores, :math:`\\mathbf{r-x}`, es el :term:`error`. "

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:122
msgid ""
"\\mathbf{u} = \\mathbf{K(r - x)}\n"
"\n"
msgstr ""
"\\mathbf{u} = \\mathbf{K(r - x)}\n"
"\n"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:125
msgid ""
"This :term:`control law` is a proportional controller for each state of our "
"system. Proportional controllers create software-defined springs that pull "
"our system's state toward our reference state in state-space. In the case "
"that the system being controlled has position and velocity states, the "
":term:`control law` above will behave as a PD controller, which also tries "
"to drive position and velocity error to zero."
msgstr ""
"Esta :term:`ley de control` es un controlador proporcional para cada estado "
"del sistema. Controladores proporcionales crean resortes definidos por el "
"software que empujan nuestro estado del sistema hacia nuestro estado de "
"referencia en el estado-espacio. En el caso de que el sistema siendo "
"controlado tenga estados de posición y velocidad, la :term:`ley de control` "
"de arriba como un controlador PD, que también intenta llevar al error de "
"posición y velocidad a cero."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:127
msgid ""
"Let's show an example of this control law in action. We'll use the pendulum "
"system from above, where the swinging pendulum circled the origin in state-"
"space. The case where :math:`\\mathbf{K}` is the zero matrix (a matrix with "
"all zeros) would be like picking P and D gains of zero -- no control "
":term:`input` would be applied, and the phase portrait would look identical "
"to the one above."
msgstr ""
"Veamos un ejemplo de esta ley de control en acción. Usaremos un sistema de "
"péndulo desde abajo. donde el péndulo balanceante rodea al origen en estado-"
"espacio. El caso donde :math:`\\mathbf{K}` es la matriz cero (una matriz con"
" todos cero) escogería las ganancias P y D de cero -- no se aplicaría "
":term:`entrada` de control, y el retrato de fase va a verse idéntico al de "
"arriba."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:129
msgid ""
"To add some feedback, we arbitrarily pick a :math:`\\mathbf{K}` of [2, 2], "
"where our :term:`input` to the pendulum is angular acceleration. This K "
"would mean that for every radian of position :term:`error`, the angular "
"acceleration would be 2 radians per second squared; similarly, we accelerate"
" by 2 radians per second squared for every radian per second of "
":term:`error`. Try following an arrow from somewhere in state-space inwards "
"-- no matter the initial conditions, the state will settle at the "
":term:`reference` rather than circle endlessly with pure feedforward."
msgstr ""
"Para añadir algo de retroalimentación, arbitrariamente escogemos "
":math:`\\mathbf{K}` of [2, 2], donde nuestra :term:`entrada` al péndulo es "
"la aceleración angular. Esta K significará que por cada radian de posición "
":term:`error`, la aceleración angular será 2 radianes por segundo cuadrado; "
"similarmente, aceleramos por 2 radianes por segundo cuadrado   por cada "
"radian por segundo de :term:`error`. Intente seguir una flecha desde algún "
"punto en el estado-espacio hacia adentro -- no importa las condiciones "
"iniciales, el estado sentará en la  :term:`referencia` en vez de rodear sin "
"fin con feedforward pura."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:134
msgid ""
"But how can we choose an optimal :term:`gain` matrix K for our system? While"
" we can manually choose :term:`gains <gain>` and simulate the system "
"response or tune it on-robot like a PID controller, modern control theory "
"has a better answer: the Linear-Quadratic Regulator (LQR)."
msgstr ""
"¿Pero cómo podemos elegir una matriz K optima de :term:`ganancia` para "
"nuestro sistema? Mientras podemos manualmente elegir las :term:`ganancias "
"<gain>` y simular la respuesta del sistema o sintonizarlo en el robot como "
"controlador PID, la teoría de control moderna tiene mejor respuesta: el "
"Regulador Lineal Cuadrático (LQR, en inglés)"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:137
msgid "The Linear-Quadratic Regulator"
msgstr "El Regulador Lineal Cuadrático"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:139
msgid ""
"Because model-based control means that we can predict the future states of a"
" system given an initial condition and future control inputs, we can pick a "
"mathematically optimal :term:`gain` matrix :math:`\\mathbf{K}`. To do this, "
"we first have to define what a \"good\" or \"bad\" :math:`\\mathbf{K}` would"
" look like. We do this by summing the square of error and control input over"
" time, which gives us a number representing how \"bad\" our control law will"
" be. If we minimize this sum, we will have arrived at the optimal control "
"law."
msgstr ""
"Ya que el control basado en modelo significa que podemos predecir los "
"futuros estados del sistema dada la condición inicial y las entradas de "
"control futuras, podemos tomar una matriz matemática óptima de "
":term:`ganancia` :math:`\\mathbf{K}`. Para hacer esto, primero tenemos que "
"definir que tan \"bien\" o \"mal\" :math:`\\mathbf{K}` se vería. Hacemos "
"esto sumando el cuadrado del error y entrada de control con el paso del "
"tiempo, que nos da un número representado que tan \"mal\" será nuestra ley "
"de control. Si minimizamos la suma, llegaremos a la ley de control óptima."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:142
msgid "LQR: Definition"
msgstr "LQR: Definición"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:144
msgid ""
"Linear-Quadratic Regulators work by finding a :term:`control law` that "
"minimizes the following cost function, which weights the sum of "
":term:`error` and :term:`control effort` over time, subject to the linear "
":term:`system` dynamics :math:`\\mathbf{\\dot{x} = Ax + Bu}`."
msgstr ""
"Los REguladores Lineales Cuadráticos funcionan encontrando la :term:`ley de "
"control` que minimiza el siguiente función de costo , que pesa la suma del "
":term:`error` y :term:`esfuerzo de control` con el paso del tiempo, sujeta a"
" la dinámica lineal del :term:`sistema` :math:`\\mathbf{\\dot{x} = Ax + "
"Bu}`."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:146
msgid ""
"J = \\int\\limits_0^\\infty \\left(\\mathbf{x}^T\\mathbf{Q}\\mathbf{x} + \\mathbf{u}^T\\mathbf{R}\\mathbf{u}\\right) dt\n"
"\n"
msgstr ""
"J = \\int\\limits_0^\\infty \\left(\\mathbf{x}^T\\mathbf{Q}\\mathbf{x} + \\mathbf{u}^T\\mathbf{R}\\mathbf{u}\\right) dt\n"
"\n"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:149
msgid ""
"The :term:`control law` that minimizes :math:`\\mathbf{J}` can be written as"
" :math:`\\mathbf{u = K(r - x)}`, where :math:`r-x` is the :term:`error`."
msgstr ""
"La :term:`ley de control` que minimiza :math:`\\mathbf{J}` puede ser escrita"
" como :math:`\\mathbf{u = K(r - x)}`, donde :math:`r-x` es el :term:`error`."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:151
msgid ""
"LQR design's :math:`\\mathbf{Q}` and :math:`\\mathbf{R}` matrices don't need"
" discretization, but the :math:`\\mathbf{K}` calculated for continuous-time "
"and discrete time :term:`systems <system>` will be different."
msgstr ""
"Las matrices de diseño :math:`\\mathbf{Q}` y :math:`\\mathbf{R}` de LQR no "
"necesitan discretización, pero :math:`\\mathbf{K}` calcula por tiempo "
"continuo y discreto :term:`systems <system>` será diferente."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:154
msgid "LQR: tuning"
msgstr "LQR: Afinación"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:156
msgid ""
"Like PID controllers can be tuned by adjusting their gains, we also want to "
"change how our control law balances our error and input. For example, a "
"spaceship might want to minimize the fuel it expends to reach a given "
"reference, while a high-speed robotic arm might need to react quickly to "
"disturbances."
msgstr ""
"Como los controladores PID pueden ser afinados ajustando sus ganancias, "
"también queremos cambiar como la ley de control balancea el error y la "
"entrada. Por ejemplo, la nave puede querer minimizar el combustible que "
"expande para alcanzar una referencia dada, mientras que un brazo robótico a "
"alta velocidad puede necesitar reaccionar rápidamente a las alteraciones."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:158
msgid ""
"We can weight error and control effort in our LQR with :math:`\\mathbf{Q}` "
"and :math:`\\mathbf{R}` matrices. In our cost function (which describes how "
"\"bad\" our control law will perform), :math:`\\mathbf{Q}` and "
":math:`\\mathbf{R}` weight our error and control input relative to each "
"other. In the spaceship example from above, we might use a "
":math:`\\mathbf{Q}` with relatively small numbers to show that we don't want"
" to highly penalize error, while our :math:`\\mathbf{R}` might be large to "
"show that expending fuel is undesirable."
msgstr ""
"Podemos pesar el esfuerzo del error y control de nuestro LQR con las "
"matrices :math:`\\mathbf{Q}` y :math:`\\mathbf{R}`. En nuestra función de "
"costo (que describe que tan \"mal\" nuestra ley de control actuará), "
":math:`\\mathbf{Q}` y :math:`\\mathbf{R}` pesa nuestro error y entrada de "
"control relativo a cada uno. En nuestro ejemplo del cohete de arriba, "
"podemos usar :math:`\\mathbf{Q}` con números relativamente pequeños para "
"mostrar que no queremos penalizar altamente el error, mientras "

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:160
msgid ""
"With WPILib, the LQR class takes a vector of desired maximum state "
"excursions and control efforts and converts them internally to full Q and R "
"matrices with Bryson's rule. We often use lowercase :math:`\\mathbf{q}` and "
":math:`\\mathbf{r}` to refer to these vectors, and :math:`\\mathbf{Q}` and "
":math:`\\mathbf{R}` to refer to the matrices."
msgstr ""
"Con WPILib, las clases de LQR toman el vector de las excursiones de estado "
"máximo deseado y esfuerzos de control y los convierte internamente a unas "
"matrices completas Q y R con la regla de Bryson. Usualmente usamos el caso "
"menor de :math:`\\mathbf{q}` y :math:`\\mathbf{r}` para referirse a esos "
"vectores, y :math:`\\mathbf{Q}` and :math:`\\mathbf{R}` para referirse a las"
" matrices."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:166
msgid ""
"For example, we might use the following Q and R for an elevator system with "
"position and velocity states."
msgstr ""
"Por ejemplo, podríamos usar el siguiente Q y R para un sistema de elevador "
"con estados de posición y velocidad. "

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:200
msgid "LQR: example application"
msgstr "LQR: ejemplo de aplicación"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:202
msgid ""
"Let's apply a Linear-Quadratic Regulator to a real-world example. Say we "
"have a flywheel velocity system determined through system identification to "
"have :math:`kV = 1 \\frac{\\text{volts}}{\\text{radian per second}}` and "
":math:`kA = 1.5 \\frac{\\text{volts}}{\\text{radian per second squared}}`. "
"Using the flywheel example above, we have the following linear "
":term:`system`:"
msgstr ""
"Apliquemos un Regulador Lineal Cuadrático a un ejemplo de la vida real. "
"Digamos que tenemos un sistema de velocidad del volante mediante un sistema "
"de identificación para tener :math:`kV = 1 "
"\\frac{\\text{volts}}{\\text{radianes por segundo}}` y :math:`kA = 1.5 "
"\\frac{\\text{volts}}{\\text{radianes por segundo cuadrado}}`. Usando el "
"ejemplo del volante de arriba, tenemos el siguiente :term:`sistema` lieal: "

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:204
msgid ""
"\\mathbf{\\dot{x}} = \\begin{bmatrix}\\frac{-kV}{kA}\\end{bmatrix} v + \\begin{bmatrix}\\frac{1}{kA}\\end{bmatrix} V\n"
"\n"
msgstr ""
"\\mathbf{\\dot{x}} = \\begin{bmatrix}\\frac{-kV}{kA}\\end{bmatrix} v + \\begin{bmatrix}\\frac{1}{kA}\\end{bmatrix} V\n"
"\n"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:207
msgid ""
"We arbitrarily choose a desired state excursion (maximum error) of :math:`q "
"= [0.1\\ \\text{rad/sec}]`, and an :math:`\\mathbf{r}` of :math:`[12\\ "
"\\text{volts}]`. After discretization with a timestep of 20ms, we find a "
":term:`gain` of :math:`\\mathbf{K} = ~81`. This K :term:`gain` acts as the "
"proportional component of a PID loop on flywheel's velocity."
msgstr ""
"Arbitrariamente escogemos la excursión del estado deseado (error máximo) de "
":math:`q = [0.1\\ \\text{rad/seg}]`, y un :math:`\\mathbf{r}` de "
":math:`[12\\ \\text{volts}]`. Después de la discretización con paso de 20ms,"
" encontramos una :term:`ganancia` de :math:`\\mathbf{K} = ~81`. Esta "
":term:`ganancia` K actúa como el componente proporcional del bucle PID en la"
" velocidad del volante. "

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:209
msgid ""
"Let's adjust :math:`\\mathbf{q}` and :math:`\\mathbf{r}`. We know that "
"increasing the q elements or decreasing the :math:`\\mathbf{r}` elements we "
"use to create :math:`\\mathbf{Q}` and :math:`\\mathbf{R}` would make our "
"controller more heavily penalize :term:`control effort`, analogous to trying"
" to driving a car more conservatively to improve fuel economy. In fact, if "
"we increase our :term:`error` tolerance q from 0.1 to 1.0, our :term:`gain` "
"matrix :math:`\\mathbf{K}` drops from ~81 to ~11. Similarly, decreasing our "
"maximum voltage :math:`r` to 1.2 from 12.0 produces the same resultant "
":math:`\\mathbf{K}`."
msgstr ""
"Ajustemos :math:`\\mathbf{q}` y :math:`\\mathbf{r}`. Sabemos que "
"incrementando los elementos q o decrementando los elementos "
":math:`\\mathbf{r}` que usamos para crear :math:`\\mathbf{Q}` y "
":math:`\\mathbf{R}` hará penalizar nuestro controlador más fuertemente el "
":term:`esfuerzo de control`, análogo para intentar manejar un automóvil más "
"conservativamente para mejorar ahorro de combustible. De hecho, si "
"incrementamos nuestro :term:`error` de tolerancia q desde 0.1 a 1.0, nuestra"
" matriz de :term:`ganancia` :math:`\\mathbf{K}` cae desde ~81 to ~11. "
"Similarmente, decrementando nuestro voltaje máximo :math:`r` a 1.2 desde "
"12.0 produce el mismo resultado :math:`\\mathbf{K}`."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:211
msgid ""
"The following graph shows the flywheel's angular velocity and applied "
"voltage over time with two different :term:`gain`\\s. We can see how a "
"higher :term:`gain` will make the system reach the reference more quickly "
"(at t = 0.8 seconds), while keeping our motor saturated at 12V for longer. "
"This is exactly the same as increasing the P gain of a PID controller by a "
"factor of ~8x."
msgstr ""
"La siguiente gráfica muestra la velocidad angular del volante y el voltaje "
"aplicado en el tiempo con dos diferentes :term:`ganancia`\\s. Podemos ver "
"como una :term:`ganancia` más alta puede hacer que el sistema alcance la "
"referencia más rápido (a t = 0.8 segundos), mientras dejamos nuestro motor "
"saturado a 12V por más tiempo. Es igual a incrementar la ganancia P de un "
"controlador PID por un factor de ~8x."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:217
msgid "LQR and Measurement Latency Compensation"
msgstr "LQR y Medición de Compensación de Latencia"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:219
msgid ""
"Oftentimes, our sensors have a delay associated with their measurements. For"
" example the SPARK MAX motor controller over CAN can have up to 30ms of "
"delay associated with velocity measurements."
msgstr ""
"La mayoría del tiempo, nuestros sensores tienen un retraso asociado con sus "
"medidas. Por ejemplo el controlador de motor SPARK MAX sobre CAN puede tener"
" 30ms de retraso asociado con las mediciones de velocidad."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:221
msgid ""
"This lag means that our feedback controller will be generating voltage "
"commands based on state estimates from the past. This often has the effect "
"of introducing instability and oscillations into our system, as shown in the"
" graph below."
msgstr ""
"Este retraso significa que nuestro controlador de retroalimentación va a "
"estar generando comandos de voltaje basados en estimaciones de estado del "
"pasado. Regularmente tiene el efecto de introducir inestabilidad y "
"oscilaciones en el sistema, como se muestra en la gráfica de abajo."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:225
msgid ""
"\\mathbf{K_{compensated}} = \\mathbf{K} \\cdot \\left(\\mathbf{A} - \\mathbf{BK}\\right)^{\\text{delay} / dt}\n"
"\n"
msgstr ""
"\\mathbf{K_{compensated}} = \\mathbf{K} \\cdot \\left(\\mathbf{A} - \\mathbf{BK}\\right)^{\\text{delay} / dt}\n"
"\n"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:228
msgid ""
"Multiplying :math:`\\mathbf{K}` by :math:`\\mathbf{A} - \\mathbf{BK}` "
"essentially advances the gains by one timestep. In this case, we multiply by"
" :math:`\\left(\\mathbf{A} - \\mathbf{BK}\\right)^{\\text{delay} / dt}` to "
"advance the gains by measurement's delay."
msgstr ""
"Multiplicando :math:`\\mathbf{K}` por :math:`\\mathbf{A} - \\mathbf{BK}` "
"esencialmente avanza las ganancias por un paso de tiempo. En este caso, "
"multiplicamos por :math:`\\left(\\mathbf{A} - "
"\\mathbf{BK}\\right)^{\\text{delay} / dt}` para avanzar las ganancias por el"
" retraso de las mediciones."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:233
msgid ""
"This can have the effect of reducing :math:`\\mathbf{K}` to zero, "
"effectively disabling feedback control."
msgstr ""
"Esto puede tener efecto de reducir :math:`\\mathbf{K}` a cero, de manera "
"efectiva inhabilitando el control de retroalimentación."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:235
msgid ""
"The SPARK MAX motor controller uses a 40-tap FIR filter with a delay of "
"19.5ms, and status frames are by default sent every 20ms."
msgstr ""
"El controlador de motor SPARK MAX utiliza un filtro FIR de 40 tomas con un "
"retraso de 19,5 ms, y los marcos de estado se envían por defecto cada 20 ms."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:237
msgid ""
"The code below shows how to adjust the LQR controller's K gain for sensor "
"input delays:"
msgstr ""
"El siguiente código muestra cómo ajustar la ganancia K del controlador LQR "
"para los retardos de entrada del sensor:"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:255
msgid "Linearization"
msgstr "Linealización"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:257
msgid ""
"Linearization is a tool used to approximate nonlinear functions and state-"
"space systems using linear ones. In two-dimensional space, linear functions "
"are straight lines while nonlinear functions curve. A common example of a "
"nonlinear function and its corresponding linear approximation is "
":math:`y=\\sin{x}`. This function can be approximated by :math:`y=x` near "
"zero. This approximation is accurate while near :math:`x=0`, but looses "
"accuracy as we stray further from the linearization point. For example, the "
"approximation :math:`\\sin{x} \\approx x` is accurate to within 0.02 within "
"0.5 radians of :math:`y = 0`, but quickly loses accuracy past that. In the "
"following picture, we see :math:`y =\\sin{x}`, :math:`y=x` and the "
"difference between the approximation and the true value of :math:`\\sin{x}` "
"at :math:`x`."
msgstr ""
"La linealización es una herramienta usada para aproximar las funciones no "
"lineales y el sistema de estado-espacio usando las lineales. En el espacio "
"bidimensional, las funciones lineales son líneas derechas mientras las "
"funciones no lineales son curvas. Un ejemplo común de la función no lineal y"
" correspondiente aproximación lineal es :math:`y=\\sin{x}`. Esta función "
"puede estar aproximada por :math:`y=x` cercano a cero. Esta aproximación es "
"precisa mientras esté cerca de :math:`x=0`, pero pierde la precisión "
"mientras más nos alejamos del punto de linealización. Por ejemplo, la "
"aproximación :math:`\\sin{x} \\approx x` es precisa a 0.02 - 0.5 radianes de"
" :math:`y = 0`, pero rápidamente pierde la precisión después de eso. La "
"siguiente imagen, podemos ver:math:`y =\\sin{x}`, :math:`y=x` y la "
"diferencia entre la aproximación y el valor real de :math:`\\sin{x}` en "
":math:`x`."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:262
msgid ""
"We can also linearize state-space systems with nonlinear :term:`dynamics`. "
"We do this by picking a point :math:`\\mathbf{x}` in state-space and using "
"this as the input to our nonlinear functions. Like in the above example, "
"this works well for states near the point about which the system was "
"linearized, but can quickly diverge further from that state."
msgstr ""
"Podemos también linealizar el sistema estado-espacio con :term:`dinámicas` "
"no lineales. Hacemos esto eligiendo un punto :math:`\\mathbf{x}` en el "
"estado-espacio y usando esto como entrada para nuestras funciones no "
"lineales. Como el ejemplo de arriba, esto funciona bien para los estados "
"cerca del punto sobre el cual se linealiza el sistema, pero podemos divergir"
" rápidamente lejos de ese estado."
