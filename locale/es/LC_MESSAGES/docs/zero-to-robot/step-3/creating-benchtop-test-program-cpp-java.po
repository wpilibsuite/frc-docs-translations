# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Austin Shalit <austinshalit@gmail.com>, 2020
# Diana Ramos <dianaracasas@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-13 04:13+0000\n"
"PO-Revision-Date: 2020-10-08 04:19+0000\n"
"Last-Translator: Diana Ramos <dianaracasas@gmail.com>, 2020\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:2
msgid "Creating your Benchtop Test Program (C++/Java)"
msgstr "Creando tu programa de prueba (C++/Java)"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:4
msgid ""
"Once everything is installed, we're ready to create a robot program.  WPILib"
" comes with several templates for robot programs.  Use of these templates is"
" highly recommended for new users; however, advanced users are free to write"
" their own robot code from scratch. This article walks through creating a "
"project from one of the provided examples which has some code already "
"written to drive a basic robot."
msgstr ""
"Una vez que todo esté instalado, estamos listos para crear un programa para "
"el robot. WPILib viene con varias plantillas para los programas. El uso de "
"estas de estas plantillas está altamente recomendado para nuevos usuarios; "
"sin embargo, los usuarios avanzados son libres para escribir su propio "
"código para el robot desde cero. Este artículo es una guía paso a paso para "
"crear un proyecto desde uno de los ejemplos dados, el cual tiene algo de "
"código ya escrito para manejar un robot básico."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:7
msgid "Creating a New WPILib Project"
msgstr "Creando un nuevo proyecto WPILib"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:9
msgid ""
"Bring up the Visual Studio Code command palette with :kbd:`Control+Shift+P`:"
msgstr ""
"Abra la paleta de comandos de Visual Studio Code con :kbd:`Control+Shift+P`:"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:11
msgid "|Command Palette|"
msgstr "|Command Palette|"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:13
msgid ""
"Then, type \"WPILib\" into the prompt.  Since all WPILib commands start with"
" \"WPILib,\" this will bring up the list of WPILib-specific VS Code "
"commands:"
msgstr ""
"Luego, escriba “WPILib” en el aviso. Dado que todos los comandos de WPILib "
"empiezan con “WPILib,” esto abrirá la lista de comandos WPILib específicos "
"para VS Code:"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:15
msgid "|WPILib Commands|"
msgstr "|WPILib Commands|"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:17
msgid "Now, select the \"Create a new project\" command:"
msgstr "Ahora, selecciona el comando “Create a new project”:"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:19
msgid "|Create New Project|"
msgstr "|Create New Project|"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:21
msgid "This will bring up the \"New Project Creator Window:\""
msgstr "Esto abrirá la ventana “New Project Creator Window:”"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:23
msgid "|New Project Creator|"
msgstr "|New Project Creator|"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:25
msgid "The elements of the New Project Creator Window are explained below:"
msgstr ""
"Los elementos de la ventana New Project Creator se explican a continuación:"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:27
msgid ""
"**Project Type**: The kind of project we wish to create.  For this example, "
"select **Example**"
msgstr ""
"**Project Type**: El tipo de proyecto que deseamos crear. Para este ejemplo,"
" seleccione **Example**"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:28
msgid ""
"**Language**: This is the language (C++ or Java) that will be used for this "
"project."
msgstr ""
"**Language**: Este es el lenguaje (C++ o Java) que se utilizará para este "
"proyecto."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:29
msgid ""
"**Project Base**: This box is used to select the base class or example to "
"generate the project from. For this example, select **Getting Started**"
msgstr ""
"**Project Base**: Este recuadro se utiliza para generar el proyecto desde la"
" clase base o ejemplo. Para este ejemplo, seleccione **Getting Started**"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:30
msgid ""
"**Project Location**: This determines the folder in which the robot project "
"will be located."
msgstr ""
"**Project Location**: Esto determina la carpeta en la que se ubicará el "
"proyecto del robot."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:31
msgid ""
"**Create New Folder**: If this is checked, a new folder will be created to "
"hold the project within the previously-specified folder.  If it is *not* "
"checked, the project will be located directly in the previously-specified "
"folder.  An error will be thrown if the folder is not empty and this is not "
"checked."
msgstr ""
"**Create New Folder**: Si está marcada, se creará una nueva carpeta para "
"contener el proyecto dentro de la carpeta previamente especificada. Si *not*"
" está marcado, el proyecto se ubicará directamente en la carpeta previamente"
" especificada. Se generará un error si la carpeta no está vacía y esto no "
"está marcado."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:32
msgid ""
"**Project Name**: The name of the robot project.  This also specifies the "
"name that the project folder will be given if the Create New Folder box is "
"checked."
msgstr ""
"**Project Name**: El nombre del proyecto del robot. Esto también especifica "
"el nombre que se proporcionará a la carpeta del proyecto si la casilla "
"Create New Folder está marcada."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:33
msgid ""
"**Team Number**: The team number for the project, which will be used for "
"package names within the project and to locate the robot when deploying "
"code."
msgstr ""
"**Team Number**: El número de equipo para el proyecto, el cual se utilizará "
"para los nombres de paquetes dentro del proyecto y para localizar el robot "
"al implementar el código."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:34
msgid ""
"**Desktop Support**: Enables unit test and simulation. While WPILib supports"
" this, third party software libraries may not. If libraries do not support "
"desktop, then your code may not compile or may crash. It should be left "
"unchecked unless unit testing or simulation is needed and all libraries "
"support it. For this example, do not check this box."
msgstr ""
"**Desktop Support**: Permite pruebas unitarias y simulación. Mientras WPILib"
" lo admite, las bibliotecas de software de terceros no pueden. Si las "
"bibliotecas no son compatibles con el escritorio, entonces su código puede "
"que no se compile o puede bloquearse. Debe dejarse sin marcar a menos que la"
" unidad de prueba o simulación sea necesaria y todas las bibliotecas lo "
"admitan. Para este ejemplo, no marque esta casilla."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:36
msgid ""
"Once all the above have been configured, click \"Generate Project\" and the "
"robot project will be created."
msgstr ""
"Una vez que se haya configurado todo lo anterior, haga clic en “Generate "
"Project” y el proyecto del robot será generado."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:38
msgid ""
"Any errors in project generation will appear in the bottom right-hand corner"
" of the screen."
msgstr ""
"Cualquier error en la generación del proyecto aparecerá en la esquina "
"inferior derecha de la pantalla."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:41
msgid "Opening The New Project"
msgstr "Abriendo el nuevo proyecto"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:43
msgid ""
"After successfully creating your project, VS Code will give the option of "
"opening the project as shown below. We can choose to do that now or later by"
" typing :kbd:`Ctrl-K` then :kbd:`Ctrl-O` (or just :kbd:`Command+O` on macOS)"
" and select the folder where we saved our project."
msgstr ""
"Después de crear con éxito su proyecto, VS Code le dará la opción de abrir "
"el proyecto como se muestra abajo. Podemos elegir hacer eso ahora o más "
"tarde escribiendo :kbd:`Ctrl-K` y luego :kbd:`Ctrl-O` (o solamente "
":kbd:`Command+O` en macOS) y seleccione la carpeta donde guardamos nuestro "
"proyecto."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:45
msgid ""
"Once opened we will see the project hierarchy on the left. Double clicking "
"on the file will open that file in the editor."
msgstr ""
"Una vez abierto, veremos la jerarquía del proyecto a la izquierda. Al hacer "
"doble clic en el archivo se abre el archivo en el editor."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:47
msgid "|Opened Robot Project|"
msgstr "|Opened Robot Project|"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:50
msgid "C++ Configurations (C++ Only)"
msgstr "Configuraciones C++ (Solo C++)"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:52
msgid ""
"For C++ projects, there is one more step to set up IntelliSense.  Whenever "
"we open a project, we should get a pop-up in the bottom right corner asking "
"to refresh C++ configurations.  Click \"Yes\" to set up IntelliSense."
msgstr ""
"Para proyectos C ++, hay un paso más para configurar IntelliSense. Cada vez "
"que abrimos un proyecto, debería aparecernos una ventana emergente en la "
"esquina inferior derecha pidiendo actualizar las configuraciones de C++. "
"Haga clic en \"Yes\" para configurar IntelliSense."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:54
msgid "|C++ Configurations|"
msgstr "|C++ Configurations|"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:57
msgid "Imports/Includes"
msgstr "Importaciones/Inclusiones"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:77
msgid ""
"Our code needs to reference the components of WPILib that are used. In C++ "
"this is accomplished using ``#include`` statements; in Java it is done with "
"``import`` statements. The program references classes for ``Joystick`` (for "
"driving), ``PWMVictorSPX`` (for controlling motors), ``TimedRobot`` (the "
"base class used for the example), ``Timer`` (used for autonomous), "
"``DifferentialDrive`` (for connecting the joystick control to the motors), "
"and ``LiveWindow`` (C++ only)."
msgstr ""
"Nuestro código necesita hacer referencia a los componentes de WPILib que se "
"utilizan. En C++ esto se logra usando la declaracion ``#include``; en Java "
"se realiza con declaraciones de ``import``. El programa hace referencia a "
"las clases para el ``Joystick`` (para conducir), ``PWMVictorSPX`` (para "
"controlar motores), ``TimedRobot`` (la clase base usada para el ejemplo), "
"``Timer`` (usado para autónomos), ``DifferentialDrive`` (para conectar el "
"control del joystick a los motores) y ``LiveWindow`` (solo C++)."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:80
msgid "Defining the variables for our sample robot"
msgstr "Definiendo las variables para nuestro robot de muestra"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:111
msgid ""
"The sample robot in our examples will have a joystick on USB port 0 for "
"arcade drive and two motors on PWM ports 0 and 1. Here we create objects of "
"type DifferentialDrive (m_robotDrive), Joystick (m_stick) and time "
"(m_timer). This section of the code does three things:"
msgstr ""
"El robot de muestra en nuestros ejemplos tendrá un joystick en el puerto USB"
" 0 para la unidad arcade y dos motores en los puertos PWM 0 y 1. Aquí "
"creamos objetos de tipo DifferentialDrive (m_robotDrive), Joystick (m_stick)"
" y tiempo (m_timer). Esta sección del código tiene tres cosas:"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:113
msgid "Defines the variables as members of our Robot class."
msgstr "Define las variables como miembros de nuestra clase Robot."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:114
msgid "Initializes the variables."
msgstr "Inicializa las variables."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:116
msgid ""
"The variable initializations for C++ are in the ``private`` section at the "
"bottom of the program. This means they are private to the class (``Robot``)."
" The C++ code also sets the Motor Safety expiration to 0.1 seconds (the "
"drive will shut off if we don't give it a command every .1 seconds) and "
"starts the ``Timer`` used for autonomous."
msgstr ""
"La inicialización de variables para C++ está en la sección ``private`` en la"
" parte inferior del programa. Esto significa que son privados para la clase "
"(``Robot``). El código C++ también establece la expiración de la seguridad "
"del motor de 0.1 segundos (la unidad se apagará si no le damos un comando "
"cada .1 segundos) e inicia el ``Timer`` utilizado para autónomo."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:119
msgid "Robot Initialization"
msgstr "Inicialización del robot"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:133
msgid ""
"The ``RobotInit`` method is run when the robot program is starting up, but "
"after the constructor. The ``RobotInit`` for our sample program gets a "
"pointer to the ``LiveWindow`` instance (this is used in the test method "
"discussed below). This method is omitted from the code, meaning the default "
"version will be run (if we wanted to run something here we could provide the"
" code above to override the default)."
msgstr ""
"El método ``RobotInit`` se ejecuta cuando el programa del robot se está "
"iniciando, pero después del constructor. El ``RobotInit`` para nuestro "
"programa de muestra obtiene un puntero a la instancia de ``LiveWindow`` "
"(esto es utilizado en el método de prueba discutido a continuación). Este "
"método se omite del código, lo que significa que ejecutará la versión "
"predeterminada (si quisiéramos ejecutar algo aquí, podríamos proporcionar el"
" código anterior para anular el valor predeterminado)."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:136
msgid "Simple Autonomous Example"
msgstr "Ejemplo de un autónomo simple"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:176
msgid ""
"The ``AutonomousInit`` method is run once each time the robot transitions to"
" autonomous from another mode. In this program, we reset the ``Timer`` and "
"then start it in this method."
msgstr ""
"El método ``AutonomousInit`` se ejecuta una vez cada vez que el robot pasa a"
" ser autónomo de otro modo En este programa, reiniciamos el ``Timer`` y "
"luego lo iniciamos en este método."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:178
msgid ""
"``AutonomousPeriodic`` is run once every period while the robot is in "
"autonomous mode. In the ``TimedRobot`` class the period is a fixed time, "
"which defaults to 20ms. In this example, the periodic code checks if the "
"timer is less than 2 seconds and if so, drives forward at half speed using "
"the ``ArcadeDrive`` method of the ``DifferentialDrive`` class. If more than "
"2 seconds has elapsed, the code stops the robot drive."
msgstr ""
"``AutonomousPeriodic`` se ejecuta una vez cada período mientras el robot "
"está en modo autónomo. En la clase ``TimedRobot`` el período es un tiempo "
"fijo, que por defecto es de 20 ms. En este ejemplo, el código periódico "
"verifica si el temporizador es inferior a 2 segundos y, de ser así, avanza a"
" media velocidad utilizando el método ``ArcadeDrive`` de la clase "
"``DifferentialDrive``. Si tiene más de 2 segundos transcurridos, el código "
"detiene el accionamiento del robot."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:181
msgid "Joystick Control for teleoperation"
msgstr "Control del joystick para teleoperación"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:205
msgid ""
"Like in Autonomous, the Teleop mode has a ``TeleopInit`` and "
"``TeleopPeriodic`` function. In this example we don't have anything to do in"
" ``TeleopInit``, it is provided for illustration purposes only. In "
"``TeleopPeriodic``, the code uses the ``ArcadeDrive`` method to map the "
"Y-axis of the ``Joystick`` to forward/back motion of the drive motors and "
"the X-axis to turning motion."
msgstr ""
"Como en Autónomo, el modo Teleop tiene una función ``TeleopInit`` y "
"``TeleopPeriodic``. En este ejemplo, no tenemos nada que hacer en "
"``TeleopInit``, se proporciona con fines ilustrativos solamente. En "
"``TeleopPeriodic``, el código usa el método``ArcadeDrive`` para mapear el "
"eje Y del ``Joystick`` para avanzar / retroceder los motores de "
"accionamiento y el eje X para girar."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:208
msgid "Test Mode"
msgstr "Modo Test"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:221
msgid ""
"Test Mode is used for testing robot functionality. Similar to "
"``TeleopInit``, the ``TestPeriodic`` is provided here for example."
msgstr ""
"El modo de prueba se usa para probar la funcionalidad del robot. Similar a "
"``TeleopInit``, el ``TestPeriodic`` es proporcionado aquí por ejemplo."

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:232
msgid "Deploying the Project to a Robot"
msgstr "Desplegando el proyecto en un robot"

#: ../../frc-docs/source/docs/zero-to-robot/step-3/creating-benchtop-test-program-cpp-java.rst:234
msgid ""
"Please see the instructions :ref:`here <docs/software/vscode-overview"
"/deploying-robot-code:Building and Deploying Robot Code>` for deploying the "
"program onto a robot."
msgstr ""
"Consulte las instrucciones :ref:`aquí <docs/software/vscode-overview"
"/deploying-robot-code:Building and Deploying Robot Code>` para desplegar el "
"programa en un robot."
