# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, FIRST and other WPILib Contributors
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Regis Bekale <rbekale@robotiquefirstquebec.org>, 2021
# Andre Theberge <atheberge2@videotron.ca>, 2021
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2021\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-09 16:04+0000\n"
"PO-Revision-Date: 2020-04-25 02:07+0000\n"
"Last-Translator: Andre Theberge <atheberge2@videotron.ca>, 2021\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:2
msgid "Creating Custom Data Types"
msgstr "Création de types de données personnalisés"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:3
msgid ""
"Widgets allow us to control and visualize different types of data. This data"
" could be integers and doubles or even Java Objects. In order to display "
"these types of data using widgets, it is helpful to create a container class"
" for them. It is not necessary to create your own Data Class if the widget "
"will handle single fielded data types such as doubles, arrays, or strings."
msgstr ""
"Les widgets nous permettent de contrôler et de visualiser différents types "
"de données. Ces données peuvent être des nombres entiers, doubles ou même "
"des objets Java. Afin d'afficher ces types de données à l'aide de widgets, "
"il est utile de créer une classe conteneur pour eux. Il n'est pas nécessaire"
" de créer votre propre classe de données si le widget gère des types de "
"données en champ unique tels que des doubles, des tableaux ou des chaînes de"
" caractères.."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:6
msgid "Creating The Data Class"
msgstr "Création de la classe de données"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:7
msgid ""
"In this example, we will create a custom data type for a 2D Point and its x "
"and y coordinates. In order to create a custom data type class, it must "
"extend the abstract class `ComplexData "
"<https://github.com/wpilibsuite/shuffleboard/blob/main/api/src/main/java/edu/wpi/first/shuffleboard/api/data/ComplexData.java>`_."
" Your custom data class must also implement the ``asMap()`` method that "
"returns the represented data as a simple map as noted below with the "
"``@Override`` annotation:"
msgstr ""
"Dans cet exemple, nous allons créer un type de données personnalisé pour un "
"point 2D et ses coordonnées x et y. Pour créer une classe de type de données"
" personnalisée, elle doit étendre la classe abstraite `ComplexData "
"<https://github.com/wpilibsuite/shuffleboard/blob/main/api/src/main/java/edu/wpi/first/shuffleboard/api/data/ComplexData.java>`_."
" Votre classe de données personnalisée doit également implémenter la méthode"
" ``asMap()`` qui renvoie les données représentées sous la forme d'une carte "
"simple, comme indiqué ci-dessous avec l'annotation  ``@Override`` :"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:33
msgid ""
"It is also good practice to override the default ``equals`` and ``hashcode``"
" methods to ensure that different objects are considered equivalent when "
"their fields are the same. The ``asMap()`` method should return the data "
"represented in a simple Map object as it will be mapped to the NetworkTables"
" entry it corresponds to. In this case, we can represent the point as its X "
"and Y coordinates and return a ``Map`` containing them."
msgstr ""
"Il est également recommandé de remplacer les méthodes par défaut  ``equals``"
" et ``hashcode`` pour garantir que différents objets sont considérés comme "
"équivalents lorsque leurs champs sont identiques. La méthode ``asMap()`` "
"doit renvoyer les données représentées dans un simple objet Map car il sera "
"mappé à l'entrée NetworkTables à laquelle il correspond. Dans ce cas, nous "
"pouvons représenter le point comme ses coordonnées X et Y et renvoyer une "
"``Map`` les contenant."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:59
msgid ""
"Other methods can be added to retrieve or edit fields and instance "
"variables, however, it is good practice to make these classes immutable to "
"prevent changing the source data objects. Instead, you can make a new copy "
"object instead of manipulating the existing object. For example, if we "
"wanted to change the y coordinate of our point, we can define the following "
"method:"
msgstr ""
"D'autres méthodes peuvent être ajoutées pour récupérer ou modifier des "
"champs et des variables d'instance, mais il est recommandé de rendre ces "
"classes immuables pour éviter de changer les objets de données source. Au "
"lieu de cela, vous pouvez créer une copie du nouvel objet au lieu de "
"manipuler l'objet existant. Par exemple, si nous voulions changer la "
"coordonnée y de notre point, nous pourions définir la méthode suivante:"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:67
msgid ""
"This creates a new ``MyPoint2D`` object and returns it with the new "
"y-coordinate. Same can be done for changing the x coordinate."
msgstr ""
"Cela crée un nouvel objet ``MyPoint2D``  et le renvoie avec la nouvelle "
"coordonnée y. La même chose peut être faite pour changer la coordonnée x."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:70
msgid "Creating a Data Type"
msgstr "Création d'un type de données"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:71
msgid ""
"There are two different data types that can be made: Simple data types that "
"have only one field (ie. a single number or string), and Complex data types "
"that have multiple data fields (ie. multiple strings, multiple numbers)."
msgstr ""
"Il existe deux types de données différents: les types de données simples qui"
" n'ont qu'un seul champ (c'est-à-dire un seul nombre ou chaîne de "
"caractères) et les types de données complexes, qui ont plusieurs champs de "
"données (c'est-à-dire plusieurs chaînes, plusieurs nombres)."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:73
msgid ""
"In order to define a simple data type, the class must extend the "
"``SimpleDataType<DataType>`` class with the data type needed and implement "
"the ``getDefaultValue()`` method. In this example, we will use a double as "
"our simple data type."
msgstr ""
"Afin de définir un type de données simple, la classe doit étendre la classe "
"``SimpleDataType<DataType>``  avec le type de données requis et implémenter "
"la méthode ``getDefaultValue()``. Dans cet exemple, nous utiliserons un "
"double comme type de données simple."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:92
msgid ""
"The class constructor is set to private to ensure that only a single "
"instance of the data type will exist."
msgstr ""
"Le constructeur de classe est défini comme private pour garantir qu'une "
"seule instance du type de données existera."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:94
msgid ""
"In order to define a complex data type, the class must extend the "
"``ComplexDataType`` class and override the ``fromMap()`` and "
"``getDefaultValue()`` methods. We will use our MyPoint2D class as an example"
" to see what a complex data type class would look like."
msgstr ""
"Afin de définir un type de données complexe, la classe doit étendre la "
"classe ``ComplexDataType``  et remplacer les méthodes ``fromMap()`` et "
"``getDefaultValue()``. Nous utiliserons notre classe MyPoint2D comme exemple"
" pour voir à quoi ressemblerait une classe de type de données complexe."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:123
msgid "The following code above works as noted:"
msgstr "Le code suivant ci-dessus fonctionne comme indiqué:"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:125
msgid ""
"The ``fromMap()`` method creates a new MyPoint2D using the values in the "
"NetworkTables entry it is bound to. The ``getOrDefault`` method will return "
"0.0 if it cannot get the entry values. The ``getDefaultValue`` will return a"
" new ``MyPoint2D`` object if no source is present."
msgstr ""
"La méthode ``fromMap()`` crée un nouveau MyPoint2D en utilisant les valeurs "
"de l'entrée NetworkTables à laquelle il est lié. La méthode ``getOrDefault``"
" renverra 0.0 si elle ne peut pas obtenir les valeurs d'entrée. Le "
"``getDefaultValue`` renverra un nouvel objet ``MyPoint2D`` si aucune source "
"n'est présente."

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:129
msgid "Exporting Data Type To Plugin"
msgstr "Exportation du type de données vers le plugin"

#: ../../frc-docs/source/docs/software/wpilib-tools/shuffleboard/custom-widgets/creating-custom-data-types.rst:130
msgid ""
"In order to have the data type be recognized by Shuffleboard, the plugin "
"must export them by overriding the ``getDataTypes`` method. For example,"
msgstr ""
"Afin que le type de données soit reconnu par le Shuffleboard, le plugin doit"
" les exporter en remplaçant la méthode ``getDataTypes``. Par exemple,"
